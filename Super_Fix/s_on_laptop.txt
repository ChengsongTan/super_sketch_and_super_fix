hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hello
 
hello
 
hammer away called 
Sledgehammering... 
hello
 
hammer away called 
Sledgehammering... 
hello
 
hello
 
hello
 
hammer away called 
Sledgehammering... 
hello
 
hammer away called 
Sledgehammering... 
hello
 
hello
 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) HSTATE_general_rule_10_0 i918 nextReqIs_general_rule_13_0
    nextSnpRespIs_general_rule_13_0) 
hello
 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) InvalidStore'_HSTATE InvalidStore'_nextReqIs_invariant_DirtyEvict
    InvalidStore'_nextSnpRespIs i918) 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) InvalidLoad'_HSTATE InvalidLoad'_nextReqIs_invariant_DirtyEvict
    InvalidLoad'_nextSnpRespIs i918) 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) SharedStore'_HSTATE SharedStore'_nextReqIs_invariant_DirtyEvict
    SharedStore'_nextSnpRespIs i918) 
Done 
Done 
get final result 
get final result 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) SharedEvictData'_HSTATE SharedEvictData'_nextReqIs_invariant_DirtyEvict
    SharedEvictData'_nextSnpRespIs i918) 
Done 
get final result 
vampire found a proof... 
vampire: Try this:
  apply (metis CSTATE_disj1 InvalidStore'_nextReqIs_invariant_DirtyEvict
    MESI_State.distinct(163,175) hstate_invariants(24,4) i453 i460 i576) 
vampire found a proof... 
vampire: Try this:
  apply (metis HSTATE_general_rule_10_0 i918 nextReqIs_general_rule_13_0
    nextSnpRespIs_general_rule_13_0) 
hello
 
hello
 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) ISDData_HSTATE i918 nextReqIs_ISDData nextSnpRespIs_general_rule_7_0) 
Done 
get final result 
verit found a proof... 
verit: Try this:
  apply (smt (verit) InvalidStore'_nextReqIs_invariant_not_RdOwn InvalidX_HSTATE1
    ReqType.distinct(39) i918 nextSnpRespIs_general_rule_9_0) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis i918 nextReqIs_remove_op nextSnpRespIs_remove_op remove_instr_HSTATE) 
Done 
get final result 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) HSTATE_IMADData i918 nextReqIs_IMADData nextSnpRespIs_general_rule_5_0) 
Done 
get final result 
e found a proof... 
e: Try this:
  apply (metis CSTATE_inequality_invariant MESI_State.distinct(101,103,121,95) i370 i456
    nextSnpRespIs_general_rule_9_0 nextStore_nextEvict_exclusive) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis CSTATE_disj1 MESI_State.distinct(101,103,105,121,95) i456
    nextSnpRespIs_general_rule_9_0) 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) ISDIData_HSTATE i918 nextReqIs_ISDIData nextSnpRespIs_general_rule_7_0) 
Done 
get final result 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(101,103,105,121,95) i456
    nextSnpRespIs_general_rule_9_0) 
Done 
get final result 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis CSTATE_inequality_invariant MESI_State.distinct(11,13,15,31,5) i456
    nextSnpRespIs_general_rule_9_0) 
e found a proof... 
e: Try this:
  apply (metis CSTATE_disj1 MESI_State.distinct(11,31) hstate_invariants(24,4) i370 i456 i460 i463
    i841 nextSnpRespIs_general_rule_9_0 nextStore_nextEvict_exclusive) 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hello
 
hello
 
Done 
get final result 
e found a proof... 
e: Try this: apply (metis SMADSnpInv_ModifiedM_aux2 i70 nextReqIs_not_various_forms1) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis CSTATE_disj1 CXL_SPG_used_general_rule_6_0 MESI_State.distinct(117,121,133)
    SMADSnpInv_nextReqIs SharedSnpInv_nextReqIs i453) 
hammer away called 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) InvalidLoad'_HSTATE InvalidLoad'_nextReqIs_invariant_DirtyEvict
    InvalidLoad'_nextSnpRespIs i919) 
Done 
get final result 
13.089s elapsed time, 64.922s cpu time, 23.984s GC time 
Done 
get final result 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) SharedStore'_HSTATE SharedStore'_nextReqIs_invariant_DirtyEvict
    SharedStore'_nextSnpRespIs i919) 
Done 
get final result 
12.847s elapsed time, 60.172s cpu time, 23.844s GC time 
hello
 
e found a proof... 
e: Try this: apply (metis i81 nextReqIs_general_rule_8_0 nextReqIs_not_various_forms1) 
hammer away called 
Sledgehammering... 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis CSTATE_disj1 CXL_SPG_used_general_rule_6_0 MESI_State.distinct(199,203,215)
    SMADSnpInv_nextReqIs i453) 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) SharedEvictData'_HSTATE SharedEvictData'_nextReqIs_invariant_DirtyEvict
    SharedEvictData'_nextSnpRespIs i919) 
Done 
hammer away called 
Sledgehammering... 
get final result 
15.454s elapsed time, 66.453s cpu time, 24.641s GC time 
Done 
hammer away called 
Sledgehammering... 
get final result 
hammer away called 
Sledgehammering... 
hello
 
hammer away called 
Sledgehammering... 
hello
 
hello
 
hammer away called 
Sledgehammering... 
hello
 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) ISDData_HSTATE i919 nextReqIs_ISDData nextSnpRespIs_general_rule_7_0) 
Done 
get final result 
15.702s elapsed time, 63.406s cpu time, 17.031s GC time 
hello
 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant
    MESI_State.distinct(339,343,355,369,373,385,497,499,531,533,565,575) i454 i559
    nextReqIs_remove_op remove_instr_HSTATE) 
hello
 
vampire found a proof... 
vampire: Try this:
  apply (metis i919 nextReqIs_remove_op nextSnpRespIs_remove_op remove_instr_HSTATE) 
hello
 
hello
 
vampire found a proof... 
vampire: Try this:
  apply (metis hstate_invariants(17,20,24) i919 nextReqIs_IMADData nextSnpRespIs_general_rule_5_0) 
verit found a proof... 
verit: Try this:
  apply (smt (verit) HSTATE_general_rule_10_0 i919 nextReqIs_general_rule_13_0
    nextSnpRespIs_general_rule_13_0) 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) HSTATE_IMADData i919 nextReqIs_IMADData nextSnpRespIs_general_rule_5_0) 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) ISDIData_HSTATE i919 nextReqIs_ISDIData nextSnpRespIs_general_rule_7_0) 
e found a proof... 
e: Try this:
  apply (metis HSTATE_general_rule_3_0 i919 nextReqIs_general_rule_5_0
    nextSnpRespIs_general_rule_5_0) 
spass found a proof... 
spass: Duplicate proof 
hammer away called 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Duplicate proof 
cvc5 found a proof... 
cvc5: Duplicate proof 
vampire found a proof... 
vampire: Try this:
  apply (metis ISDIData_HSTATE i919 nextReqIs_general_rule_7_0 nextSnpRespIs_general_rule_7_0) 
hammer away called 
Sledgehammering... 
zipperposition found a proof... 
zipperposition: Duplicate proof 
Done 
hammer away called 
Sledgehammering... 
get final result 
19.405s elapsed time, 93.609s cpu time, 27.156s GC time 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis hstate_invariants(17,20,24) i919 nextReqIs_general_rule_5_0
    nextSnpRespIs_general_rule_5_0) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HSTATE_IMADData i919 nextReqIs_general_rule_5_0 nextSnpRespIs_general_rule_5_0) 
hello
 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) InvalidStore'_HSTATE InvalidStore'_nextReqIs_invariant_DirtyEvict
    InvalidStore'_nextSnpRespIs i919) 
zipperposition found a proof... 
Done 
zipperposition: Duplicate proof 
get final result 
verit found a proof... 
verit: Try this:
  apply (smt (verit) HSTATE_rule_3 i919 nextReqIs_general_rule_5_0 nextSnpRespIs_general_rule_5_0) 
Done 
get final result 
17.364s elapsed time, 80.328s cpu time, 20.250s GC time 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis hstate_invariants(17,20,24) i919 nextReqIs_general_rule_7_0
    nextSnpRespIs_general_rule_7_0 remove_instr_HSTATE) 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) HSTATE_X_Evict_invariant1 i919 nextReqIs_otherside_rule_2_0
    nextSnpRespIs_general_rule_9_0) 
vampire found a proof... 
vampire: Try this:
  apply (metis InvalidStore'_nextReqIs_invariant_DirtyEvict hstate_invariants(24,4) i371 i460 i539
    nextStore_nextEvict_exclusive) 
hammer away called 
Sledgehammering... 
vampire found a proof... 
vampire: Try this:
  apply (metis hstate_invariants(24,4) i340 i350 i371 i539 i559 nextReqIs_otherside_rule_2_0
    nextStore_nextEvict_exclusive) 
spass found a proof... 
spass: Try this:
  apply (metis HSTATE_X_Evict_invariant1 i919 nextReqIs_otherside_rule_2_0
    nextSnpRespIs_general_rule_9_0) 
e found a proof... 
e: Duplicate proof 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) ModifiedEvict'_HSTATE ModifiedEvict'_nextReqIs_otherside
    ModifiedEvict'_nextSnpRespIs i919) 
verit found a proof... 
verit: Try this:
  apply (smt (verit) InvalidX_HSTATE1 i919 nextReqIs_otherside_rule_2_0
    nextSnpRespIs_general_rule_9_0) 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) HSTATE_SMADData i918 nextReqIs_SMADData nextSnpRespIs_general_rule_5_0) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis hstate_invariants(24,4) i919 nextReqIs_otherside_rule_2_0
    nextSnpRespIs_general_rule_9_0) 
zipperposition found a proof... 
zipperposition: Duplicate proof 
Done 
get final result 
20.342s elapsed time, 100.875s cpu time, 28.000s GC time 
vampire found a proof... 
vampire: Try this:
  apply (metis ModifiedEvict'_nextReqIs_otherside ModifiedEvict'_nextSnpRespIs
    hstate_invariants(24,4) i919) 
vampire found a proof... 
vampire: Try this:
  apply (metis CSTATE_inequality_invariant MESI_State.distinct(497,531,565) i453 nextReqIs_SMADData) 
hello
 
verit found a proof... 
verit: Try this:
  apply (smt (verit) InvalidX_HSTATE1 i919 nextReqIs_otherside_rule_2_0
    nextSnpRespIs_general_rule_9_0) 
hello
 
hello
 
verit found a proof... 
verit: Try this:
  apply (smt (verit) HSTATE_rule_6 i919 nextReqIs_general_rule_7_0 nextSnpRespIs_general_rule_7_0) 
Done 
get final result 
18.861s elapsed time, 92.844s cpu time, 21.141s GC time 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis hstate_invariants(24,4) i919 nextReqIs_otherside_rule_2_0
    nextSnpRespIs_general_rule_9_0) 
Done 
get final result 
20.778s elapsed time, 105.391s cpu time, 28.750s GC time 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis InvalidStore'_nextReqIs_invariant_DirtyEvict hstate_invariants(24,4) i340 i350 i371
    i460 i539 nextStore_nextEvict_exclusive) 
Done 
get final result 
21.421s elapsed time, 110.844s cpu time, 28.984s GC time 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis hstate_invariants(17,20,24) i918 nextReqIs_general_rule_5_0
    nextSnpRespIs_general_rule_5_0) 
Done 
get final result 
hello
 
e found a proof... 
e: Try this: apply (metis SMADSnpInv'_snpresps2_invariant1_aux2 i384 i890 nextSnpRespIs_invariant2) 
hammer away called 
Sledgehammering... 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis CSTATE_disj1 MESI_State.distinct(339,343,355,369,373,385,497,499,531,533,565,575)
    SMADSnpInv_nextReqIs SharedSnpInv_C_msg_not_half2 i454 i536 nextSnoopIs_otherside_rule_1_0) 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) i91 nextReqIs_ISADData) 
hello
 
vampire found a proof... 
vampire: Try this:
  apply (metis SharedSnpInv'_snps2_invariant1_aux2 ext i384 i890 nextSnpRespIs_invariant2) 
spass found a proof... 
spass: Try this: apply (metis ISADGO'_nextReqIs_invariant_DirtyEvict i91) 
Done 
get final result 
zipperposition found a proof... 
zipperposition: Try this: apply (metis i91 nextReqIs_general_rule_6_0) 
spass found a proof... 
spass: Try this:
  apply (metis IMADGO'_nextReqIs_invariant_DirtyEvict ISADGO'_HSTATE_neg i918
    nextSnpRespIs_general_rule_6_0) 
Done 
get final result 
25.336s elapsed time, 116.766s cpu time, 28.688s GC time 
e found a proof... 
e: Try this:
  apply (metis IMADGO'_nextReqIs_invariant_DirtyEvict i370 i538 nextStore_nextEvict_exclusive) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis i91 nextReqIs_general_rule_6_0 nextSnpRespIs_general_rule_6_0) 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) HSTATE_SMADData i919 nextReqIs_SMADData nextSnpRespIs_general_rule_5_0) 
Done 
get final result 
14.186s elapsed time, 62.609s cpu time, 5.578s GC time 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis IMADGO'_nextReqIs_invariant_DirtyEvict ISADGO'_HSTATE_neg i918
    nextReqIs_general_rule_6_0 nextSnpRespIs_general_rule_6_0) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis ISADGO'_HSTATE_neg i918 nextReqIs_general_rule_6_0 nextSnpRespIs_general_rule_6_0) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis IMADGO'_nextReqIs_invariant_DirtyEvict ISADGO'_HSTATE i918 nextReqIs_general_rule_6_0
    nextSnpRespIs_general_rule_6_0) 
e found a proof... 
e: Try this:
  apply (metis HTDDataPending_htddatas_invariant2 SMADSnpInv'_reqs2_invariant1_aux1 i101 i371 i400
    i539 i600 nextReqIs_general_rule_8_0 nextReqIs_not_various_forms2 nextStore_nextEvict_exclusive) 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
Done 
get final result 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hello
 
hammer away called 
Sledgehammering... 
hello
 
Done 
hammer away called 
Sledgehammering... 
get final result 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hello
 
hello
 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) HSTATE_ISADData i919 nextReqIs_ISADData nextSnpRespIs_general_rule_5_0) 
vampire found a proof... 
vampire: Try this:
  apply (metis hstate_invariants(17,20,24) i340 i350 i371 i539 i735 nextReqIs_ISADData
    nextStore_nextEvict_exclusive) 
spass found a proof... 
spass: Try this:
  apply (metis HSTATE_general_rule_3_0 i919 nextReqIs_general_rule_5_0
    nextSnpRespIs_general_rule_5_0) 
hello
 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HSTATE_ISADData i919 nextReqIs_general_rule_5_0 nextSnpRespIs_general_rule_5_0) 
spass found a proof... 
spass: Try this:
  apply (metis ISADGO'_HSTATE_neg SMADGO'_nextReqIs_invariant_DirtyEvict i918
    nextSnpRespIs_general_rule_6_0) 
Done 
get final result 
30.631s elapsed time, 140.078s cpu time, 23.219s GC time 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis CSTATE_inequality_invariant hstate_invariants(17,20,24) i335 i371 i454 i539 i577 i735
    nextReqIs_general_rule_5_0 nextStore_nextEvict_exclusive) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis ISADGO'_HSTATE_neg i918 nextReqIs_general_rule_6_0 nextSnpRespIs_general_rule_6_0) 
hello
 
spass found a proof... 
spass: Try this:
  apply (metis ISADGO'_HSTATE_neg ISADGO'_nextReqIs_invariant_DirtyEvict i919
    nextSnpRespIs_general_rule_6_0) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis ISADGO'_HSTATE_neg ISADGO'_nextReqIs ISADGO'_nextSnpRespIs i919) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis SMADGO'_nextReqIs SMADGO'_nextReqIs_invariant_DirtyEvict SMADGO'_nextSnpRespIs
    hstate_invariants(14,2,24) i918 nextSnpRespIs_general_rule_6_0) 
hello
 
hello
 
spass found a proof... 
spass: Try this: apply (metis SMAGO_nextSnpRespIs_sameside i899) 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) SMDData_HSTATE i918 nextReqIs_SMDData nextSnpRespIs_general_rule_7_0) 
zipperposition found a proof... 
zipperposition: Try this: apply (metis i899 nextSnpRespIs_general_rule_4_0) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis ISADGO'_nextReqIs ISADGO'_nextReqIs_invariant_DirtyEvict ISADGO'_nextSnpRespIs
    hstate_invariants(14,2,24) i919 nextGOPending_yes_reqresp_rule_6_1) 
verit found a proof... 
verit: Try this:
  apply (smt (verit) HSTATE_rule_3 i919 nextReqIs_general_rule_5_0 nextSnpRespIs_general_rule_5_0) 
Done 
get final result 
14.794s elapsed time, 72.406s cpu time, 4.547s GC time 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis SMAGO_nextSnpRespIs_sameside i899 nextSnpRespIs_general_rule_4_0) 
spass found a proof... 
spass: Try this: apply (metis SMAGO_nextSnpRespIs_sameside i899) 
zipperposition found a proof... 
zipperposition: Try this: apply (metis i899 nextSnpRespIs_general_rule_4_0) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis hstate_invariants(17,20,24) i918 nextReqIs_general_rule_7_0
    nextSnpRespIs_general_rule_7_0 remove_instr_HSTATE) 
Done 
get final result 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis SMAGO_nextSnpRespIs_sameside i899 nextSnpRespIs_general_rule_4_0) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis i899 nextSnpRespIs_general_rule_4_0 nextSnpRespIs_general_rule_6_0
    nextSnpRespIs_remove_op) 
Done 
get final result 
18.165s elapsed time, 74.625s cpu time, 4.547s GC time 
Done 
get final result 
Done 
get final result 
e found a proof... 
e: Try this:
  apply (metis ReqType.distinct(39) i396 nextReqIs_general_rule_8_0 nextReqIs_invariant_variant1) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis CXL_SPG_used_general_rule_6_0 ReqType.distinct(39) SMADSnpInv_nextReqIs i396
    nextReqIs_invariant) 
Done 
get final result 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis IMADGO'_nextReqIs IMADGO'_nextSnpRespIs ISADGO'_HSTATE_neg i919) 
hammer away called 
Sledgehammering... 
spass found a proof... 
spass: Try this:
  apply (metis IMADGO'_nextReqIs_invariant_DirtyEvict ISADGO'_HSTATE_neg i919
    nextSnpRespIs_general_rule_6_0) 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hello
 
hammer away called 
Sledgehammering... 
hammer away called 
hello
 
Sledgehammering... 
hello
 
Done 
get final result 
hello
 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis ISADGO'_HSTATE_neg SMADGO'_nextSnpRespIs i919 nextReqIs_general_rule_6_0) 
spass found a proof... 
spass: Try this: apply (metis SMADGO'_nextReqIs_invariant_DirtyEvict i515 i863) 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) i554 nextReqIs_SMDData) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis i515 i863 nextGOPending_yes_reqresp_rule_6_1 nextReqIs_general_rule_6_0) 
e found a proof... 
e: Try this: apply (metis i515 i863 nextReqIs_general_rule_6_0) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis SMADGO'_nextReqIs_invariant_DirtyEvict i515 i863 nextGOPending_yes_reqresp_rule_6_1
    nextReqIs_general_rule_6_0) 
hello
 
spass found a proof... 
spass: Try this:
  apply (metis HSTATE_rule_2 SMAGO_nextSnpRespIs_otherside i919 nextReqIs_SMAGO_IMAD_invariant2) 
hammer away called 
Sledgehammering... 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HSTATE_rule_2 SMAGO_nextSnpRespIs_otherside i919 nextReqIs_general_rule_4_0) 
hello
 
zipperposition found a proof... 
zipperposition: Try this: apply (metis i554 nextReqIs_general_rule_7_0) 
Done 
get final result 
12.889s elapsed time, 52.719s cpu time, 3.922s GC time 
Done 
get final result 
24.905s elapsed time, 100.031s cpu time, 6.328s GC time 
e found a proof... 
e: Try this:
  apply (metis HSTATE_rule_2 i919 nextReqIs_general_rule_13_0 nextReqIs_general_rule_6_0
    nextSnpRespIs_general_rule_13_0 nextSnpRespIs_general_rule_6_0) 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) HSTATE_general_rule_10_0 i918 nextReqIs_general_rule_13_0
    nextSnpRespIs_general_rule_13_0) 
Done 
get final result 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HSTATE_rule_2 SMAGO_nextSnpRespIs_otherside i919 nextReqIs_general_rule_4_0) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis hstate_invariants(14,2,24) i919 nextGOPending_yes_reqresp_rule_4_1
    nextReqIs_general_rule_6_0 nextReqIs_remove_op nextSnpRespIs_general_rule_6_0
    nextSnpRespIs_remove_op remove_instr_HSTATE) 
spass found a proof... 
spass: Try this:
  apply (metis HSTATE_rule_2 SMAGO_nextSnpRespIs_otherside i919 nextReqIs_SMAGO_IMAD_invariant2) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HSTATE_SMAGO_invariant SMAGO_nextSnpRespIs_otherside i919
    nextGOPending_yes_reqresp_rule_4_1 nextReqIs_SMAGO) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HSTATE_SMAGO_invariant SMAGO_nextSnpRespIs_otherside i919
    nextGOPending_yes_reqresp_rule_4_1 nextReqIs_SMAGO) 
spass found a proof... 
spass: Try this:
  apply (metis HSTATE_XYAGO1 ISAGO_nextSnpRespIs_sameside i918 nextReqIs_ISAGO_IMAD_invariant1) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis hstate_invariants(14,2,24) i919 nextGOPending_yes_reqresp_rule_4_1
    nextReqIs_general_rule_6_0 nextReqIs_remove_op nextSnpRespIs_general_rule_6_0
    nextSnpRespIs_remove_op remove_instr_HSTATE) 
hammer away called 
Sledgehammering... 
hello
 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HSTATE_ISAGO_invariant ISAGO_nextSnpRespIs_sameside i918 nextReqIs_ISAGO
    nextSnpRespIs_general_rule_4_0) 
hammer away called 
Sledgehammering... 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HSTATE_XYAGO1 i918 nextReqIs_general_rule_6_0 nextReqIs_remove_op
    nextSnpRespIs_general_rule_4_0 nextSnpRespIs_general_rule_6_0 nextSnpRespIs_remove_op) 
Done 
get final result 
19.205s elapsed time, 72.719s cpu time, 4.547s GC time 
hello
 
Done 
get final result 
17.776s elapsed time, 73.609s cpu time, 4.547s GC time 
hello
 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis CSTATE_disj1 HSTATE_invariant_ModifiedSnpInv
    MESI_State.distinct(339,343,355,369,373,385,497,499,531,533,565,575) SMADSnpInv_nextReqIs i454
    i596 nextSnoopIs_otherside_rule_1_0) 
hammer away called 
Sledgehammering... 
e found a proof... 
e: Try this: apply (metis i371 i508 i539 nextReqIs_general_rule_8_0 nextStore_nextEvict_exclusive) 
Done 
get final result 
17.288s elapsed time, 67.156s cpu time, 3.219s GC time 
Done 
get final result 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) HSTATE_general_rule_10_0 i918 nextReqIs_general_rule_13_0
    nextSnpRespIs_general_rule_13_0) 
Done 
get final result 
verit found a proof... 
verit: Try this:
  apply (smt (verit) HSTATE_general_rule_10_0 i919 nextReqIs_general_rule_13_0
    nextSnpRespIs_general_rule_13_0) 
hammer away called 
Sledgehammering... 
hello
 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hello
 
hello
 
hello
 
hello
 
Done 
get final result 
22.800s elapsed time, 92.859s cpu time, 5.812s GC time 
Done 
get final result 
11.619s elapsed time, 48.422s cpu time, 2.562s GC time 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HSTATE_ISAGO_invariant ISAGO_nextSnpRespIs_otherside i919
    nextGOPending_yes_reqresp_rule_4_1 nextReqIs_ISAGO) 
Done 
get final result 
16.842s elapsed time, 54.984s cpu time, 3.625s GC time 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HSTATE_SIAGO_WritePullDrop_invariant SIAGO_WritePullDrop_nextSnpRespIs_sameside i918
    nextReqIs_SIAGO_WritePullDrop nextSnpRespIs_general_rule_4_0) 
Done 
get final result 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HSTATE_SIAGO_WritePullDrop_invariant SIAGO_WritePullDrop_nextSnpRespIs_sameside i918
    nextReqIs_SIAGO_WritePullDrop nextSnpRespIs_general_rule_4_0) 
Done 
get final result 
verit found a proof... 
verit: Try this:
  apply (smt (verit) HSTATE_general_rule_10_0 i919 nextReqIs_general_rule_13_0
    nextSnpRespIs_general_rule_13_0) 
Done 
get final result 
18.302s elapsed time, 40.562s cpu time, 2.047s GC time 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hello
 
hammer away called 
Sledgehammering... 
hello
 
hammer away called 
Sledgehammering... 
hello
 
hammer away called 
Sledgehammering... 
No proof found 
get final result 
[rescue] START method=" auto" timeout=10s before=1 
hello
 
hello
 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) SMDData_HSTATE i918 nextReqIs_SMDData nextSnpRespIs_general_rule_7_0) 
Done 
get final result 
spass found a proof... 
spass: Try this:
  apply (metis HSTATE_rule_2 SIAGO_WritePullDrop_nextSnpRespIs_otherside i919
    nextReqIs_SIAGO_WritePullDrop_IMAD_invariant2) 
hello
 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HSTATE_rule_2 SIAGO_WritePullDrop_nextSnpRespIs_otherside i919
    nextGOPendingIs_XYAGO_other1 nextReqIs_general_rule_6_0 nextReqIs_remove_op) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HSTATE_SIAGO_WritePullDrop_invariant SIAGO_WritePullDrop_nextSnpRespIs_otherside i919
    nextGOPendingIs_XYAGO_other1 nextReqIs_SIAGO_WritePullDrop) 
spass found a proof... 
spass: Try this:
  apply (metis HSTATE_rule_2 SIAGO_WritePullDrop_nextSnpRespIs_otherside i919
    nextReqIs_SIAGO_WritePullDrop_IMAD_invariant2) 
hello
 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HSTATE_rule_2 SIAGO_WritePullDrop_nextSnpRespIs_otherside i919
    nextReqIs_SIAGO_WritePullDrop) 
hello
 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HSTATE_SIAGO_WritePullDrop_invariant SIAGO_WritePullDrop_nextSnpRespIs_otherside i919
    nextGOPendingIs_XYAGO_other1 nextReqIs_SIAGO_WritePullDrop) 
hello
 
Done 
get final result 
23.984s elapsed time, 60.438s cpu time, 3.125s GC time 
Done 
get final result 
24.441s elapsed time, 61.266s cpu time, 3.125s GC time 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis CXL_SPG_used_general_rule_6_0 HSTATE_invariant_ModifiedSnpInv hstate_invariants(9)
    i576 i600) 
Done 
get final result 
zipperposition found a proof... 
zipperposition: Try this: apply (metis CXL_SPG_used_general_rule_6_0 SMADSnpInv_nextReqIs) 
Done 
get final result 
[rescue] TIMEOUT 10002 ms before=1 
[rescue] [split] START method=" (cases "reqs1 T")" timeout=13s before=1 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis CXL_SPG_used_general_rule_6_0 HOST_State.distinct(149,289) HSTATE_general_rule_9_0
    HSTATE_invariant3 i479 nat_to_id.simps(1) sendSnpRespAndData_def) 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
No proof found 
hammer away called 
Sledgehammering... 
get final result 
[rescue] START method=" auto" timeout=10s before=1 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis CXL_SPG_used_general_rule_6_0 HOST_State.distinct(149) HSTATE_invariant3
    HSTATE_rule_16 hstate_invariants(2) i479 i769 nat_to_id.simps(1) sendSnpRespAndData_def) 
hello
 
[rescue] [split] OK 11763 ms before=1 after=2 (no progress) 
hammer away called 
Sledgehammering... 
No proof found 
get final result 
[rescue] START method=" auto" timeout=10s before=1 
hello
 
verit found a proof... 
verit: Try this:
  apply (smt (verit) HSTATE_rule_6 i919 nextReqIs_general_rule_7_0 nextSnpRespIs_general_rule_7_0) 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) SMDData_HSTATE i919 nextReqIs_SMDData nextSnpRespIs_general_rule_7_0) 
vampire found a proof... 
vampire: Try this:
  apply (metis SMDData_HSTATE i919 nextReqIs_general_rule_7_0 nextSnpRespIs_general_rule_7_0) 
hammer away called 
Sledgehammering... 
hello
 
hammer away called 
Sledgehammering... 
spass found a proof... 
spass: Try this:
  apply (metis HSTATE_general_rule_5_0 i919 nextReqIs_general_rule_7_0
    nextSnpRespIs_general_rule_7_0) 
Done 
get final result 
e found a proof... 
e: Duplicate proof 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis hstate_invariants(17,20,24) i919 nextReqIs_general_rule_7_0
    nextSnpRespIs_general_rule_7_0 remove_instr_HSTATE) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis hstate_invariants(17,20,24) i919 nextReqIs_SMDData nextSnpRespIs_general_rule_7_0
    remove_instr_HSTATE) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HSTATE_invariant_ModifiedSnpInv hstate_invariants(9) i576 i600
    nextSnoopIs_otherside_rule_1_0) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis hstate_invariants(12,2,24,7,9) i576 i600 nextSnoopIs_otherside_rule_1_0) 
Done 
hello
 
get final result 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HSTATE_rule_16 i576 i600 nat_to_id.simps(1) nextSnoopIs_otherside_rule_1_0
    sendSnpRespAndData_def) 
hello
 
e found a proof... 
e: Try this:
  apply (metis HSTATE_invariant_ModifiedSnpInv hstate_invariants(9) i576 i600 nat_to_id.simps(1)) 
e found a proof... 
e: Try this: apply (metis SARspSFwdM_invariant2 SMADSnpInv'_snpresps2_invariant1_aux2 i502 i739) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis CSTATE_disj1 MESI_State.distinct(339,343,355,369,373,385,497,499,531,533,565,575)
    SMADSnpInv_nextReqIs i454 i502 i596 nextSnoopIs_otherside_rule_1_0) 
hammer away called 
Sledgehammering... 
Done 
hammer away called 
Sledgehammering... 
get final result 
29.497s elapsed time, 89.234s cpu time, 4.484s GC time 
hello
 
Done 
get final result 
30.192s elapsed time, 86.781s cpu time, 3.938s GC time 
hello
 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis CXL_SPG_used_general_rule_6_0 HOST_State.distinct(149,269) HSTATE_general_rule_9_0
    HSTATE_invariant3 i483 nat_to_id.simps(1) sendSnpRespAndData_def) 
Done 
get final result 
31.118s elapsed time, 90.547s cpu time, 3.953s GC time 
e found a proof... 
e: Try this:
  apply (metis CSTATE_inequality_invariant MESI_State.distinct(27,31,43) i453 nat_to_id.simps(1)
    nextReqIs_general_rule_12_0) 
[rescue] TIMEOUT 10018 ms before=1 
[rescue] [split] START method=" (cases "reqs1 T")" timeout=13s before=1 
[rescue] TIMEOUT 10054 ms before=1 
[rescue] [split] START method=" (cases "reqresps1 T")" timeout=13s before=1 
e found a proof... 
e: Try this:
  apply (metis CSTATE_inequality_invariant MESI_State.distinct(27,31,43) i453 nat_to_id.simps(1)
    nextReqIs_general_rule_12_0) 
Done 
get final result 
e found a proof... 
e: Try this: apply (metis i481 i92 nat_to_id.simps(1) nextReqIs_general_rule_12_0) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HOST_State.distinct(149,269) HSTATE_general_rule_9_0 HSTATE_invariant3 i479
    nat_to_id.simps(1) nextSnoopIs_otherside_rule_1_0 sendSnpRespAndData_def) 
Done 
get final result 
e found a proof... 
e: Try this:
  apply (metis HOST_State.distinct(149,289) HSTATE_invariant3 HSTATE_invariant_ModifiedSnpInv
    hstate_invariants(9) i479 nat_to_id.simps(1)) 
[rescue] [split] OK 7995 ms before=1 after=2 (no progress) 
hammer away called 
[rescue] [split] OK 7119 ms before=1 after=2 (no progress) 
hammer away called 
Sledgehammering... 
Sledgehammering... 
hammer away called 
Sledgehammering... 
Done 
get final result 
42.195s elapsed time, 115.969s cpu time, 6.203s GC time 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hello
 
hammer away called 
Sledgehammering... 
hello
 
hello
 
hello
 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) reqresps_empty_noGOPendingIs1) 
Done 
[rescue] [split] SH subgoal 1 -> success in 4288 ms 
hammer away called 
Sledgehammering... 
hello
 
Done 
get final result 
45.912s elapsed time, 140.109s cpu time, 7.406s GC time 
e found a proof... 
e: Try this:
  apply (metis HOST_State.distinct(139,149) HSTATE_invariant3 HSTATE_invariant_ModifiedSnpInv
    hstate_invariants(9) i483 nat_to_id.simps(1)) 
No proof found 
[rescue] [split] SH subgoal 1 -> fail in 23090 ms 
hammer away called 
Sledgehammering... 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HOST_State.distinct(149,169) HSTATE_invariant3 HSTATE_rule_16 i483 nat_to_id.simps(1)
    nextSnoopIs_otherside_rule_1_0 sendSnpRespAndData_def) 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) minus_req_nextReqIs_False_swmrp_rule_2_0 numeral_One) 
Done 
get final result 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) minus_req_nextReqIs_False_swmrp_rule_2_0 numeral_One) 
Done 
get final result 
e found a proof... 
e: Try this:
  apply (metis CSTATE_inequality_invariant HSTATE_invariant_ModifiedSnpInv
    MESI_State.distinct(329,349) hstate_invariants(9) i463 i477 i600 nat_to_id.simps(1)) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HSTATE_general_rule_9_0 ModifiedSnpDataInvalid_nextSnpRespIs_otherside i919
    nat_to_id.simps(1) nextReqIs_general_rule_12_0 nextSnoopIs_otherside_rule_1_0
    sendSnpRespAndData_def) 
Done 
get final result 
25.918s elapsed time, 92.797s cpu time, 5.891s GC time 
e found a proof... 
e: Try this:
  apply (metis CSTATE_inequality_invariant MESI_State.distinct(27,31,43) i453 nat_to_id.simps(1)
    nextReqIs_general_rule_12_0) 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
Done 
get final result 
29.438s elapsed time, 100.750s cpu time, 6.797s GC time 
hammer away called 
Sledgehammering... 
hello
 
hello
 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hello
 
hello
 
hello
 
hello
 
hello
 
Done 
get final result 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) minus_req_nextReqIs_False_swmrp_rule_2_0 numeral_One) 
Done 
get final result 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def
    MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MD_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def
    MEM_SD_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPINV_COL_def
    minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) 
Done 
get final result 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HOST_State.distinct(87) HSTATE_equals_sHost hstate_invariants(13,8)) 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) 
Done 
get final result 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def
    MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def
    MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def
    MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def
    RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def
    SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def
    minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) 
Done 
get final result 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def
    MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def
    MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def
    MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def
    RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def
    SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def
    minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) 
Done 
get final result 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HOST_State.distinct(87) HSTATE_invariant4 HostInvalidRdShared_HSTATE
    HostInvalidRdShared_nextSnpRespIs_otherside IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def
    IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def
    MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i919
    nextReqIs_HostSharedRdShared_IMAD_invariant2 numeral_One) 
Done 
get final result 
18.569s elapsed time, 74.516s cpu time, 5.344s GC time 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HOST_State.distinct(17) HSTATE_equals_sHost HSTATE_invariant_reqresp
    hstate_invariants(13)) 
hammer away called 
Sledgehammering... 
verit found a proof... 
verit: Try this: prefer 2 apply (smt (verit) i94 list.distinct(1) reqresps_empty_noGOPendingIs1) 
Done 
[rescue] [split] SH subgoal 2 -> success in 15690 ms 
[rescue] [split] DONE_WITH_RESIDUALS 
vampire found a proof... 
vampire: Try this:
  apply (metis DIRTYEVICT_COL_def HOST_State.distinct(17) HSTATE_invariant3
    HostSharedRdOwnSelf_HSTATE IMA_ROW_def OFFSET_def add_One_commute semiring_norm(5)) 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hello
 
hello
 
hello
 
hello
 
hello
 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
No proof found 
[rescue] [split] SH subgoal 1 -> fail in 24294 ms 
hammer away called 
vampire found a proof... 
Sledgehammering... 
vampire: Try this:
  apply (metis DIRTYEVICT_COL_def HOST_State.distinct(17,87) HSTATE_invariant3
    HostSharedRdOwnSelf_HSTATE IMA_ROW_def OFFSET_def add_One_commute semiring_norm(5) single) 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
Done 
hammer away called 
Sledgehammering... 
get final result 
23.235s elapsed time, 96.469s cpu time, 20.375s GC time 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def CSTATE_disj1 DATA_COL_def DIRTYEVICT_COL_def
    EVICT_COL_def GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def
    HOST_DEVNUM_def HostShared_CleanEvict_NotLastDrop_nextSnpRespIs_otherside IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISA_ROW_def
    ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MD_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def
    MESI_State.distinct(175,323,355) MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def
    RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def
    SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPINV_COL_def i454 i457 i660
    i92 nextReqIs_otherside_rule_1_0 numeral_One one_mod_two_eq_one plus_nat.add_0) 
Done 
get final result 
13.366s elapsed time, 58.125s cpu time, 17.859s GC time 
hammer away called 
Sledgehammering... 
hello
 
hello
 
hello
 
hello
 
hammer away called 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HOST_State.distinct(105,287) HSTATE_invariant3 HostShared_CleanEvict_NotLastData_HSTATE
    IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def
    MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def
    MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def
    MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def
    RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def
    SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def numeral_One) 
Done 
get final result 
13.478s elapsed time, 58.734s cpu time, 17.719s GC time 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) HSTATE_invariant4 HostInvalidRdShared_HSTATE
    HostInvalidRdShared_nextSnpRespIs_otherside i919 nextReqIs_HostSharedRdShared_IMAD_invariant2
    numeral_One) 
Done 
get final result 
14.922s elapsed time, 67.766s cpu time, 18.516s GC time 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def CSTATE_disj1 DATA_COL_def DIRTYEVICT_COL_def
    EVICT_COL_def GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def
    HOST_DEVNUM_def HostShared_CleanEvictNoData_NotLast_nextSnpRespIs_otherside IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def
    ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def
    MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def
    MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MESI_State.distinct(175,323,355)
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def
    RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def
    SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def
    Shared_CleanEvictNoData_NotLast_otherside_nextReqIs i454 i457 i660 i92 numeral_One) 
Done 
get final result 
14.115s elapsed time, 63.469s cpu time, 17.719s GC time 
hello
 
e found a proof... 
e: Try this:
  apply (metis HOST_State.distinct(139,149) HSTATE_invariant3 HSTATE_invariant_ModifiedSnpInv
    hstate_invariants(9) i483 nat_to_id.simps(1)) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HOST_State.distinct(149,247) HSTATE_general_rule_9_0 HSTATE_invariant3 i483
    nat_to_id.simps(1) nextSnoopIs_otherside_rule_1_0 sendSnpRespAndData_def) 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) 
Done 
get final result 
hello
 
No proof found 
[rescue] [split] SH subgoal 2 -> fail in 24206 ms 
[rescue] [split] DONE_WITH_RESIDUALS 
hello
 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) 
Done 
get final result 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) 
Done 
get final result 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) minus_req_nextReqIs_False_swmrp_rule_3_0 numeral_One one_mod_two_eq_one
    plus_nat.add_0) 
Done 
get final result 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) minus_req_nextReqIs_False_swmrp_rule_3_0 numeral_One one_mod_two_eq_one
    plus_nat.add_0) 
Done 
get final result 
Done 
get final result 
31.239s elapsed time, 126.078s cpu time, 22.250s GC time 
verit found a proof... 
verit: Try this: prefer 2 apply (smt (verit) i94 list.distinct(1) reqresps_empty_noGOPendingIs1) 
Done 
[rescue] [split] SH subgoal 2 -> success in 14326 ms 
[rescue] [split] DONE_WITH_RESIDUALS 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hello
 
hello
 
hello
 
hello
 
hello
 
hello
 
hello
 
No proof found 
get final result 
[rescue] START method=" auto" timeout=10s before=1 
No proof found 
get final result 
[rescue] START method=" auto" timeout=10s before=1 
[rescue] TIMEOUT 10007 ms before=1 
[rescue] [split] START method=" (cases "reqs1 T")" timeout=13s before=1 
[rescue] TIMEOUT 10018 ms before=1 
[rescue] [split] START method=" (cases "reqresps1 T")" timeout=13s before=1 
No proof found 
get final result 
[rescue] START method=" auto" timeout=10s before=1 
No proof found 
get final result 
[rescue] START method=" auto" timeout=10s before=1 
e found a proof... 
e: Try this:
  apply (metis CSTATE_disj1 DIRTYEVICT_COL_def MESI_State.distinct(175,323) i199 i371 i454 i457 i539
    i660 i92 nextReqIs_otherside_rule_1_0 nextSnpRespIs_general_rule_8_0
    nextStore_nextEvict_exclusive) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HOST_State.distinct(287) HSTATE_equals_sHost HSTATE_invariant_reqresp
    hstate_invariants(13)) 
e found a proof... 
e: Try this:
  apply (metis DIRTYEVICT_COL_def HOST_DEVNUM_def HOST_State.distinct(149) HSTATE_equals_sHost
    hstate_invariants(13) one_mod_two_eq_one plus_nat.add_0) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HOST_State.distinct(149) HSTATE_equals_sHost bits_one_mod_two_eq_one
    comm_monoid_add_class.add_0 hstate_invariants(13)) 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def CSTATE_inequality_invariant C_msg_state_def
    DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def
    GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(15,35,7,9) HSTATE_invariant4
    HostModifiedRdShared_nextSnpRespIs_otherside IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def
    IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def
    MEM_S_ROW_def MESI_State.distinct(11,265,273) MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def
    OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i143 i340 i418 i420 i457 i47 i539 i554 i652 i656 i777 i863 i92
    nextReqIs_otherside_rule_4_0 nextStore_nextEvict_exclusive numeral_One one_mod_two_eq_one
    plus_nat.add_0) 
[rescue] [split] OK 8481 ms before=1 after=2 (no progress) 
hammer away called 
Sledgehammering... 
[rescue] [split] OK 10512 ms before=1 after=2 (no progress) 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
No proof found 
get final result 
[rescue] START method=" auto" timeout=10s before=1 
e found a proof... 
e: Try this:
  apply (metis DIRTYEVICT_COL_def HOST_DEVNUM_def HOST_State.distinct(249) HSTATE_equals_sHost
    hstate_invariants(13) one_mod_two_eq_one plus_nat.add_0) 
hammer away called 
Sledgehammering... 
Done 
get final result 
49.065s elapsed time, 95.969s cpu time, 15.234s GC time 
hammer away called 
Sledgehammering... 
hello
 
hammer away called 
Sledgehammering... 
hello
 
hello
 
hello
 
Done 
hammer away called 
Sledgehammering... 
get final result 
54.326s elapsed time, 122.156s cpu time, 32.641s GC time 
[rescue] TIMEOUT 10000 ms before=1 
[rescue] [split] START method=" (cases "reqresps1 T")" timeout=13s before=1 
hammer away called 
Sledgehammering... 
Done 
get final result 
55.332s elapsed time, 124.469s cpu time, 32.828s GC time 
[rescue] TIMEOUT 10059 ms before=1 
[rescue] [split] START method=" (cases "reqresps1 T")" timeout=13s before=1 
hammer away called 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_NOLAST_COL_def DIRTYEVICT_COL_def GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def
    GOWRITEPULL_COL_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISA_ROW_def ISSUE_EVENT_ROW_def
    MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MD_ROW_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPINV_COL_def
    minus_req_nextReqIs_False_swmrp_rule_2_0 numeral_One) 
Done 
hammer away called 
Sledgehammering... 
get final result 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HOST_State.distinct(177,87) HSTATE_invariant3 HostSBData_HSTATE IIA_ROW_def IMAD_ROW_def
    IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def
    ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def
    OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i962 nat_to_id.simps(1) numeral_One) 
Done 
get final result 
No proof found 
hammer away called 
Sledgehammering... 
get final result 
[rescue] START method=" auto" timeout=10s before=1 
hello
 
hello
 
hammer away called 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HOST_State.distinct(203) HSTATE_equals_sHost IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def
    IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def
    MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def
    hstate_invariants(16) i733 nat_to_id.simps(1) numeral_One) 
Done 
hammer away called 
Sledgehammering... 
get final result 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HOST_State.distinct(17,271) HSTATE_invariant4 HostMBData_HSTATE IIA_ROW_def IMAD_ROW_def
    IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def
    ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def
    OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i408 nat_to_id.simps(1) numeral_One) 
Done 
get final result 
hello
 
hammer away called 
Sledgehammering... 
hello
 
[rescue] [split] OK 2795 ms before=1 after=2 (no progress) 
hammer away called 
Sledgehammering... 
hello
 
hello
 
hello
 
[rescue] TIMEOUT 10025 ms before=1 
[rescue] [split] START method=" (cases "reqresps1 T")" timeout=13s before=1 
hello
 
[rescue] TIMEOUT 10054 ms before=1 
[rescue] [split] START method=" (cases "reqs1 T")" timeout=13s before=1 
[rescue] [split] TIMEOUT 13060 ms before=1 
68.398s elapsed time, 141.516s cpu time, 33.875s GC time 
[rescue] [split] TIMEOUT 13049 ms before=1 
136.515s elapsed time, 349.578s cpu time, 59.406s GC time 
No proof found 
[rescue] [split] SH subgoal 1 -> fail in 27634 ms 
hammer away called 
Sledgehammering... 
No proof found 
[rescue] [split] SH subgoal 1 -> fail in 28531 ms 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hello
 
hammer away called 
Sledgehammering... 
No proof found 
get final result 
[rescue] START method=" auto" timeout=10s before=1 
hello
 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_disj1 DIRTYEVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISA_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MD_ROW_def
    MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MESI_State.distinct(163,175) MIAD_ROW_def
    MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def
    SMA_ROW_def SNPINV_COL_def i454 i494 i660 nextReqIs_HostInvalidRdOwn_IMAD_invariant2
    not_mod_2_eq_0_eq_1 numeral_One) 
Done 
get final result 
29.549s elapsed time, 59.719s cpu time, 19.719s GC time 
No proof found 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HOST_State.distinct(177,87) HSTATE_invariant3 HostSBData_HSTATE IIA_ROW_def IMAD_ROW_def
    IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def
    ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def
    OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i962 nat_to_id.simps(1) numeral_One) 
Done 
get final result 
get final result 
29.504s elapsed time, 58.875s cpu time, 19.719s GC time 
[rescue] START method=" auto" timeout=10s before=1 
hello
 
hello
 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HOST_State.distinct(203) HSTATE_equals_sHost IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def
    IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def
    MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def
    hstate_invariants(16) i733 nat_to_id.simps(1) numeral_One) 
Done 
get final result 
29.076s elapsed time, 54.906s cpu time, 20.328s GC time 
No proof found 
get final result 
[rescue] START method=" auto" timeout=10s before=1 
[rescue] [split] OK 12723 ms before=1 after=2 (no progress) 
hammer away called 
Sledgehammering... 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HOST_State.distinct(87) HSTATE_equals_sHost bits_one_mod_two_eq_one
    comm_monoid_add_class.add_0 hstate_invariants(15)) 
e found a proof... 
e: Try this:
  apply (metis HOST_State.distinct(87) HSTATE_equals_sHost HSTATE_invariant_msnpresp
    one_mod_two_eq_one plus_nat.add_0) 
No proof found 
get final result 
[rescue] START method=" auto" timeout=10s before=1 
No proof found 
get final result 
[rescue] START method=" auto" timeout=10s before=1 
No proof found 
get final result 
[rescue] START method=" auto" timeout=10s before=1 
vampire found a proof... 
vampire: Try this:
  apply (metis DIRTYEVICT_COL_def HOST_DEVNUM_def HOST_State.distinct(17,3) HSTATE_invariant3
    HostMBData_HSTATE ISD_ROW_def add_cancel_left_left nat_to_id.simps(1) one_mod_two_eq_one
    semiring_norm(3)) 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HOST_State.distinct(17,271) HSTATE_invariant4 HostMBData_HSTATE IIA_ROW_def IMAD_ROW_def
    IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def
    ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def
    OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i408 nat_to_id.simps(1) numeral_One) 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HOST_State.distinct(17) HSTATE_equals_sHost add_0 hstate_invariants(16)
    nat_to_id.simps(1) numeral_One one_mod_two_eq_one) 
No proof found 
[rescue] [split] SH subgoal 1 -> fail in 23437 ms 
hammer away called 
Sledgehammering... 
No proof found 
get final result 
[rescue] START method=" auto" timeout=10s before=1 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hello
 
hammer away called 
Sledgehammering... 
Done 
get final result 
Done 
hammer away called 
Sledgehammering... 
get final result 
34.470s elapsed time, 89.062s cpu time, 21.969s GC time 
hello
 
hello
 
hello
 
[rescue] TIMEOUT 10034 ms before=1 
[rescue] [split] START method=" (cases "snps1 T")" timeout=13s before=1 
[rescue] TIMEOUT 10040 ms before=1 
[rescue] [split] START method=" (cases "snps1 T")" timeout=13s before=1 
[rescue] TIMEOUT 10035 ms before=1 
[rescue] [split] START method=" (cases "snps1 T")" timeout=13s before=1 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HOST_State.distinct(87) HSTATE_equals_sHost bits_one_mod_two_eq_one
    comm_monoid_add_class.add_0 hstate_invariants(15)) 
[rescue] TIMEOUT 10016 ms before=1 
[rescue] [split] START method=" (cases "snps1 T")" timeout=13s before=1 
e found a proof... 
e: Try this:
  apply (metis HOST_State.distinct(87) HSTATE_equals_sHost HSTATE_invariant_msnpresp
    one_mod_two_eq_one plus_nat.add_0) 
[rescue] TIMEOUT 10050 ms before=1 
[rescue] [split] START method=" (cases "reqs1 T")" timeout=13s before=1 
[rescue] TIMEOUT 10002 ms before=1 
[rescue] [split] START method=" (cases "reqs1 T")" timeout=13s before=1 
[rescue] TIMEOUT 10014 ms before=1 
[rescue] [split] START method=" (cases "snps1 T")" timeout=13s before=1 
Done 
get final result 
verit found a proof... 
verit: Try this:
  prefer 2 apply (smt (verit) CSTATE_different2 MESI_State.distinct(163,175) i454 i613old i660
    lastSharer_def nextReqIs_otherside_rule_1_0 nextSnpRespIs_general_rule_8_0
    nextSnpRespIs_invariant2) 
Done 
[rescue] [split] SH subgoal 2 -> success in 17160 ms 
[rescue] [split] DONE_WITH_RESIDUALS 
104.252s elapsed time, 280.281s cpu time, 54.859s GC time 
No proof found 
[rescue] [split] SH subgoal 2 -> fail in 23929 ms 
[rescue] [split] DONE_WITH_RESIDUALS 
185.889s elapsed time, 499.828s cpu time, 66.828s GC time 
[rescue] [split] TIMEOUT 13056 ms before=1 
[rescue] [split] TIMEOUT 13013 ms before=1 
[rescue] [split] TIMEOUT 13040 ms before=1 
[rescue] [split] TIMEOUT 13045 ms before=1 
[rescue] [split] TIMEOUT 13056 ms before=1 
[rescue] [split] TIMEOUT 13057 ms before=1 
No proof found 
[rescue] [split] SH subgoal 1 -> fail in 24368 ms 
hammer away called 
Sledgehammering... 
No proof found 
[rescue] [split] SH subgoal 2 -> fail in 23113 ms 
[rescue] [split] DONE_WITH_RESIDUALS 
104.033s elapsed time, 241.594s cpu time, 38.656s GC time 
[rescue] [split] TIMEOUT 13026 ms before=1 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis GTS_def bits_one_mod_two_eq_one comm_monoid_add_class.add_0 nextSnpRespIs_invariant2
    snpresps2_HostSARspSFwdM) 
hammer away called 
Sledgehammering... 
e found a proof... 
e: Try this:
  apply (metis HOST_State.distinct(87) HSTATE_equals_sHost HSTATE_invariant_msnpresp
    one_mod_two_eq_one plus_nat.add_0) 
No proof found 
hammer away called 
Sledgehammering... 
get final result 
[rescue] START method=" auto" timeout=10s before=1 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
e found a proof... 
e: Try this:
  apply (metis i68 nat_to_id.simps(1) reqs1_HostSBData reqs1_empty_not_nextReqIs_general_invariant) 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hello
 
hello
 
hammer away called 
Sledgehammering... 
hello
 
hammer away called 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) HostMARspIHitSE_nextSnpRespIs_otherside i919
    nextReqIs_HostMARspIHitSE_IMAD_invariant2 numeral_One one_mod_two_eq_one plus_nat.add_0) 
Done 
Done 
get final result 
get final result 
55.491s elapsed time, 134.391s cpu time, 7.703s GC time 
hello
 
hello
 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) i437 i92 nextReqIs_HostSADRspSFwdM_IMAD_invariant2 numeral_One
    one_mod_two_eq_one plus_nat.add_0) 
Done 
get final result 
56.295s elapsed time, 139.375s cpu time, 8.172s GC time 
hello
 
Done 
hello
 
get final result 
56.910s elapsed time, 141.859s cpu time, 8.172s GC time 
e found a proof... 
e: Try this:
  apply (metis HOST_State.distinct(87) HSTATE_equals_sHost HSTATE_invariant_msnpresp
    one_mod_two_eq_one plus_nat.add_0) 
hello
 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HOST_State.distinct(87) HSTATE_equals_sHost bits_one_mod_two_eq_one
    comm_monoid_add_class.add_0 hstate_invariants(15)) 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) i437 i92 nextReqIs_HostSADRspSFwdM_IMAD_invariant2 numeral_One
    one_mod_two_eq_one plus_nat.add_0) 
Done 
get final result 
58.146s elapsed time, 145.578s cpu time, 8.422s GC time 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HOST_State.distinct(81,87) HSTATE_invariant4 HostSARspSFwdM_HSTATE IIA_ROW_def IMAD_ROW_def
    IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def
    ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def
    OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def numeral_One one_mod_two_eq_one plus_nat.add_0) 
Done 
get final result 
33.858s elapsed time, 106.734s cpu time, 4.922s GC time 
[rescue] TIMEOUT 10027 ms before=1 
[rescue] [split] START method=" (cases "reqs1 T")" timeout=13s before=1 
No proof found 
[rescue] [split] SH subgoal 2 -> fail in 22618 ms 
[rescue] [split] DONE_WITH_RESIDUALS 
192.568s elapsed time, 499.578s cpu time, 68.016s GC time 
hammer away called 
Sledgehammering... 
e found a proof... 
e: Try this: apply (metis i806 nat_to_id.simps(1) nextSnpRespIs_property1 snpresps1_HostMBData) 
[rescue] [split] TIMEOUT 13014 ms before=1 
zipperposition found a proof... 
zipperposition: Try this:
  apply (metis HOST_State.distinct(271) HSTATE_equals_sHost bits_one_mod_two_eq_one
    comm_monoid_add_class.add_0 hstate_invariants(15)) 
hello
 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
Done 
get final result 
78.879s elapsed time, 170.469s cpu time, 9.625s GC time 
Done 
get final result 
hello
 
hello
 
No proof found 
get final result 
[rescue] START method=" auto" timeout=10s before=1 
No proof found 
get final result 
[rescue] START method=" auto" timeout=10s before=1 
No proof found 
get final result 
[rescue] START method=" auto" timeout=10s before=1 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) 
Done 
get final result 
e found a proof... 
e: Try this:
  apply (metis HostSBData_nextSnpRespIs_otherside i613old nat_to_id.simps(1)
    nextSnpRespIs_property2) 
hammer away called 
Sledgehammering... 
[rescue] TIMEOUT 10025 ms before=1 
[rescue] [split] START method=" (cases "snps1 T")" timeout=13s before=1 
[rescue] TIMEOUT 10014 ms before=1 
[rescue] [split] START method=" (cases "reqs1 T")" timeout=13s before=1 
[rescue] TIMEOUT 10046 ms before=1 
[rescue] [split] START method=" (cases "reqs1 T")" timeout=13s before=1 
hello
 
Done 
get final result 
64.706s elapsed time, 127.344s cpu time, 5.906s GC time 
hammer away called 
Sledgehammering... 
[rescue] [split] OK 8215 ms before=1 after=2 (no progress) 
hammer away called 
Sledgehammering... 
[rescue] [split] OK 8807 ms before=1 after=2 (no progress) 
hammer away called 
Sledgehammering... 
[rescue] [split] OK 8526 ms before=1 after=2 (no progress) 
hammer away called 
Sledgehammering... 
hello
 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) i199 i872 nextReqIs_HostInvalidDirtyEvict_otherside_1 numeral_One) 
Done 
get final result 
26.391s elapsed time, 46.875s cpu time, 2.922s GC time 
No proof found 
get final result 
[rescue] START method=" auto" timeout=10s before=1 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
hammer away called 
Sledgehammering... 
[rescue] TIMEOUT 10005 ms before=1 
[rescue] [split] START method=" (cases "reqs1 T")" timeout=13s before=1 
hammer away called 
Sledgehammering... 
[rescue] [split] OK 1 ms before=1 after=2 (no progress) 
hammer away called 
Sledgehammering... 
e found a proof... 
e: Try this:
  apply (metis HostMBData_nextSnpRespIs_otherside i806 nat_to_id.simps(1) nextSnpRespIs_property2) 
hello
 
hello
 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) i918 nextReqIs_HostMARspIHitSE_IMAD_invariant1 numeral_One one_mod_two_eq_one
    plus_nat.add_0) 
Done 
get final result 
72.239s elapsed time, 126.734s cpu time, 8.297s GC time 
vampire found a proof... 
vampire: Try this:
  apply (metis Nat.add_0_right add.commute i918 nextReqIs_general_rule_10_0 one_mod_two_eq_one
    semiring_norm(3)) 
e found a proof... 
e: Try this:
  apply (metis i918 nextReqIs_general_rule_10_0 one_mod_two_eq_one one_plus_numeral plus_nat.add_0
    semiring_norm(3)) 
spass found a proof... 
spass: Try this:
  apply (metis bits_one_mod_two_eq_one i918 nextReqIs_HostMARspIHitSE_IMAD_invariant1
    plus_nat.add_0) 
spass found a proof... 
spass: Try this:
  apply (metis HSTATE_rule_2 SIAGO_WritePullDrop_nextSnpRespIs_sameside i918
    nextReqIs_SIAGO_WritePullDrop_IMAD_invariant1) 
Done 
get final result 
hammer away called 
Sledgehammering... 
e found a proof... 
e: Try this:
  apply (metis HSTATE_rule_2 i918 nextReqIs_general_rule_13_0 nextReqIs_general_rule_6_0
    nextSnpRespIs_general_rule_13_0 nextSnpRespIs_general_rule_6_0) 
hammer away called 
Sledgehammering... 
hello
 
hammer away called 
Sledgehammering... 
vampire found a proof... 
vampire: Try this:
  apply (metis consumeGODiscard_def consumeGOPerform_def consumeGO_def i343 nextSnpRespIs_def
    nextSnpRespIs_invariant1 reqresps_empty_noGOPendingIs1 snpresps1_SIAGO_WritePullDrop) 
Done 
get final result 
No proof found 
[rescue] [split] SH subgoal 1 -> fail in 25189 ms 
hello
 
vampire found a proof... 
vampire: Try this:
  apply (metis HostMARspIHitSE_nextSnpRespIs_otherside Nat.add_0_right SARspSFwdM_invariant2
    add.commute i452 i899 one_mod_two_eq_one semiring_norm(3)) 
spass found a proof... 
spass: Try this:
  apply (metis HostMARspIHitSE_nextSnpRespIs_otherside bits_one_mod_two_eq_one i919
    nextReqIs_HostMARspIHitSE_IMAD_invariant2 plus_nat.add_0) 
No proof found 
[rescue] [split] SH subgoal 1 -> fail in 27098 ms 
e found a proof... 
e: Try this:
  apply (metis HostMARspIHitSE_nextSnpRespIs_otherside i919 nextReqIs_general_rule_10_0
    one_mod_two_eq_one one_plus_numeral plus_nat.add_0 semiring_norm(3)) 
e found a proof... 
e: Try this:
  apply (metis SARspSFwdM_invariant2 i452 i899 one_mod_two_eq_one plus_nat.add_0
    snpresps2_HostMARspIHitSE) 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) HostMARspIHitSE_nextSnpRespIs_otherside i919
    nextReqIs_HostMARspIHitSE_IMAD_invariant2 numeral_One one_mod_two_eq_one plus_nat.add_0) 
No proof found 
[rescue] [split] SH subgoal 1 -> fail in 27968 ms 
cvc5 found a proof... 
cvc5: Duplicate proof 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) HostMARspIHitSE_nextSnpRespIs_otherside add_self_mod_2 cong_exp_iff_simps(10)
    i919 mod_add_cong nextReqIs_HostMARspIHitSE_IMAD_invariant2 not_mod_2_eq_1_eq_0 numeral_Bit1
    one_add_one one_mod_two_eq_one zero_mod_two_eq_zero) 
e found a proof... 
e: Try this:
  prefer 2 apply (metis HOST_State.distinct(119) HSTATE_equals_sHost hstate_invariants(16)) 
vampire found a proof... 
vampire: Try this:
  prefer 2 apply (metis DIRTYEVICT_COL_def HOST_State.distinct(119) HSTATE_equals_sHost
    hstate_invariants(16) semiring_norm(3)) 
cvc5 found a proof... 
cvc5: Duplicate proof 
spass found a proof... 
spass: Try this:
  apply (metis HSTATE_rule_2 SIAGO_WritePullDrop_nextSnpRespIs_otherside i919
    nextReqIs_SIAGO_WritePullDrop_IMAD_invariant2) 
vampire found a proof... 
vampire: Try this: prefer 2 apply (metis i68 neq_Nil_conv) 
Done 
get final result 
18.087s elapsed time, 54.641s cpu time, 3.984s GC time 
e found a proof... 
e: Try this:
  apply (metis HSTATE_rule_2 i919 nextReqIs_general_rule_13_0 nextReqIs_general_rule_6_0
    nextSnpRespIs_general_rule_13_0 nextSnpRespIs_general_rule_6_0) 
Done 
[rescue] [split] SH subgoal 2 -> success in 18251 ms 
[rescue] [split] DONE_WITH_RESIDUALS 
131.670s elapsed time, 274.828s cpu time, 16.109s GC time 
e found a proof... 
e: Try this: apply (metis HOST_State.distinct(119) HSTATE_equals_sHost hstate_invariants(16)) 
vampire found a proof... 
vampire: Try this:
  apply (metis DIRTYEVICT_COL_def HOST_State.distinct(119) HSTATE_equals_sHost
    hstate_invariants(16) semiring_norm(3)) 
Done 
get final result 
20.669s elapsed time, 56.766s cpu time, 4.156s GC time 
vampire found a proof... 
vampire: Duplicate proof 
Done 
[rescue] [split] SH subgoal 1 -> success in 23162 ms 
No proof found 
[rescue] [split] SH subgoal 2 -> fail in 24633 ms 
[rescue] [split] DONE_WITH_RESIDUALS 
145.018s elapsed time, 313.109s cpu time, 33.812s GC time 
e found a proof... 
e: Try this:
  prefer 2 apply (metis HOST_State.distinct(119) HSTATE_equals_sHost hstate_invariants(16)) 
vampire found a proof... 
vampire: Try this:
  prefer 2 apply (metis DIRTYEVICT_COL_def HOST_State.distinct(119) HSTATE_equals_sHost
    hstate_invariants(16) semiring_norm(3)) 
No proof found 
[rescue] [split] SH subgoal 2 -> fail in 27413 ms 
[rescue] [split] DONE_WITH_RESIDUALS 
141.206s elapsed time, 283.500s cpu time, 16.406s GC time 
vampire found a proof... 
vampire: Duplicate proof 
vampire found a proof... 
vampire: Try this: prefer 2 apply (metis i68 list.distinct(1)) 
z3 found a proof... 
z3: Try this:
  prefer 2 apply (smt (z3) HOST_State.distinct(119) HSTATE_equals_sHost hstate_invariants(16)) 
Done 
[rescue] [split] SH subgoal 2 -> success in 23357 ms 
[rescue] [split] DONE_WITH_RESIDUALS 
117.366s elapsed time, 229.031s cpu time, 12.203s GC time 
333.546s elapsed time, 866.891s cpu time, 111.328s GC time 
proof (intro conjI)
  show goal_1: "CSTATE Invalid T 0 ∧ nextLoad T 0 ⟶ (HSTATE MA ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD]) 0) ∧ (HSTATE MA ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD]) 1)"
    proof (intro impconjI)
   show goal1_1: "CSTATE Invalid T 0 ∧ nextLoad T 0 ⟶ HSTATE MA ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) InvalidLoad'_HSTATE InvalidLoad'_nextReqIs_invariant_DirtyEvict
    InvalidLoad'_nextSnpRespIs i918) done
   show goal1_2: "CSTATE Invalid T 0 ∧ nextLoad T 0 ⟶ HSTATE MA ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) InvalidLoad'_HSTATE InvalidLoad'_nextReqIs_invariant_DirtyEvict
    InvalidLoad'_nextSnpRespIs i919) done
qed
  show goal_2: "CSTATE Shared T 0 ∧ nextLoad T 0 ⟶ (HSTATE MA (T [ -=i 0]) ∧ nextSnpRespIs RspIHitSE (T [ -=i 0]) 0 ⟶ ¬ nextReqIs DirtyEvict (T [ -=i 0]) 0) ∧ (HSTATE MA (T [ -=i 0]) ∧ nextSnpRespIs RspIHitSE (T [ -=i 0]) 1 ⟶ ¬ nextReqIs DirtyEvict (T [ -=i 0]) 1)"
    proof (intro impconjI)
   show goal2_1: "CSTATE Shared T 0 ∧ nextLoad T 0 ⟶ HSTATE MA (T [ -=i 0]) ∧ nextSnpRespIs RspIHitSE (T [ -=i 0]) 0 ⟶ ¬ nextReqIs DirtyEvict (T [ -=i 0]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) HSTATE_general_rule_10_0 i918 nextReqIs_general_rule_13_0
    nextSnpRespIs_general_rule_13_0) done
   show goal2_2: "CSTATE Shared T 0 ∧ nextLoad T 0 ⟶ HSTATE MA (T [ -=i 0]) ∧ nextSnpRespIs RspIHitSE (T [ -=i 0]) 1 ⟶ ¬ nextReqIs DirtyEvict (T [ -=i 0]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) CSTATE_inequality_invariant
    MESI_State.distinct(339,343,355,369,373,385,497,499,531,533,565,575) i454 i559
    nextReqIs_remove_op remove_instr_HSTATE) done
qed
  show goal_3: "CSTATE Invalid T 0 ∧ nextStore T 0 ⟶ (HSTATE MA ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD]) 0) ∧ (HSTATE MA ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD]) 1)"
    proof (intro impconjI)
   show goal3_1: "CSTATE Invalid T 0 ∧ nextStore T 0 ⟶ HSTATE MA ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) InvalidStore'_HSTATE InvalidStore'_nextReqIs_invariant_DirtyEvict
    InvalidStore'_nextSnpRespIs i918) done
   show goal3_2: "CSTATE Invalid T 0 ∧ nextStore T 0 ⟶ HSTATE MA ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) InvalidStore'_HSTATE InvalidStore'_nextReqIs_invariant_DirtyEvict
    InvalidStore'_nextSnpRespIs i919) done
qed
  show goal_4: "CSTATE Shared T 0 ∧ nextStore T 0 ⟶ (HSTATE MA ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD]) 0) ∧ (HSTATE MA ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD]) 1)"
    proof (intro impconjI)
   show goal4_1: "CSTATE Shared T 0 ∧ nextStore T 0 ⟶ HSTATE MA ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) SharedStore'_HSTATE SharedStore'_nextReqIs_invariant_DirtyEvict
    SharedStore'_nextSnpRespIs i918) done
   show goal4_2: "CSTATE Shared T 0 ∧ nextStore T 0 ⟶ HSTATE MA ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) SharedStore'_HSTATE SharedStore'_nextReqIs_invariant_DirtyEvict
    SharedStore'_nextSnpRespIs i919) done
qed
  show goal_5: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ (HSTATE MA ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC]) 0) ∧ (HSTATE MA ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC]) 1)"
    proof (intro impconjI)
   show goal5_1: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ HSTATE MA ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis CSTATE_disj1 MESI_State.distinct(101,103,105,121,95) i456
    nextSnpRespIs_general_rule_9_0) done
   show goal5_2: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ HSTATE MA ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) HSTATE_X_Evict_invariant1 i919 nextReqIs_otherside_rule_2_0
    nextSnpRespIs_general_rule_9_0) done
qed
  show goal_6: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ (HSTATE MA ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA]) 0) ∧ (HSTATE MA ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA]) 1)"
    proof (intro impconjI)
   show goal6_1: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ HSTATE MA ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) SharedEvictData'_HSTATE SharedEvictData'_nextReqIs_invariant_DirtyEvict
    SharedEvictData'_nextSnpRespIs i918) done
   show goal6_2: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ HSTATE MA ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) SharedEvictData'_HSTATE SharedEvictData'_nextReqIs_invariant_DirtyEvict
    SharedEvictData'_nextSnpRespIs i919) done
qed
  show goal_7: "CSTATE Modified T 0 ∧ nextEvict T 0 ⟶ (HSTATE MA ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA]) 0) ∧ (HSTATE MA ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA]) 1)"
    proof (intro impconjI)
   show goal7_1: "CSTATE Modified T 0 ∧ nextEvict T 0 ⟶ HSTATE MA ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis CSTATE_inequality_invariant MESI_State.distinct(11,13,15,31,5) i456
    nextSnpRespIs_general_rule_9_0) done
   show goal7_2: "CSTATE Modified T 0 ∧ nextEvict T 0 ⟶ HSTATE MA ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) ModifiedEvict'_HSTATE ModifiedEvict'_nextReqIs_otherside
    ModifiedEvict'_nextSnpRespIs i919) done
qed
  show goal_8: "CXL_SPG_used T 0 ∧ CSTATE Shared T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ (HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid]) 0) ∧ (HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid]) 1)"
    proof (intro impconjI)
   show goal8_1: "CXL_SPG_used T 0 ∧ CSTATE Shared T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis CSTATE_disj1 CXL_SPG_used_general_rule_6_0 MESI_State.distinct(117,121,133)
    SMADSnpInv_nextReqIs SharedSnpInv_nextReqIs i453) done
   show goal8_2: "CXL_SPG_used T 0 ∧ CSTATE Shared T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis CSTATE_disj1 MESI_State.distinct(339,343,355,369,373,385,497,499,531,533,565,575)
    SMADSnpInv_nextReqIs SharedSnpInv_C_msg_not_half2 i454 i536 nextSnoopIs_otherside_rule_1_0) done
qed
  show goal_9: "CXL_SPG_used T 0 ∧ CSTATE ISD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ (HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI]) 0) ∧ (HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI]) 1)"
    proof (intro impconjI)
   show goal9_1: "CXL_SPG_used T 0 ∧ CSTATE ISD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis CSTATE_disj1 CXL_SPG_used_general_rule_6_0 MESI_State.distinct(199,203,215)
    SMADSnpInv_nextReqIs i453) done
   show goal9_2: "CXL_SPG_used T 0 ∧ CSTATE ISD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HTDDataPending_htddatas_invariant2 SMADSnpInv'_reqs2_invariant1_aux1 i101 i371 i400
    i539 i600 nextReqIs_general_rule_8_0 nextReqIs_not_various_forms2
    nextStore_nextEvict_exclusive) done
qed
  show goal_10: "CSTATE ISD T 0 ∧ nextHTDDataPending T 0 ⟶ (HSTATE MA ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 0) ∧ (HSTATE MA ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 1)"
    proof (intro impconjI)
   show goal10_1: "CSTATE ISD T 0 ∧ nextHTDDataPending T 0 ⟶ HSTATE MA ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) ISDData_HSTATE i918 nextReqIs_ISDData nextSnpRespIs_general_rule_7_0) done
   show goal10_2: "CSTATE ISD T 0 ∧ nextHTDDataPending T 0 ⟶ HSTATE MA ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) ISDData_HSTATE i919 nextReqIs_ISDData nextSnpRespIs_general_rule_7_0) done
qed
  show goal_11: "CSTATE ISDI T 0 ∧ nextHTDDataPending T 0 ⟶ (HSTATE MA ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 0) ∧ (HSTATE MA ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 1)"
    proof (intro impconjI)
   show goal11_1: "CSTATE ISDI T 0 ∧ nextHTDDataPending T 0 ⟶ HSTATE MA ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) ISDIData_HSTATE i918 nextReqIs_ISDIData nextSnpRespIs_general_rule_7_0) done
   show goal11_2: "CSTATE ISDI T 0 ∧ nextHTDDataPending T 0 ⟶ HSTATE MA ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) ISDIData_HSTATE i919 nextReqIs_ISDIData nextSnpRespIs_general_rule_7_0) done
qed
  show goal_12: "CSTATE IMAD T 0 ∧ nextHTDDataPending T 0 ⟶ (HSTATE MA ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) 0) ∧ (HSTATE MA ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) 1)"
    proof (intro impconjI)
   show goal12_1: "CSTATE IMAD T 0 ∧ nextHTDDataPending T 0 ⟶ HSTATE MA ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) HSTATE_IMADData i918 nextReqIs_IMADData nextSnpRespIs_general_rule_5_0) done
   show goal12_2: "CSTATE IMAD T 0 ∧ nextHTDDataPending T 0 ⟶ HSTATE MA ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) HSTATE_IMADData i919 nextReqIs_IMADData nextSnpRespIs_general_rule_5_0) done
qed
  show goal_13: "CSTATE SMAD T 0 ∧ nextHTDDataPending T 0 ⟶ (HSTATE MA ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) 0) ∧ (HSTATE MA ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) 1)"
    proof (intro impconjI)
   show goal13_1: "CSTATE SMAD T 0 ∧ nextHTDDataPending T 0 ⟶ HSTATE MA ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) HSTATE_SMADData i918 nextReqIs_SMADData nextSnpRespIs_general_rule_5_0) done
   show goal13_2: "CSTATE SMAD T 0 ∧ nextHTDDataPending T 0 ⟶ HSTATE MA ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) HSTATE_SMADData i919 nextReqIs_SMADData nextSnpRespIs_general_rule_5_0) done
qed
  show goal_14: "CSTATE IMAD T 0 ∧ nextGOPending T 0 ⟶ (HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ]) 0) ∧ (HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ]) 1)"
    proof (intro impconjI)
   show goal14_1: "CSTATE IMAD T 0 ∧ nextGOPending T 0 ⟶ HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis IMADGO'_nextReqIs_invariant_DirtyEvict ISADGO'_HSTATE_neg i918
    nextSnpRespIs_general_rule_6_0) done
   show goal14_2: "CSTATE IMAD T 0 ∧ nextGOPending T 0 ⟶ HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis IMADGO'_nextReqIs_invariant_DirtyEvict ISADGO'_HSTATE_neg i919
    nextSnpRespIs_general_rule_6_0) done
qed
  show goal_15: "CSTATE ISAD T 0 ∧ nextGOPending T 0 ⟶ (HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ]) 0) ∧ (HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ]) 1)"
    proof (intro impconjI)
   show goal15_1: "CSTATE ISAD T 0 ∧ nextGOPending T 0 ⟶ HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis ISADGO'_nextReqIs_invariant_DirtyEvict i91) done
   show goal15_2: "CSTATE ISAD T 0 ∧ nextGOPending T 0 ⟶ HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis ISADGO'_nextReqIs ISADGO'_nextReqIs_invariant_DirtyEvict ISADGO'_nextSnpRespIs
    hstate_invariants(14,2,24) i919 nextGOPending_yes_reqresp_rule_6_1) done
qed
  show goal_16: "CSTATE ISAD T 0 ∧ nextHTDDataPending T 0 ⟶ (HSTATE MA ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) 0) ∧ (HSTATE MA ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) 1)"
    proof (intro impconjI)
   show goal16_1: "CSTATE ISAD T 0 ∧ nextHTDDataPending T 0 ⟶ HSTATE MA ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) i91 nextReqIs_ISADData) done
   show goal16_2: "CSTATE ISAD T 0 ∧ nextHTDDataPending T 0 ⟶ HSTATE MA ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) HSTATE_ISADData i919 nextReqIs_ISADData nextSnpRespIs_general_rule_5_0) done
qed
  show goal_17: "CSTATE SMAD T 0 ∧ nextGOPending T 0 ⟶ (HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ]) 0) ∧ (HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ]) 1)"
    proof (intro impconjI)
   show goal17_1: "CSTATE SMAD T 0 ∧ nextGOPending T 0 ⟶ HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis SMADGO'_nextReqIs SMADGO'_nextReqIs_invariant_DirtyEvict SMADGO'_nextSnpRespIs
    hstate_invariants(14,2,24) i918 nextSnpRespIs_general_rule_6_0) done
   show goal17_2: "CSTATE SMAD T 0 ∧ nextGOPending T 0 ⟶ HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis SMADGO'_nextReqIs_invariant_DirtyEvict i515 i863 nextGOPending_yes_reqresp_rule_6_1
    nextReqIs_general_rule_6_0) done
qed
  show goal_18: "CSTATE SMA T 0 ∧ nextGOPending T 0 ⟶ (HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) 0) ∧ (HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) 1)"
    proof (intro impconjI)
   show goal18_1: "CSTATE SMA T 0 ∧ nextGOPending T 0 ⟶ HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis SMAGO_nextSnpRespIs_sameside i899 nextSnpRespIs_general_rule_4_0) done
   show goal18_2: "CSTATE SMA T 0 ∧ nextGOPending T 0 ⟶ HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HSTATE_SMAGO_invariant SMAGO_nextSnpRespIs_otherside i919
    nextGOPending_yes_reqresp_rule_4_1 nextReqIs_SMAGO) done
qed
  show goal_19: "CXL_SPG_used T 0 ∧ CSTATE SMAD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ (HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD]) 0) ∧ (HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD]) 1)"
    proof (intro impconjI)
   show goal19_1: "CXL_SPG_used T 0 ∧ CSTATE SMAD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis CXL_SPG_used_general_rule_6_0 ReqType.distinct(39) SMADSnpInv_nextReqIs i396
    nextReqIs_invariant) done
   show goal19_2: "CXL_SPG_used T 0 ∧ CSTATE SMAD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis CSTATE_disj1 HSTATE_invariant_ModifiedSnpInv
    MESI_State.distinct(339,343,355,369,373,385,497,499,531,533,565,575) SMADSnpInv_nextReqIs i454
    i596 nextSnoopIs_otherside_rule_1_0) done
qed
  show goal_20: "CSTATE SMD T 0 ∧ nextHTDDataPending T 0 ⟶ (HSTATE MA ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 0) ∧ (HSTATE MA ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 1)"
    proof (intro impconjI)
   show goal20_1: "CSTATE SMD T 0 ∧ nextHTDDataPending T 0 ⟶ HSTATE MA ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) SMDData_HSTATE i918 nextReqIs_SMDData nextSnpRespIs_general_rule_7_0) done
   show goal20_2: "CSTATE SMD T 0 ∧ nextHTDDataPending T 0 ⟶ HSTATE MA ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) i554 nextReqIs_SMDData) done
qed
  show goal_21: "CSTATE IMA T 0 ∧ nextGOPending T 0 ⟶ (HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) 0) ∧ (HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) 1)"
    proof (intro impconjI)
   show goal21_1: "CSTATE IMA T 0 ∧ nextGOPending T 0 ⟶ HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis SMAGO_nextSnpRespIs_sameside i899 nextSnpRespIs_general_rule_4_0) done
   show goal21_2: "CSTATE IMA T 0 ∧ nextGOPending T 0 ⟶ HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HSTATE_SMAGO_invariant SMAGO_nextSnpRespIs_otherside i919
    nextGOPending_yes_reqresp_rule_4_1 nextReqIs_SMAGO) done
qed
  show goal_22: "CSTATE ISA T 0 ∧ nextGOPending T 0 ⟶ (HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0]) 0) ∧ (HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0]) 1)"
    proof (intro impconjI)
   show goal22_1: "CSTATE ISA T 0 ∧ nextGOPending T 0 ⟶ HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HSTATE_ISAGO_invariant ISAGO_nextSnpRespIs_sameside i918 nextReqIs_ISAGO
    nextSnpRespIs_general_rule_4_0) done
   show goal22_2: "CSTATE ISA T 0 ∧ nextGOPending T 0 ⟶ HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HSTATE_ISAGO_invariant ISAGO_nextSnpRespIs_otherside i919
    nextGOPending_yes_reqresp_rule_4_1 nextReqIs_ISAGO) done
qed
  show goal_23: "CSTATE Modified T 0 ∧ nextStore T 0 ⟶ (HSTATE MA (T [ -=i 0]) ∧ nextSnpRespIs RspIHitSE (T [ -=i 0]) 0 ⟶ ¬ nextReqIs DirtyEvict (T [ -=i 0]) 0) ∧ (HSTATE MA (T [ -=i 0]) ∧ nextSnpRespIs RspIHitSE (T [ -=i 0]) 1 ⟶ ¬ nextReqIs DirtyEvict (T [ -=i 0]) 1)"
    proof (intro impconjI)
   show goal23_1: "CSTATE Modified T 0 ∧ nextStore T 0 ⟶ HSTATE MA (T [ -=i 0]) ∧ nextSnpRespIs RspIHitSE (T [ -=i 0]) 0 ⟶ ¬ nextReqIs DirtyEvict (T [ -=i 0]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) HSTATE_general_rule_10_0 i918 nextReqIs_general_rule_13_0
    nextSnpRespIs_general_rule_13_0) done
   show goal23_2: "CSTATE Modified T 0 ∧ nextStore T 0 ⟶ HSTATE MA (T [ -=i 0]) ∧ nextSnpRespIs RspIHitSE (T [ -=i 0]) 1 ⟶ ¬ nextReqIs DirtyEvict (T [ -=i 0]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) HSTATE_general_rule_10_0 i919 nextReqIs_general_rule_13_0
    nextSnpRespIs_general_rule_13_0) done
qed
  show goal_24: "CSTATE Modified T 0 ∧ nextLoad T 0 ⟶ (HSTATE MA (T [ -=i 0]) ∧ nextSnpRespIs RspIHitSE (T [ -=i 0]) 0 ⟶ ¬ nextReqIs DirtyEvict (T [ -=i 0]) 0) ∧ (HSTATE MA (T [ -=i 0]) ∧ nextSnpRespIs RspIHitSE (T [ -=i 0]) 1 ⟶ ¬ nextReqIs DirtyEvict (T [ -=i 0]) 1)"
    proof (intro impconjI)
   show goal24_1: "CSTATE Modified T 0 ∧ nextLoad T 0 ⟶ HSTATE MA (T [ -=i 0]) ∧ nextSnpRespIs RspIHitSE (T [ -=i 0]) 0 ⟶ ¬ nextReqIs DirtyEvict (T [ -=i 0]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) HSTATE_general_rule_10_0 i918 nextReqIs_general_rule_13_0
    nextSnpRespIs_general_rule_13_0) done
   show goal24_2: "CSTATE Modified T 0 ∧ nextLoad T 0 ⟶ HSTATE MA (T [ -=i 0]) ∧ nextSnpRespIs RspIHitSE (T [ -=i 0]) 1 ⟶ ¬ nextReqIs DirtyEvict (T [ -=i 0]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) HSTATE_general_rule_10_0 i919 nextReqIs_general_rule_13_0
    nextSnpRespIs_general_rule_13_0) done
qed
  show goal_25: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ (HSTATE MA (consumeGOSendData 0 Invalid T) ∧ nextSnpRespIs RspIHitSE (consumeGOSendData 0 Invalid T) 0 ⟶ ¬ nextReqIs DirtyEvict (consumeGOSendData 0 Invalid T) 0) ∧ (HSTATE MA (consumeGOSendData 0 Invalid T) ∧ nextSnpRespIs RspIHitSE (consumeGOSendData 0 Invalid T) 1 ⟶ ¬ nextReqIs DirtyEvict (consumeGOSendData 0 Invalid T) 1)"
    proof (intro impconjI)
   show goal25_1: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ HSTATE MA (consumeGOSendData 0 Invalid T) ∧ nextSnpRespIs RspIHitSE (consumeGOSendData 0 Invalid T) 0 ⟶ ¬ nextReqIs DirtyEvict (consumeGOSendData 0 Invalid T) 0"
     apply  (cases "reqs1 T")
sorry (*split: sledgehammer failed*)
  apply (smt (verit) i94 list.distinct(1) reqresps_empty_noGOPendingIs1) done
   show goal25_2: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ HSTATE MA (consumeGOSendData 0 Invalid T) ∧ nextSnpRespIs RspIHitSE (consumeGOSendData 0 Invalid T) 1 ⟶ ¬ nextReqIs DirtyEvict (consumeGOSendData 0 Invalid T) 1"
     apply  (cases "reqs1 T")
sorry (*split: sledgehammer failed*)
sorry (*split: sledgehammer failed*) done
qed
  show goal_26: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ (HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) 0) ∧ (HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) 1)"
    proof (intro impconjI)
   show goal26_1: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HSTATE_SIAGO_WritePullDrop_invariant SIAGO_WritePullDrop_nextSnpRespIs_sameside i918
    nextReqIs_SIAGO_WritePullDrop nextSnpRespIs_general_rule_4_0) done
   show goal26_2: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HSTATE_SIAGO_WritePullDrop_invariant SIAGO_WritePullDrop_nextSnpRespIs_otherside i919
    nextGOPendingIs_XYAGO_other1 nextReqIs_SIAGO_WritePullDrop) done
qed
  show goal_27: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ (HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) 0) ∧ (HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) 1)"
    proof (intro impconjI)
   show goal27_1: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HSTATE_SIAGO_WritePullDrop_invariant SIAGO_WritePullDrop_nextSnpRespIs_sameside i918
    nextReqIs_SIAGO_WritePullDrop nextSnpRespIs_general_rule_4_0) done
   show goal27_2: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HSTATE_SIAGO_WritePullDrop_invariant SIAGO_WritePullDrop_nextSnpRespIs_otherside i919
    nextGOPendingIs_XYAGO_other1 nextReqIs_SIAGO_WritePullDrop) done
qed
  show goal_28: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ (HSTATE MA (consumeGOSendData 0 Invalid T) ∧ nextSnpRespIs RspIHitSE (consumeGOSendData 0 Invalid T) 0 ⟶ ¬ nextReqIs DirtyEvict (consumeGOSendData 0 Invalid T) 0) ∧ (HSTATE MA (consumeGOSendData 0 Invalid T) ∧ nextSnpRespIs RspIHitSE (consumeGOSendData 0 Invalid T) 1 ⟶ ¬ nextReqIs DirtyEvict (consumeGOSendData 0 Invalid T) 1)"
    proof (intro impconjI)
   show goal28_1: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ HSTATE MA (consumeGOSendData 0 Invalid T) ∧ nextSnpRespIs RspIHitSE (consumeGOSendData 0 Invalid T) 0 ⟶ ¬ nextReqIs DirtyEvict (consumeGOSendData 0 Invalid T) 0"
     apply  (cases "reqs1 T")
sorry (*split: sledgehammer failed*)
  apply (smt (verit) i94 list.distinct(1) reqresps_empty_noGOPendingIs1) done
   show goal28_2: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ HSTATE MA (consumeGOSendData 0 Invalid T) ∧ nextSnpRespIs RspIHitSE (consumeGOSendData 0 Invalid T) 1 ⟶ ¬ nextReqIs DirtyEvict (consumeGOSendData 0 Invalid T) 1"
     apply  (cases "reqs1 T")
sorry (*split: sledgehammer failed*)
sorry (*split: sledgehammer failed*) done
qed
  show goal_29: "CSTATE IMD T 0 ∧ nextHTDDataPending T 0 ⟶ (HSTATE MA ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 0) ∧ (HSTATE MA ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 1)"
    proof (intro impconjI)
   show goal29_1: "CSTATE IMD T 0 ∧ nextHTDDataPending T 0 ⟶ HSTATE MA ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) SMDData_HSTATE i918 nextReqIs_SMDData nextSnpRespIs_general_rule_7_0) done
   show goal29_2: "CSTATE IMD T 0 ∧ nextHTDDataPending T 0 ⟶ HSTATE MA ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) SMDData_HSTATE i919 nextReqIs_SMDData nextSnpRespIs_general_rule_7_0) done
qed
  show goal_30: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ (HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 0) ∧ (HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 1)"
    proof (intro impconjI)
   show goal30_1: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis CXL_SPG_used_general_rule_6_0 HOST_State.distinct(149,289) HSTATE_general_rule_9_0
    HSTATE_invariant3 i479 nat_to_id.simps(1) sendSnpRespAndData_def) done
   show goal30_2: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HOST_State.distinct(149,269) HSTATE_general_rule_9_0 HSTATE_invariant3 i479
    nat_to_id.simps(1) nextSnoopIs_otherside_rule_1_0 sendSnpRespAndData_def) done
qed
  show goal_31: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ (HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 0) ∧ (HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 1)"
    proof (intro impconjI)
   show goal31_1: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis CXL_SPG_used_general_rule_6_0 HOST_State.distinct(149) HSTATE_invariant3
    HSTATE_rule_16 hstate_invariants(2) i479 i769 nat_to_id.simps(1) sendSnpRespAndData_def) done
   show goal31_2: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HOST_State.distinct(149,289) HSTATE_invariant3 HSTATE_invariant_ModifiedSnpInv
    hstate_invariants(9) i479 nat_to_id.simps(1)) done
qed
  show goal_32: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ (HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 0) ∧ (HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 1)"
    proof (intro impconjI)
   show goal32_1: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis CXL_SPG_used_general_rule_6_0 HSTATE_invariant_ModifiedSnpInv hstate_invariants(9)
    i576 i600) done
   show goal32_2: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HSTATE_invariant_ModifiedSnpInv hstate_invariants(9) i576 i600
    nextSnoopIs_otherside_rule_1_0) done
qed
  show goal_33: "CSTATE MIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ (HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0]) 0) ∧ (HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0]) 1)"
    proof (intro impconjI)
   show goal33_1: "CSTATE MIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0]) 0"
     apply  (cases "reqresps1 T")
 apply (smt (verit) reqresps_empty_noGOPendingIs1)
sorry (*split: sledgehammer failed*) done
   show goal33_2: "CSTATE MIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0]) 1"
     sorry (*failed to find proof*)
qed
  show goal_34: "CXL_SPG_used T 0 ∧ CSTATE SIA T 0 ∧ nextSnoopIs SnpInv T 0 ∧ ¬ nextReqIs DirtyEvict T 0 ⟶ (HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA]) 0) ∧ (HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA]) 1)"
    proof (intro impconjI)
   show goal34_1: "CXL_SPG_used T 0 ∧ CSTATE SIA T 0 ∧ nextSnoopIs SnpInv T 0 ∧ ¬ nextReqIs DirtyEvict T 0 ⟶ HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis CXL_SPG_used_general_rule_6_0 SMADSnpInv_nextReqIs) done
   show goal34_2: "CXL_SPG_used T 0 ∧ CSTATE SIA T 0 ∧ nextSnoopIs SnpInv T 0 ∧ ¬ nextReqIs DirtyEvict T 0 ⟶ HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis CSTATE_disj1 MESI_State.distinct(339,343,355,369,373,385,497,499,531,533,565,575)
    SMADSnpInv_nextReqIs i454 i502 i596 nextSnoopIs_otherside_rule_1_0) done
qed
  show goal_35: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ (HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 0) ∧ (HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 1)"
    proof (intro impconjI)
   show goal35_1: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis CSTATE_inequality_invariant MESI_State.distinct(27,31,43) i453 nat_to_id.simps(1)
    nextReqIs_general_rule_12_0) done
   show goal35_2: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HSTATE_general_rule_9_0 ModifiedSnpDataInvalid_nextSnpRespIs_otherside i919
    nat_to_id.simps(1) nextReqIs_general_rule_12_0 nextSnoopIs_otherside_rule_1_0
    sendSnpRespAndData_def) done
qed
  show goal_36: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ (HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 0) ∧ (HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 1)"
    proof (intro impconjI)
   show goal36_1: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis CXL_SPG_used_general_rule_6_0 HOST_State.distinct(149,269) HSTATE_general_rule_9_0
    HSTATE_invariant3 i483 nat_to_id.simps(1) sendSnpRespAndData_def) done
   show goal36_2: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HOST_State.distinct(149,169) HSTATE_invariant3 HSTATE_rule_16 i483 nat_to_id.simps(1)
    nextSnoopIs_otherside_rule_1_0 sendSnpRespAndData_def) done
qed
  show goal_37: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ (HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 0) ∧ (HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 1)"
    proof (intro impconjI)
   show goal37_1: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis CSTATE_inequality_invariant MESI_State.distinct(27,31,43) i453 nat_to_id.simps(1)
    nextReqIs_general_rule_12_0) done
   show goal37_2: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ HSTATE MA ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ nextSnpRespIs RspIHitSE ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HOST_State.distinct(149,247) HSTATE_general_rule_9_0 HSTATE_invariant3 i483
    nat_to_id.simps(1) nextSnoopIs_otherside_rule_1_0 sendSnpRespAndData_def) done
qed
  show goal_38: "HSTATE InvalidM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ (HSTATE MA ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) 0) ∧ (HSTATE MA ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) 1)"
    proof (intro impconjI)
   show goal38_1: "HSTATE InvalidM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ HSTATE MA ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) minus_req_nextReqIs_False_swmrp_rule_2_0 numeral_One) done
   show goal38_2: "HSTATE InvalidM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ HSTATE MA ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HOST_State.distinct(87) HSTATE_equals_sHost hstate_invariants(13,8)) done
qed
  show goal_39: "HSTATE InvalidM T ∧ nextReqIs RdOwn T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ (HSTATE MA ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) 0) ∧ (HSTATE MA ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) 1)"
    proof (intro impconjI)
   show goal39_1: "HSTATE InvalidM T ∧ nextReqIs RdOwn T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ HSTATE MA ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) minus_req_nextReqIs_False_swmrp_rule_2_0 numeral_One) done
   show goal39_2: "HSTATE InvalidM T ∧ nextReqIs RdOwn T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ HSTATE MA ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HOST_State.distinct(17) HSTATE_equals_sHost HSTATE_invariant_reqresp
    hstate_invariants(13)) done
qed
  show goal_40: "HSTATE SharedM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ (HSTATE MA ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) 0) ∧ (HSTATE MA ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) 1)"
    proof (intro impconjI)
   show goal40_1: "HSTATE SharedM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ HSTATE MA ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) minus_req_nextReqIs_False_swmrp_rule_2_0 numeral_One) done
   show goal40_2: "HSTATE SharedM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ HSTATE MA ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) HSTATE_invariant4 HostInvalidRdShared_HSTATE
    HostInvalidRdShared_nextSnpRespIs_otherside i919 nextReqIs_HostSharedRdShared_IMAD_invariant2
    numeral_One) done
qed
  show goal_41: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ (HSTATE MA ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ]) 0) ∧ (HSTATE MA ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ]) 1)"
    proof (intro impconjI)
   show goal41_1: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ HSTATE MA ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def
    MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MD_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def
    MEM_SD_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPINV_COL_def
    minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) done
   show goal41_2: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ HSTATE MA ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def CSTATE_disj1 DATA_COL_def DIRTYEVICT_COL_def
    EVICT_COL_def GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def
    HOST_DEVNUM_def HostShared_CleanEvict_NotLastDrop_nextSnpRespIs_otherside IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISA_ROW_def
    ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MD_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def
    MESI_State.distinct(175,323,355) MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def
    RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def
    SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPINV_COL_def i454 i457 i660
    i92 nextReqIs_otherside_rule_1_0 numeral_One one_mod_two_eq_one plus_nat.add_0) done
qed
  show goal_42: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ (HSTATE MA ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 0) ∧ (HSTATE MA ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 1)"
    proof (intro impconjI)
   show goal42_1: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ HSTATE MA ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def
    MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def
    MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def
    MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def
    RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def
    SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def
    minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) done
   show goal42_2: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ HSTATE MA ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HOST_State.distinct(105,287) HSTATE_invariant3 HostShared_CleanEvict_NotLastData_HSTATE
    IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def
    MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def
    MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def
    MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def
    RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def
    SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def numeral_One) done
qed
  show goal_43: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ (HSTATE MA ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 0) ∧ (HSTATE MA ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 1)"
    proof (intro impconjI)
   show goal43_1: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ HSTATE MA ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) done
   show goal43_2: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ HSTATE MA ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 1"
     apply  (cases "reqresps1 T")
sorry (*split: sledgehammer failed*)
  apply (smt (verit) CSTATE_different2 MESI_State.distinct(163,175) i454 i613old i660 lastSharer_def
   nextReqIs_otherside_rule_1_0 nextSnpRespIs_general_rule_8_0 nextSnpRespIs_invariant2) done
qed
  show goal_44: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T 1 ⟶ (HSTATE MA ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) 0) ∧ (HSTATE MA ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) 1)"
    proof (intro impconjI)
   show goal44_1: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T 1 ⟶ HSTATE MA ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def
    MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def
    MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def
    MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def
    RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def
    SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def
    minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) done
   show goal44_2: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T 1 ⟶ HSTATE MA ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def CSTATE_disj1 DATA_COL_def DIRTYEVICT_COL_def
    EVICT_COL_def GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def
    HOST_DEVNUM_def HostShared_CleanEvictNoData_NotLast_nextSnpRespIs_otherside IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def
    ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def
    MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def
    MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MESI_State.distinct(175,323,355)
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def
    RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def
    SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def
    Shared_CleanEvictNoData_NotLast_otherside_nextReqIs i454 i457 i660 i92 numeral_One) done
qed
  show goal_45: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ (HSTATE MA ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) 0) ∧ (HSTATE MA ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) 1)"
    proof (intro impconjI)
   show goal45_1: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ HSTATE MA ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) done
   show goal45_2: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ HSTATE MA ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) 1"
     apply  (cases "reqresps1 T")
sorry (*split: sledgehammer failed*)
sorry (*split: sledgehammer failed*) done
qed
  show goal_46: "HSTATE SharedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ (HSTATE MA ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 0) ∧ (HSTATE MA ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 1)"
    proof (intro impconjI)
   show goal46_1: "HSTATE SharedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ HSTATE MA ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) done
   show goal46_2: "HSTATE SharedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ HSTATE MA ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HOST_State.distinct(287) HSTATE_equals_sHost HSTATE_invariant_reqresp
    hstate_invariants(13)) done
qed
  show goal_47: "HSTATE ModifiedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE MIA T 0 ⟶ (HSTATE MA ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 0) ∧ (HSTATE MA ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 1)"
    proof (intro impconjI)
   show goal47_1: "HSTATE ModifiedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE MIA T 0 ⟶ HSTATE MA ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) done
   show goal47_2: "HSTATE ModifiedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE MIA T 0 ⟶ HSTATE MA ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 1"
     sorry (*failed to find proof*)
qed
  show goal_48: "HSTATE ModifiedM T ∧ nextReqIs RdShared T 0 ⟶ (HSTATE MA ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ]) 0) ∧ (HSTATE MA ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ]) 1)"
    proof (intro impconjI)
   show goal48_1: "HSTATE ModifiedM T ∧ nextReqIs RdShared T 0 ⟶ HSTATE MA ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) minus_req_nextReqIs_False_swmrp_rule_3_0 numeral_One one_mod_two_eq_one
    plus_nat.add_0) done
   show goal48_2: "HSTATE ModifiedM T ∧ nextReqIs RdShared T 0 ⟶ HSTATE MA ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HOST_State.distinct(149) HSTATE_equals_sHost bits_one_mod_two_eq_one
    comm_monoid_add_class.add_0 hstate_invariants(13)) done
qed
  show goal_49: "HSTATE ModifiedM T ∧ nextReqIs RdOwn T 0 ⟶ (HSTATE MA ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ]) 0) ∧ (HSTATE MA ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ]) 1)"
    proof (intro impconjI)
   show goal49_1: "HSTATE ModifiedM T ∧ nextReqIs RdOwn T 0 ⟶ HSTATE MA ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) minus_req_nextReqIs_False_swmrp_rule_3_0 numeral_One one_mod_two_eq_one
    plus_nat.add_0) done
   show goal49_2: "HSTATE ModifiedM T ∧ nextReqIs RdOwn T 0 ⟶ HSTATE MA ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis DIRTYEVICT_COL_def HOST_DEVNUM_def HOST_State.distinct(249) HSTATE_equals_sHost
    hstate_invariants(13) one_mod_two_eq_one plus_nat.add_0) done
qed
  show goal_50: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Shared T ((0 + 1) mod 2) ⟶ (HSTATE MA (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ]) 0) ∧ (HSTATE MA (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ]) 1)"
    proof (intro impconjI)
   show goal50_1: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Shared T ((0 + 1) mod 2) ⟶ HSTATE MA (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ]) 0"
     sorry (*failed to find proof*)
   show goal50_2: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Shared T ((0 + 1) mod 2) ⟶ HSTATE MA (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ]) 1"
     apply  (cases "snps1 T")
sorry (*split: sledgehammer failed*)
sorry (*split: sledgehammer failed*) done
qed
  show goal_51: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ (HSTATE MA ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) 0) ∧ (HSTATE MA ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) 1)"
    proof (intro impconjI)
   show goal51_1: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ HSTATE MA ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_NOLAST_COL_def DIRTYEVICT_COL_def GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def
    GOWRITEPULL_COL_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISA_ROW_def ISSUE_EVENT_ROW_def
    MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MD_ROW_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPINV_COL_def
    minus_req_nextReqIs_False_swmrp_rule_2_0 numeral_One) done
   show goal51_2: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ HSTATE MA ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_disj1 DIRTYEVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISA_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MD_ROW_def
    MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MESI_State.distinct(163,175) MIAD_ROW_def
    MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def
    SMA_ROW_def SNPINV_COL_def i454 i494 i660 nextReqIs_HostInvalidRdOwn_IMAD_invariant2
    not_mod_2_eq_0_eq_1 numeral_One) done
qed
  show goal_52: "HSTATE SD T ∧ nextDTHDataFrom 0 T ⟶ (HSTATE MA ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) 0) ∧ (HSTATE MA ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) 1)"
    proof (intro impconjI)
   show goal52_1: "HSTATE SD T ∧ nextDTHDataFrom 0 T ⟶ HSTATE MA ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HOST_State.distinct(177,87) HSTATE_invariant3 HostSBData_HSTATE IIA_ROW_def IMAD_ROW_def
    IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def
    ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def
    OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i962 nat_to_id.simps(1) numeral_One) done
   show goal52_2: "HSTATE SD T ∧ nextDTHDataFrom 0 T ⟶ HSTATE MA ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HOST_State.distinct(177,87) HSTATE_invariant3 HostSBData_HSTATE IIA_ROW_def IMAD_ROW_def
    IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def
    ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def
    OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i962 nat_to_id.simps(1) numeral_One) done
qed
  show goal_53: "HSTATE SAD T ∧ nextDTHDataFrom 0 T ⟶ (HSTATE MA ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ]) 0) ∧ (HSTATE MA ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ]) 1)"
    proof (intro impconjI)
   show goal53_1: "HSTATE SAD T ∧ nextDTHDataFrom 0 T ⟶ HSTATE MA ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HOST_State.distinct(203) HSTATE_equals_sHost IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def
    IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def
    MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def
    hstate_invariants(16) i733 nat_to_id.simps(1) numeral_One) done
   show goal53_2: "HSTATE SAD T ∧ nextDTHDataFrom 0 T ⟶ HSTATE MA ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HOST_State.distinct(203) HSTATE_equals_sHost IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def
    IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def
    MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def
    hstate_invariants(16) i733 nat_to_id.simps(1) numeral_One) done
qed
  show goal_54: "HSTATE MD T ∧ nextDTHDataFrom 0 T ⟶ (HSTATE MA ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) 0) ∧ (HSTATE MA ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) 1)"
    proof (intro impconjI)
   show goal54_1: "HSTATE MD T ∧ nextDTHDataFrom 0 T ⟶ HSTATE MA ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HOST_State.distinct(17,271) HSTATE_invariant4 HostMBData_HSTATE IIA_ROW_def IMAD_ROW_def
    IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def
    ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def
    OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i408 nat_to_id.simps(1) numeral_One) done
   show goal54_2: "HSTATE MD T ∧ nextDTHDataFrom 0 T ⟶ HSTATE MA ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CLEANEVICT_LAST_COL_def CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HOST_State.distinct(17,271) HSTATE_invariant4 HostMBData_HSTATE IIA_ROW_def IMAD_ROW_def
    IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def
    ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def
    OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i408 nat_to_id.simps(1) numeral_One) done
qed
  show goal_55: "HSTATE ID T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ (CSTATE IIA T ((0 + 1) mod 2) ∨ CSTATE Invalid T ((0 + 1) mod 2) ∨ CSTATE SIA T ((0 + 1) mod 2)) ⟶ (HSTATE MA ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) 0) ∧ (HSTATE MA ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) 1)"
    proof (intro impconjI)
   show goal55_1: "HSTATE ID T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ (CSTATE IIA T ((0 + 1) mod 2) ∨ CSTATE Invalid T ((0 + 1) mod 2) ∨ CSTATE SIA T ((0 + 1) mod 2)) ⟶ HSTATE MA ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) 0"
     sorry (*failed to find proof*)
   show goal55_2: "HSTATE ID T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ (CSTATE IIA T ((0 + 1) mod 2) ∨ CSTATE Invalid T ((0 + 1) mod 2) ∨ CSTATE SIA T ((0 + 1) mod 2)) ⟶ HSTATE MA ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) 1"
     apply  (cases "reqs1 T")
sorry (*split: sledgehammer failed*)
  apply (metis HOST_State.distinct(119) HSTATE_equals_sHost hstate_invariants(16)) done
qed
  show goal_56: "HSTATE MAD T ∧ nextDTHDataFrom 0 T ⟶ (HSTATE MA ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ]) 0) ∧ (HSTATE MA ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ]) 1)"
    proof (intro impconjI)
   show goal56_1: "HSTATE MAD T ∧ nextDTHDataFrom 0 T ⟶ HSTATE MA ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ]) 0"
     sorry (*failed to find proof*)
   show goal56_2: "HSTATE MAD T ∧ nextDTHDataFrom 0 T ⟶ HSTATE MA ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ]) 1"
     apply  (cases "reqs1 T")
sorry (*split: sledgehammer failed*)
sorry (*split: sledgehammer failed*) done
qed
  show goal_57: "HSTATE SAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ (HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) 0) ∧ (HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) 1)"
    proof (intro impconjI)
   show goal57_1: "HSTATE SAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) 0"
     sorry (*failed to find proof*)
   show goal57_2: "HSTATE SAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) i437 i92 nextReqIs_HostSADRspSFwdM_IMAD_invariant2 numeral_One
    one_mod_two_eq_one plus_nat.add_0) done
qed
  show goal_58: "HSTATE SAD T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ (HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) 0) ∧ (HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) 1)"
    proof (intro impconjI)
   show goal58_1: "HSTATE SAD T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) 0"
     sorry (*failed to find proof*)
   show goal58_2: "HSTATE SAD T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) i437 i92 nextReqIs_HostSADRspSFwdM_IMAD_invariant2 numeral_One
    one_mod_two_eq_one plus_nat.add_0) done
qed
  show goal_59: "HSTATE MAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ (HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] ) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] ) 0) ∧ (HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] ) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] ) 1)"
    proof (intro impconjI)
   show goal59_1: "HSTATE MAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] ) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] ) 0"
     sorry (*failed to find proof*)
   show goal59_2: "HSTATE MAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] ) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] ) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HOST_State.distinct(271) HSTATE_equals_sHost bits_one_mod_two_eq_one
    comm_monoid_add_class.add_0 hstate_invariants(15)) done
qed
  show goal_60: "HSTATE MA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ (HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) 0) ∧ (HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) 1)"
    proof (intro impconjI)
   show goal60_1: "HSTATE MA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) 0"
     sorry (*failed to find proof*)
   show goal60_2: "HSTATE MA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) HostMARspIHitSE_nextSnpRespIs_otherside i919
    nextReqIs_HostMARspIHitSE_IMAD_invariant2 numeral_One one_mod_two_eq_one plus_nat.add_0) done
qed
  show goal_61: "HSTATE SA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ (HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) 0) ∧ (HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) 1)"
    proof (intro impconjI)
   show goal61_1: "HSTATE SA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HOST_State.distinct(87) HSTATE_equals_sHost bits_one_mod_two_eq_one
    comm_monoid_add_class.add_0 hstate_invariants(15)) done
   show goal61_2: "HSTATE SA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis GTS_def bits_one_mod_two_eq_one comm_monoid_add_class.add_0 nextSnpRespIs_invariant2
    snpresps2_HostSARspSFwdM) done
qed
  show goal_62: "HSTATE SA T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ (HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) 0) ∧ (HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) 1)"
    proof (intro impconjI)
   show goal62_1: "HSTATE SA T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HOST_State.distinct(87) HSTATE_equals_sHost bits_one_mod_two_eq_one
    comm_monoid_add_class.add_0 hstate_invariants(15)) done
   show goal62_2: "HSTATE SA T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HOST_State.distinct(87) HSTATE_equals_sHost bits_one_mod_two_eq_one
    comm_monoid_add_class.add_0 hstate_invariants(15)) done
qed
  show goal_63: "HSTATE IB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ (HSTATE MA ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) 0) ∧ (HSTATE MA ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) 1)"
    proof (intro impconjI)
   show goal63_1: "HSTATE IB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ HSTATE MA ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) 0"
     sorry (*failed to find proof*)
   show goal63_2: "HSTATE IB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ HSTATE MA ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) 1"
     apply  (cases "reqs1 T")
 apply (metis HOST_State.distinct(119) HSTATE_equals_sHost hstate_invariants(16))
  apply (metis HOST_State.distinct(119) HSTATE_equals_sHost hstate_invariants(16)) done
qed
  show goal_64: "HSTATE SB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ (HSTATE MA ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) 0) ∧ (HSTATE MA ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) 1)"
    proof (intro impconjI)
   show goal64_1: "HSTATE SB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ HSTATE MA ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis i68 nat_to_id.simps(1) reqs1_HostSBData
    reqs1_empty_not_nextReqIs_general_invariant) done
   show goal64_2: "HSTATE SB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ HSTATE MA ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HostSBData_nextSnpRespIs_otherside i613old nat_to_id.simps(1)
    nextSnpRespIs_property2) done
qed
  show goal_65: "HSTATE MB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ (HSTATE MA ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) 0) ∧ (HSTATE MA ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) 1)"
    proof (intro impconjI)
   show goal65_1: "HSTATE MB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ HSTATE MA ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis i806 nat_to_id.simps(1) nextSnpRespIs_property1 snpresps1_HostMBData) done
   show goal65_2: "HSTATE MB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ HSTATE MA ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HostMBData_nextSnpRespIs_otherside i806 nat_to_id.simps(1)
    nextSnpRespIs_property2) done
qed
  show goal_66: "HSTATE InvalidM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ (HSTATE MA ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 0) ∧ (HSTATE MA ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 1)"
    proof (intro impconjI)
   show goal66_1: "HSTATE InvalidM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ HSTATE MA ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) done
   show goal66_2: "HSTATE InvalidM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ HSTATE MA ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ nextSnpRespIs RspIHitSE ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) i199 i872 nextReqIs_HostInvalidDirtyEvict_otherside_1 numeral_One) done
qed
  show goal_67: "HSTATE MA T ∧ nextSnpRespIs RspIHitSE T 0 ∧ GTS T 0 ∧ htddatas1 T = [] ⟶ (HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) 0) ∧ (HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) 1)"
    proof (intro impconjI)
   show goal67_1: "HSTATE MA T ∧ nextSnpRespIs RspIHitSE T 0 ∧ GTS T 0 ∧ htddatas1 T = [] ⟶ HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) 0 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) i918 nextReqIs_HostMARspIHitSE_IMAD_invariant1 numeral_One one_mod_two_eq_one
    plus_nat.add_0) done
   show goal67_2: "HSTATE MA T ∧ nextSnpRespIs RspIHitSE T 0 ∧ GTS T 0 ∧ htddatas1 T = [] ⟶ HSTATE MA ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ nextSnpRespIs RspIHitSE ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) 1 ⟶ ¬ nextReqIs DirtyEvict ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (smt (verit) HostMARspIHitSE_nextSnpRespIs_otherside i919
    nextReqIs_HostMARspIHitSE_IMAD_invariant2 numeral_One one_mod_two_eq_one plus_nat.add_0) done
qed
  show goal_68: "CSTATE SIAC T 0 ∧ nextGOPendingIs GO T 0 ∧ nextGOPendingState Invalid T 0 ∧ GTS T ((0 + 1) mod 2) ∧ saneSIACGO T 0 ⟶ (HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) 0) ∧ (HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) 1)"
    proof (intro impconjI)
   show goal68_1: "CSTATE SIAC T 0 ∧ nextGOPendingIs GO T 0 ∧ nextGOPendingState Invalid T 0 ∧ GTS T ((0 + 1) mod 2) ∧ saneSIACGO T 0 ⟶ HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) 0 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) 0"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HSTATE_rule_2 SIAGO_WritePullDrop_nextSnpRespIs_sameside i918
    nextReqIs_SIAGO_WritePullDrop_IMAD_invariant1) done
   show goal68_2: "CSTATE SIAC T 0 ∧ nextGOPendingIs GO T 0 ∧ nextGOPendingState Invalid T 0 ∧ GTS T ((0 + 1) mod 2) ∧ saneSIACGO T 0 ⟶ HSTATE MA ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ nextSnpRespIs RspIHitSE ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) 1 ⟶ ¬ nextReqIs DirtyEvict ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) 1"
     apply  (insert assms , (unfold SWMR_def C_msg_P_same_def C_msg_P_oppo_def H_msg_P_same_def C_H_state_def C_msg_not_def H_msg_P_oppo_def C_msg_P_host_def C_state_not_def H_C_state_msg_same_def H_C_state_msg_oppo_def C_msg_state_def C_not_C_msg_def) ?) 
  apply (metis HSTATE_rule_2 SIAGO_WritePullDrop_nextSnpRespIs_otherside i919
    nextReqIs_SIAGO_WritePullDrop_IMAD_invariant2) done
qed
qed
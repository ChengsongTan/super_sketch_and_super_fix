=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: starting 
user method successfully solved goal 
METHOD Future: result = success 
METHOD won -> cancel SH 
SH Future: starting 
Sledgehammering... 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: starting 
SH Future: starting 
user method didnt solve goal 
METHOD Future: result = fail 
METHOD Future: starting 
Sledgehammering... 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_various_forms1 SWMR_def devcache1_ISDIData_invariant_aux1 devcache2_copy_perform1_invariant
    i0) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
user method successfully solved goal 
METHOD Future: result = success 
METHOD won -> cancel SH 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
user method successfully solved goal 
METHOD Future: result = success 
METHOD won -> cancel SH 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
user method didnt solve goal 
METHOD Future: result = fail 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
user method successfully solved goal 
METHOD Future: result = success 
METHOD won -> cancel SH 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_inequality_invariant CSTATE_remove_op MESI_State.distinct(3,97)) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
METHOD Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant InvalidLoad'_CSTATE_otherside InvalidLoad'_CSTATE_sameside
    InvalidLoad'_HSTATE MESI_State.distinct(11) i23) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant InvalidStore'_CSTATE_sameside MESI_State.distinct(15,187)) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_remove_op i23 remove_instr_HSTATE) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
METHOD Future: starting 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant InvalidLoad'_CSTATE_otherside InvalidLoad'_CSTATE_sameside
    InvalidLoad'_HSTATE MESI_State.distinct(11,143) i106) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant CSTATE_remove_op MESI_State.distinct(101,11,3) i106
    remove_instr_HSTATE) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
user method didnt solve goal 
METHOD Future: result = fail 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant InvalidStore'_CSTATE_otherside InvalidStore'_CSTATE_sameside
    InvalidStore'_HSTATE MESI_State.distinct(15) i23) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_inequality_invariant CSTATE_remove_op MESI_State.distinct(101,3)) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant InvalidStore'_CSTATE_otherside InvalidStore'_CSTATE_sameside
    InvalidStore'_HSTATE MESI_State.distinct(11,143,15) i106) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_remove_op i22 remove_instr_HSTATE) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
user method successfully solved goal 
METHOD Future: result = success 
METHOD won -> cancel SH 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_remove_op i22 remove_instr_HSTATE) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) InvalidStore'_CSTATE_otherside InvalidStore'_HSTATE MESI_State.distinct(15)
    SMADSnpInv_C_msg_not_half i22) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_disj2 C_msg_not_def InvalidStore'_CSTATE_sameside InvalidStore'_nextReqIs_invariant1
    MESI_State.distinct(15) i26) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(35) SharedStore'_CSTATE_otherside
    SharedStore'_CSTATE_sameside SharedStore'_HSTATE i23) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_disj1 C_msg_not_def C_msg_state_def InvalidStore'_CSTATE_otherside
    InvalidStore'_nextReqIs_invariant1 MESI_State.distinct(11) i26 i47) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(101,11,35) SharedStore'_CSTATE_otherside
    SharedStore'_CSTATE_sameside SharedStore'_HSTATE i106) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) InvalidLoad'_CSTATE_otherside InvalidLoad'_HSTATE MESI_State.distinct(11)
    SMADSnpInv_C_msg_not_half i22) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(281,35) SharedStore'_CSTATE_sameside) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_disj2 C_msg_state_def InvalidLoad'_CSTATE_otherside InvalidLoad'_CSTATE_sameside
    InvalidLoad'_HSTATE InvalidLoad'_nextReqIs_otherside i22 i47) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) i107 remove_instr_HSTATE) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) MESI_State.distinct(35) SMADSnpInv_C_msg_not_half SharedStore'_CSTATE_otherside
    SharedStore'_HSTATE i22) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant C_msg_state_def InvalidLoad'_CSTATE_otherside
    InvalidLoad'_nextReqIs_otherside MESI_State.distinct(11) SMADSnpInv_C_msg_not_half i47) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) i107 remove_instr_HSTATE) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_disj2 MESI_State.distinct(35) SharedStore'_CSTATE_otherside SharedStore'_CSTATE_sameside
    SharedStore'_HSTATE i22) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) i107 remove_instr_HSTATE) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) SharedStore'_HSTATE i107) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) SharedStore'_HSTATE i107) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
53.179s elapsed time, 35.469s cpu time, 0.891s GC time 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_various_forms1 MESI_State.distinct(137,47) SharedSnpInv'_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) SharedStore'_HSTATE i107) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) SharedStore'_HSTATE i107) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_various_forms1 MESI_State.distinct(133,43) SharedEvictData'_CSTATE_sameside) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(35) SharedStore'_CSTATE_otherside
    SharedStore'_CSTATE_sameside SharedStore'_HSTATE i23) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
69.558s elapsed time, 42.719s cpu time, 3.781s GC time 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_disj1 InvalidStore'_CSTATE_otherside InvalidStore'_CSTATE_sameside InvalidStore'_HSTATE
    InvalidStore'_nextReqIs_otherside i23 i824) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
72.730s elapsed time, 45.969s cpu time, 3.938s GC time 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: result = timeout 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_various_forms1 MESI_State.distinct(117,27) ModifiedEvict'_CSTATE_sameside) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_def CSTATE_various_forms1 MESI_State.distinct(5) SharedSnpInv'_CSTATE_invariant5 i592) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_disj1 InvalidLoad'_CSTATE_otherside InvalidLoad'_CSTATE_sameside InvalidLoad'_HSTATE
    MESI_State.distinct(11) i23) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
90.348s elapsed time, 51.703s cpu time, 5.828s GC time 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant ModifiedEvict'_CSTATE_otherside ModifiedEvict'_CSTATE_sameside
    ModifiedEvict'_nextHTDDataPending i576 i72) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(139,5) SharedSnpInv'_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_various_forms1 MESI_State.distinct(103,13) SharedSnpInv'_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) ModifiedEvict'_HSTATE i23) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(13,185) SharedSnpInv'_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(293,47) SharedSnpInv'_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(27) ModifiedEvict'_CSTATE_otherside
    ModifiedEvict'_CSTATE_sameside i72) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) C_not_C_msg_def ModifiedEvict'_CSTATE_otherside i49 i72 nextGOPending_DeviceModifiedEvict) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) ModifiedEvict'_HSTATE i22) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(143,5) SharedSnpInv'_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) MESI_State.distinct(43) SMADSnpInv_C_msg_not_half SharedEvictData'_CSTATE_otherside
    SharedEvictData'_HSTATE i22) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) ModifiedEvict'_CSTATE_otherside ModifiedEvict'_HSTATE i22 i72) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
SH Future: starting 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(13,259) SharedSnpInv'_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) HSTATE_X_Evict_invariant1 i107) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(43) SharedEvictData'_CSTATE_otherside
    SharedEvictData'_CSTATE_sameside SharedEvictData'_HSTATE i22) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) MESI_State.distinct(27) ModifiedEvict'_CSTATE_otherside SMADSnpInv_C_msg_not_half i72) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) HSTATE_X_Evict_invariant1 i107) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) SharedEvictData'_HSTATE i107) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) HSTATE_X_Evict_invariant1 i107) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) SharedEvictData'_HSTATE i107) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) HSTATE_X_Evict_invariant1 i107) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) SharedEvictData'_HSTATE i107) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) SharedEvictData'_HSTATE i107) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
158.667s elapsed time, 57.344s cpu time, 5.891s GC time 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(43) SharedEvictData'_CSTATE_otherside
    SharedEvictData'_CSTATE_sameside SharedEvictData'_HSTATE i23) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
144.067s elapsed time, 50.094s cpu time, 3.078s GC time 
Sledgehammering... 
METHOD Future: result = timeout 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
Sledgehammering... 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_various_forms1 ISDIData_Shared MESI_State.distinct(5,95)) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) ModifiedEvict'_CSTATE_otherside ModifiedEvict'_HSTATE i23 i72) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
157.363s elapsed time, 53.984s cpu time, 3.141s GC time 
SH Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_inequality_invariant ISDIData_Shared MESI_State.distinct(139,5)) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: starting 
user method didnt solve goal 
METHOD Future: result = fail 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_ISDIData_otherside CSTATE_inequality_invariant ISDIData_HSTATE ISDIData_Shared
    MESI_State.distinct(5) i23) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_various_forms1 IMADData_CSTATE_IMA MESI_State.distinct(107,17)) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_inequality_invariant ISDIData_Shared MESI_State.distinct(143,5)) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
Sledgehammering... 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
212.583s elapsed time, 73.047s cpu time, 3.609s GC time 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_ISDIData_otherside CSTATE_inequality_invariant ISDIData_HSTATE ISDIData_Shared
    MESI_State.distinct(5) i22) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_IMADData_otherside CSTATE_inequality_invariant HSTATE_IMADData IMADData_CSTATE_IMA
    MESI_State.distinct(17) i23) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
user method didnt solve goal 
METHOD Future: result = fail 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_ISDIData_otherside CSTATE_inequality_invariant ISDIData_HSTATE ISDIData_Shared
    MESI_State.distinct(5) i22) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_IMADData_otherside CSTATE_inequality_invariant HSTATE_IMADData IMADData_CSTATE_IMA
    MESI_State.distinct(11,17,261) i106) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_different1 ISDIData_HSTATE ISDIData_Shared MESI_State.distinct(5) i778 nextReqIs_ISDIData) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
204.751s elapsed time, 73.734s cpu time, 1.938s GC time 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
user method successfully solved goal 
METHOD Future: result = success 
METHOD won -> cancel SH 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_various_forms1 CSTATE_xyad_htdd_invariant3 MESI_State.distinct(127,37)) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) HSTATE_IMADData i656) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_SMADData_otherside CSTATE_inequality_invariant CSTATE_xyad_htdd_invariant3
    MESI_State.distinct(37) i844) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) HSTATE_IMADData i656) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_SMADData_otherside CSTATE_inequality_invariant CSTATE_xyad_htdd_invariant3
    MESI_State.distinct(37) i844) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
=== EXIT my_hammer_or_method_away with result: success === 
METHOD Future: starting 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_IMADData_otherside CSTATE_inequality_invariant C_msg_not_def C_msg_state_def
    MESI_State.distinct(11) i25 i47 nextReqIs_IMADData) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_SMADData_otherside CSTATE_inequality_invariant CSTATE_xyad_htdd_invariant3
    MESI_State.distinct(37) i844) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_SMADData_otherside CSTATE_inequality_invariant CSTATE_xyad_htdd_invariant3
    MESI_State.distinct(37) i844) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_various_forms1 MESI_State.distinct(109) SharedSnpInv'_CSTATE_invariant5
    devcache1_IMADGO_invariant_aux1 devcache1_consume_reqresps1_invariant) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) HSTATE_SMADData i658) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) HSTATE_SMADData i658) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) ISDData_HSTATE i74) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_SMADData_otherside CSTATE_inequality_invariant C_msg_state_def MESI_State.distinct(281)
    i47 i844 nextReqIs_SMADData) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) ISDData_HSTATE i74) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_ISDIData_otherside CSTATE_inequality_invariant ISDIData_HSTATE ISDIData_Shared
    MESI_State.distinct(5) i23) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
152.662s elapsed time, 58.969s cpu time, 1.656s GC time 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) ISDData_HSTATE i74) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) ISDData_HSTATE i74) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_IMADData_otherside CSTATE_disj4' CSTATE_inequality_invariant HSTATE_IMADData
    IMADData_CSTATE_IMA MESI_State.distinct(17,3) i23) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
119.303s elapsed time, 50.938s cpu time, 1.547s GC time 
METHOD Future: result = timeout 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_various_forms1 CSTATE_xyad_htdd_invariant3 MESI_State.distinct(9,99)) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_various_forms1 MESI_State.distinct(97) SharedSnpInv'_CSTATE_invariant5
    devcache1_SIAGO_WritePullDrop_invariant_aux1 devcache1_consume_reqresps1_invariant) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant C_msg_state_def HSTATE_SMADData MESI_State.distinct(281,347) i417 i419
    i456 i47 i577 i833 i844 i902 i904 i908 i910 i914 nextReqIs_SMADData nextSnpRespIs_general_rule_5_0) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
171.574s elapsed time, 70.734s cpu time, 1.984s GC time 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_disj2 CSTATE_inequality_invariant CSTATE_remove_op MESI_State.distinct(19,265)
    SIAGO_WritePullDrop_CSTATE_aux SharedSnpInv'_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_various_forms1 MESI_State.distinct(129) SharedSnpInv'_CSTATE_invariant5
    devcache1_SMADGO_invariant_aux1 devcache1_consume_reqresps1_invariant) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_ISADData_otherside CSTATE_inequality_invariant CSTATE_xyad_htdd_invariant3 HSTATE_ISADData
    MESI_State.distinct(9) i23) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_different1 CSTATE_inequality_invariant CSTATE_remove_op MESI_State.distinct(211,39)
    SIAGO_WritePullDrop_CSTATE_aux SharedSnpInv'_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_SMADData_otherside CSTATE_inequality_invariant CSTATE_xyad_htdd_invariant3
    MESI_State.distinct(37) i844) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
111.526s elapsed time, 50.812s cpu time, 1.500s GC time 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_ISADData_otherside CSTATE_inequality_invariant CSTATE_xyad_htdd_invariant3 HSTATE_ISADData
    MESI_State.distinct(9) i22) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_ISADData_otherside CSTATE_disj2 CSTATE_disj4' CSTATE_xyad_htdd_invariant3 HSTATE_ISADData
    MESI_State.distinct(15,9) i22) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_ISADData_otherside CSTATE_different2 CSTATE_disj4' CSTATE_inequality_invariant
    CSTATE_xyad_htdd_invariant3 C_msg_state_def MESI_State.distinct(11,9) i47 nextReqIs_ISADData) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
245.659s elapsed time, 89.031s cpu time, 6.484s GC time 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant CSTATE_xyad_htdd_invariant3 MESI_State.distinct(9) i494
    nextReqIs_ISADData) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
197.363s elapsed time, 69.891s cpu time, 5.938s GC time 
METHOD Future: result = timeout 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_various_forms1 MESI_State.distinct(105,15) SharedSnpInv'_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(15,187) SharedSnpInv'_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
257.189s elapsed time, 89.625s cpu time, 8.516s GC time 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
254.022s elapsed time, 84.641s cpu time, 8.344s GC time 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(15,261) SharedSnpInv'_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
277.128s elapsed time, 91.562s cpu time, 8.641s GC time 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) SMDData_HSTATE i654) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_various_forms1 CSTATE_various_forms6 SWMR_def devcache2_copy_perform1_invariant i0 i72) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) SMDData_HSTATE i654) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) i23 remove_instr_HSTATE) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(101,3) SIAGO_WritePullDrop_CSTATE_aux
    SharedSnpInv'_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_remove_op C_not_C_msg_def i49 i72 nextGOPending_DeviceModifiedStore) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) i22 remove_instr_HSTATE) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_remove_op i22 i72 remove_instr_HSTATE) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
235.191s elapsed time, 78.625s cpu time, 7.719s GC time 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
248.190s elapsed time, 80.453s cpu time, 7.766s GC time 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_various_forms1 CSTATE_various_forms6 SWMR_def devcache2_copy_perform1_invariant i0 i72) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) i23 remove_instr_HSTATE) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
METHOD Future: result = timeout 
METHOD Future: starting 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_remove_op C_not_C_msg_def i49 i72 nextGOPending_DeviceModifiedStore) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
210.955s elapsed time, 70.938s cpu time, 6.719s GC time 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) i22 remove_instr_HSTATE) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
264.883s elapsed time, 87.125s cpu time, 7.203s GC time 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_def CSTATE_disj4' CSTATE_inequality_invariant CSTATE_various_forms1 CSTATE_various_forms2
    MESI_State.distinct(5,95) SIAGO_WritePullDrop_CSTATE_aux SharedSnpInv'_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_remove_op i22 i72 remove_instr_HSTATE) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
user method didnt solve goal 
METHOD Future: result = fail 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_disj1 MESI_State.distinct(139,5) SIAGO_WritePullDrop_CSTATE_aux
    SharedSnpInv'_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
254.931s elapsed time, 84.547s cpu time, 7.078s GC time 
METHOD Future: result = timeout 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_def CSTATE_inequality_invariant CSTATE_various_forms1 CSTATE_various_forms2
    MESI_State.distinct(5,95) SIAGO_WritePullDrop_CSTATE_aux SharedSnpInv'_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_disj1 MESI_State.distinct(139,5) SIAGO_WritePullDrop_CSTATE_aux
    SharedSnpInv'_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(143,5) SIAGO_WritePullDrop_CSTATE_aux
    SharedSnpInv'_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
199.324s elapsed time, 62.688s cpu time, 6.672s GC time 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(143,5) SIAGO_WritePullDrop_CSTATE_aux
    SharedSnpInv'_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_otherside_rule_8 CSTATE_various_forms1 CSTATE_various_forms4 SMDData_Modified i644) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
267.789s elapsed time, 80.703s cpu time, 8.922s GC time 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_SMDData_otherside C_not_C_msg_def i337 i465 i478 i640 nextGOPending_DeviceSMDData) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) SMDData_HSTATE i654) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) SMDData_HSTATE i654) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant CSTATE_various_forms1 CSTATE_various_forms2
    MESI_State.distinct(121,31) SharedSnpInv'_CSTATE_invariant5 SharedSnpInv'_MAD_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
234.012s elapsed time, 73.594s cpu time, 7.344s GC time 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(203,31) SharedSnpInv'_CSTATE_invariant5
    SharedSnpInv'_MAD_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_disj4' CSTATE_various_forms1 CSTATE_various_forms2 MESI_State.distinct(133,27,43)
    SharedSnpInv'_CSTATE_invariant5 SharedSnpInv'_MAD_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(215,43) SharedSnpInv'_CSTATE_invariant5
    SharedSnpInv'_MAD_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
259.798s elapsed time, 79.031s cpu time, 7.359s GC time 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
262.490s elapsed time, 80.234s cpu time, 7.375s GC time 
METHOD Future: result = timeout 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_def CSTATE_inequality_invariant CSTATE_various_forms1 CSTATE_various_forms2
    MESI_State.distinct(5,95) SIAGO_WritePull_CSTATE_aux SharedSnpInv'_CSTATE_invariant5 nat_to_id.simps(1)) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_different1 CSTATE_disj4' CSTATE_various_forms2 MESI_State.distinct(121,27,31)
    SharedSnpInv'_CSTATE_invariant5 SharedSnpInv'_MAD_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_disj1 CSTATE_disj2 MESI_State.distinct(139,31,5) SIAGO_WritePullDrop_CSTATE_aux
    SharedSnpInv'_CSTATE_invariant5 SharedSnpInv'_MAD_CSTATE_invariant5 nextEvict_IIAGO_WritePullDrop_CSTATE_invariant) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(277,31) SharedSnpInv'_CSTATE_invariant5
    SharedSnpInv'_MAD_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_different1 CSTATE_inequality_invariant MESI_State.distinct(203,31)
    SharedSnpInv'_CSTATE_invariant5 SharedSnpInv'_MAD_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(289,43) SharedSnpInv'_CSTATE_invariant5
    SharedSnpInv'_MAD_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
211.343s elapsed time, 72.500s cpu time, 6.672s GC time 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_various_forms1 MESI_State.distinct(121,31) SharedSnpInv'_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_disj3 CSTATE_inequality_invariant CSTATE_remove_op Invalid_not_eq_MIA
    MESI_State.distinct(143,167,5) SIAGO_WritePullDrop_CSTATE_aux SharedSnpInv'_CSTATE_invariant5
    SharedSnpInv'_MAD_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(277,31) SharedSnpInv'_CSTATE_invariant5
    SharedSnpInv'_MAD_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(203,31) SharedSnpInv'_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(277,31) SharedSnpInv'_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
247.340s elapsed time, 84.047s cpu time, 7.375s GC time 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: fail === 
233.492s elapsed time, 80.906s cpu time, 7.219s GC time 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_def CSTATE_disj4' CSTATE_various_forms1 CSTATE_various_forms2 MESI_State.distinct(95)
    SharedSnpInv'_CSTATE_invariant5 SharedSnpInv'_MAD_CSTATE_invariant5 i592) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_disj4' CSTATE_inequality_invariant MESI_State.distinct(139,5)
    SharedSnpInv'_CSTATE_invariant5 SharedSnpInv'_MAD_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(3,97) SharedSnpInv'_CSTATE_invariant5
    SharedSnpInv'_MAD_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
243.720s elapsed time, 81.141s cpu time, 9.078s GC time 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
250.524s elapsed time, 83.406s cpu time, 9.188s GC time 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_disj4' CSTATE_various_forms1 CSTATE_various_forms2 MESI_State.distinct(5,95)
    SharedSnpInv'_CSTATE_invariant5 SharedSnpInv'_MAD_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_various_forms5 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def
    GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HostInvalidRdShared'_devcache_invariant2 IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def
    IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def
    MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def
    MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def
    OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def
    SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i493
    numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(139,5) SharedSnpInv'_CSTATE_invariant5
    SharedSnpInv'_MAD_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 i603 i676 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
Sledgehammering... 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_disj4' CSTATE_inequality_invariant MESI_State.distinct(143,5)
    SharedSnpInv'_CSTATE_invariant5 SharedSnpInv'_MAD_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i493 i676 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(101,3) SharedSnpInv'_CSTATE_invariant5
    SharedSnpInv'_MAD_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i493 i676 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 i665 i676 nextGOPending_HostInvalidRdShared
    numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
231.739s elapsed time, 72.703s cpu time, 5.781s GC time 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i493 i676 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i493 i676 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_various_forms5 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def
    GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HostInvalidRdOwn'_devcache_invariant2 IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def
    IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def
    MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def
    RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i493 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i493 i676 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(143,5) SharedSnpInv'_CSTATE_invariant5
    SharedSnpInv'_MAD_CSTATE_invariant5) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 i603 i676 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) HOST_State.distinct(3) HSTATE_invariant3 HostInvalidRdShared_HSTATE
    minus_req_nextReqIs_False_swmrp_rule_2_0 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i676
    i823 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i676
    i823 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i676
    i823 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i676
    i823 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i676
    i823 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i493 i676 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
120.484s elapsed time, 48.422s cpu time, 3.500s GC time 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i676
    i823 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HostInvalidRdShared'_devcache_invariant1
    HostInvalidRdShared'_devcache_invariant2 IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def
    IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def
    MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def
    MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def
    OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def
    SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def SWMR_def
    i0 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
219.195s elapsed time, 80.344s cpu time, 7.938s GC time 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
=== EXIT my_hammer_or_method_away with result: fail === 
222.195s elapsed time, 82.297s cpu time, 8.047s GC time 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant3 CSTATE_various_forms2 CSTATE_various_forms4
    DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def
    GO_COL_def HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def
    MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def
    SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i676
    i823 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
=== EXIT my_hammer_or_method_away with result: success === 
125.244s elapsed time, 56.703s cpu time, 5.469s GC time 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostSide_rule_3_1 CSTATE_disj1 CSTATE_various_forms4 DATA_COL_def
    DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def
    HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def
    MEM_SD_ROW_def MEM_S_ROW_def MESI_State.distinct(163,175,179,5,95) MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def
    OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def
    SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i556
    lastSharer_def numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 CSTATE_various_forms2 CSTATE_various_forms4
    DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def
    GO_COL_def HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def
    MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def
    SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant3 CSTATE_def
    CSTATE_various_forms1 CSTATE_various_forms2 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def IMAI_ROW_def
    IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def
    MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MESI_State.distinct(137)
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 i946 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
SH Future: starting 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def
    GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def
    IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def
    MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def
    MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def
    STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
210.540s elapsed time, 93.484s cpu time, 10.250s GC time 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(3) HSTATE_invariant4
    HostShared_CleanEvict_NotLastDrop_HSTATE IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def
    IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def
    MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def
    MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def
    OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def
    SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def
    minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def
    GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def
    IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def
    MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def
    MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def
    STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(3) HSTATE_invariant3
    HostShared_CleanEvict_NotLastDrop_HSTATE IIA_ROW_def IMAD_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def
    IMD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPINV_COL_def
    minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def
    GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def
    IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def
    MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def
    MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def
    STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def
    GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def
    IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def
    MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def
    MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def
    STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(3) HSTATE_invariant3
    HostShared_CleanEvict_NotLastDrop_HSTATE IIA_ROW_def IMAD_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def
    IMD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPINV_COL_def
    minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
SH Future: starting 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def
    GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def
    IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def
    MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def
    MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def
    STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
63.896s elapsed time, 39.844s cpu time, 4.672s GC time 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def
    GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def
    IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def
    MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def
    MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def
    STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostSide_rule_3_1 CSTATE_disj1 CSTATE_various_forms4 DATA_COL_def
    DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def
    HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def
    MEM_SD_ROW_def MEM_S_ROW_def MESI_State.distinct(179) MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def
    RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i22 i518 i727
    lastSharer_def numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
Sledgehammering... 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
SH Future: starting 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
101.981s elapsed time, 55.062s cpu time, 6.859s GC time 
METHOD Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(3) HSTATE_invariant3
    HostShared_CleanEvictNoData_NotLast_HSTATE IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def
    IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def
    MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def
    MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def
    OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def
    SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def
    minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HostShared_CleanEvictNoData_NotLast_nextSnpRespIs_sameside IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def
    IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def
    MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def
    MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def
    M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def
    SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i950
    minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant2 DATA_COL_def
    DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def
    HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def
    MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def
    SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i22 i729
    nextGOPending_HostShared_CleanEvictNoData_Last numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(3) HSTATE_invariant3
    HostShared_CleanEvictNoData_NotLast_HSTATE HostShared_CleanEvictNoData_NotLast_nextSnpRespIs_sameside IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i950 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
69.208s elapsed time, 34.766s cpu time, 2.375s GC time 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostModified_DirtyEvict_otherside_invariant2 CSTATE_various_forms4 DATA_COL_def
    DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def
    HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def
    MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def
    SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i107 i595 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 CSTATE_def
    CSTATE_various_forms1 CSTATE_various_forms2 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def IMAI_ROW_def
    IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def
    MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MESI_State.distinct(121)
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_HostModified_DirtyEvict_otherside_invariant2 i595 i75 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) HostShared_CleanEvictNoData_Last_nextSnpRespIs_sameside i950
    minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
111.047s elapsed time, 48.734s cpu time, 2.766s GC time 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
115.412s elapsed time, 50.734s cpu time, 2.812s GC time 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_various_forms5 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def
    GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HostModifiedRdShared'_devcache_invariant1 HostModifiedRdShared'_devcache_invariant2 IIA_ROW_def IMAD_ROW_def
    IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def
    MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def
    MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def
    STORE_COL_def SWMR_def i0 i107 numeral_One one_mod_two_eq_one plus_nat.add_0) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_X_rd_invariant1 CSTATE_general_rule_8_0 CSTATE_various_forms2
    CSTATE_various_forms4 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def IMAI_ROW_def
    IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def
    MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def
    MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def
    STORE_COL_def i107 mod_add_self1 mod_by_0 numeral_One one_mod_two_eq_one) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostModified_DirtyEvict_otherside_invariant2
    CSTATE_HostModified_DirtyEvict_otherside_invariant3 C_not_C_msg_def i49 i595 nextGOPending_HostModifiedDirtyEvict
    numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostModifiedRdShared_otherside_invariant3 CSTATE_X_rd_invariant1 i74 i75 numeral_One
    one_mod_two_eq_one plus_nat.add_0) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
95.852s elapsed time, 37.672s cpu time, 0.812s GC time 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostsModifiedRdOwn_otherside_invariant3 CSTATE_X_rd_invariant1 i74 i75 mod_add_self1
    mod_by_0 not_mod_2_eq_0_eq_1 numeral_One one_mod_two_eq_one) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
Sledgehammering... 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostModified_DirtyEvict_otherside_invariant2 i595 minus_req_nextReqIs_False_swmrp_rule_1_0
    numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_various_forms5 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def
    GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HostInvalidRdOwn'_devcache_invariant1 HostInvalidRdOwn'_devcache_invariant2 IIA_ROW_def IMAD_ROW_def IMAI_ROW_def
    IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def
    MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def
    MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def
    STORE_COL_def SWMR_def i0 i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i22 i823
    numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostModified_DirtyEvict_otherside_invariant2 i595 minus_req_nextReqIs_False_swmrp_rule_1_0
    numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostModifiedRdShared_otherside_invariant3 CSTATE_X_rd_invariant1
    CSTATE_inequality_invariant C_msg_state_def C_not_C_msg_def i47 i49 i72 mod_add_self1 mod_by_0
    nextGOPending_General_rule_19_1 nextGOPending_HostModifiedRdShared numeral_One one_mod_two_eq_one) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i22 i823
    numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostsModifiedRdOwn_otherside_invariant3 i494 i823 mod_add_self1 mod_by_0 numeral_One
    one_mod_two_eq_one) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostModifiedRdShared_otherside_invariant2 CSTATE_inequality_invariant C_msg_state_def i47
    i72 minus_req_nextReqIs_False_swmrp_rule_3_0 nextReqIs_otherside_rule_4_0 numeral_One one_mod_two_eq_one
    plus_nat.add_0) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i22 i823
    numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostModifiedRdShared_otherside_invariant3 CSTATE_inequality_invariant C_msg_state_def i47
    i72 minus_req_nextReqIs_False_swmrp_rule_3_0 nextReqIs_otherside_rule_4_0 numeral_One one_mod_two_eq_one
    plus_nat.add_0) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i22 i823
    numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 i22 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
202.699s elapsed time, 53.266s cpu time, 1.141s GC time 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostsModifiedRdOwn_otherside_invariant3 i823 minus_req_nextReqIs_False_swmrp_rule_3_0
    mod_add_self1 mod_by_0 numeral_One one_mod_two_eq_one) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostModifiedRdShared_otherside_invariant2 CSTATE_inequality_invariant C_msg_state_def i47
    i72 minus_req_nextReqIs_False_swmrp_rule_3_0 nextReqIs_otherside_rule_4_0 numeral_One one_mod_two_eq_one
    plus_nat.add_0) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
SH Future: starting 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i22 i823
    numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i22 i823
    numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i22 i823
    numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
255.517s elapsed time, 70.797s cpu time, 1.641s GC time 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) C_msg_not_def i26 minus_req_nextReqIs_False_swmrp_rule_2_0 mod_add_self1 mod_by_0
    nextReqIs_HostInvalidRdOwn_IMAD_invariant2 numeral_One one_mod_two_eq_one) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) C_msg_not_def i26 minus_req_nextReqIs_False_swmrp_rule_2_0 mod_add_self1 mod_by_0
    nextReqIs_HostInvalidRdOwn_IMAD_invariant2 numeral_One one_mod_two_eq_one) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) C_msg_not_def i26 minus_req_nextReqIs_False_swmrp_rule_2_0 mod_add_self1 mod_by_0
    nextReqIs_HostInvalidRdOwn_IMAD_invariant2 numeral_One one_mod_two_eq_one) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i22 i823
    numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
206.215s elapsed time, 58.156s cpu time, 1.312s GC time 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
246.346s elapsed time, 70.172s cpu time, 1.609s GC time 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostsModifiedRdOwn_otherside_invariant3 i823 minus_req_nextReqIs_False_swmrp_rule_3_0
    mod_add_self1 mod_by_0 numeral_One one_mod_two_eq_one) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
=== EXIT my_hammer_or_method_away with result: success === 
252.274s elapsed time, 72.297s cpu time, 1.734s GC time 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
=== EXIT my_hammer_or_method_away with result: fail === 
METHOD Future: starting 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
305.790s elapsed time, 87.953s cpu time, 2.219s GC time 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(3,79) HSTATE_invariant4
    HostSBData_HSTATE IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def
    MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def
    SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i962 nat_to_id.simps(1) numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(3,79) HSTATE_invariant4
    HostSBData_HSTATE IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def
    MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def
    SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i962 nat_to_id.simps(1) numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(11) HSTATE_equals_sHost
    IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def INVALID_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def LOAD_COL_def MEM_DATA_COL_def MEM_E_ROW_def
    MEM_ID_ROW_def MEM_I_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def
    MEM_RDS_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def
    M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def
    SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def
    hstate_invariants(16) i733 nat_to_id.simps(1) numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(3,79) HSTATE_invariant4
    HostSBData_HSTATE IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def
    MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def
    SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i962 nat_to_id.simps(1) numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(11) HSTATE_equals_sHost
    IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def
    ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def LOAD_COL_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_I_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def
    RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def hstate_invariants(16)
    i733 nat_to_id.simps(1) numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
SH Future: starting 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(11) HSTATE_equals_sHost
    IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def
    ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def LOAD_COL_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_I_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def
    RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def hstate_invariants(16)
    i733 nat_to_id.simps(1) numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
240.271s elapsed time, 77.969s cpu time, 4.594s GC time 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HostSADRspSFwdM'_devcache_invariant1
    HostSADRspSFwdM'_devcache_invariant2 IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def
    IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def
    MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def
    RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def SWMR_def i0 numeral_One
    one_mod_two_eq_one plus_nat.add_0) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
250.558s elapsed time, 83.078s cpu time, 6.750s GC time 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_various_forms6 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def
    GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HostSADRspSFwdM'_devcache_invariant1 HostSADRspSFwdM'_devcache_invariant2 IIA_ROW_def IMAD_ROW_def IMAI_ROW_def
    IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def
    MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def
    MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def
    STORE_COL_def SWMR_def i0 i789 numeral_One one_mod_two_eq_one plus_nat.add_0) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(17) HSTATE_equals_sHost
    IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def INVALID_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def LOAD_COL_def MEM_DATA_COL_def MEM_E_ROW_def
    MEM_ID_ROW_def MEM_I_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def
    MEM_RDS_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def
    M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def
    SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def
    hstate_invariants(16) i835 nat_to_id.simps(1) numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(17) HSTATE_equals_sHost
    IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def
    ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def
    MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def
    MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def
    RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def
    SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def hstate_invariants(16) i835 nat_to_id.simps(1) numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
265.337s elapsed time, 89.156s cpu time, 6.953s GC time 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(17) HSTATE_equals_sHost
    IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def
    ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def
    MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def
    MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def
    RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def
    SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def hstate_invariants(16) i835 nat_to_id.simps(1) numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
279.091s elapsed time, 96.125s cpu time, 8.516s GC time 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostSADRspSFwdM_otherside_invariant2 CSTATE_HostSADRspSFwdM_otherside_invariant3
    HSTATE_equals_sHost hstate_invariants(15) i23 numeral_One one_mod_two_eq_one plus_nat.add_0) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HostMADRspIFwdM'_devcache_invariant1
    HostMADRspIFwdM'_devcache_invariant2 IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def
    IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def
    MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def
    RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def SWMR_def i0 numeral_One
    one_mod_two_eq_one plus_nat.add_0) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
SH Future: starting 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
224.126s elapsed time, 82.812s cpu time, 8.062s GC time 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostSADRspSFwdM_otherside_invariant2 CSTATE_HostSADRspSFwdM_otherside_invariant3
    HSTATE_equals_sHost hstate_invariants(15) i23 i789 numeral_One one_mod_two_eq_one plus_nat.add_0) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HostMARspIHitSE'_devcache_invariant1
    HostMARspIHitSE'_devcache_invariant2 IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def
    IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def
    MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def
    RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def SWMR_def add_0 i0
    numeral_One one_mod_two_eq_one) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HostSARspSFwdM'_devcache_invariant1
    HostSARspSFwdM'_devcache_invariant2 IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def
    IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def
    MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def
    RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def SWMR_def i0 numeral_One
    one_mod_two_eq_one plus_nat.add_0) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HostSARspSFwdM'_devcache_invariant1
    HostSARspSFwdM'_devcache_invariant2 IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def
    IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def
    MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def
    RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def SWMR_def i0 numeral_One
    one_mod_two_eq_one plus_nat.add_0) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostSADRspSFwdM_otherside_invariant2 CSTATE_HostSADRspSFwdM_otherside_invariant3
    CSTATE_disj1 C_msg_state_def i437 i47 i789 nextReqIs_HostSADRspSFwdM_IMAD_invariant1 numeral_One one_mod_two_eq_one
    plus_nat.add_0) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostSADRspSFwdM_otherside_invariant2 CSTATE_HostSADRspSFwdM_otherside_invariant3
    CSTATE_disj1 C_msg_state_def i437 i47 i789 nextReqIs_HostSADRspSFwdM_IMAD_invariant1 numeral_One one_mod_two_eq_one
    plus_nat.add_0) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostSADRspSFwdM_otherside_invariant2 C_H_state_def i17 i392 i437 i495 i844 mod_add_self1
    mod_by_0 nextReqIs_HostSADRspSFwdM_IMAD_invariant1 nextReqIs_HostSADRspSFwdM_IMAD_invariant2 numeral_One
    one_mod_two_eq_one) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
31943.546s elapsed time, 101.859s cpu time, 9.484s GC time 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostSADRspSFwdM_otherside_invariant2 i437 i495 i789 mod_add_self1 mod_by_0
    nextReqIs_HostSADRspSFwdM_IMAD_invariant2 numeral_One one_mod_two_eq_one) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
31953.924s elapsed time, 111.453s cpu time, 9.859s GC time 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
31976.209s elapsed time, 126.750s cpu time, 9.297s GC time 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
31997.222s elapsed time, 139.000s cpu time, 9.734s GC time 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostSARspSFwdM_otherside_invariant2 CSTATE_HostSARspSFwdM_otherside_invariant3
    C_H_state_def i18 i392 i393 i824 i843 i844 mod_add_self1 mod_by_0 nextReqIs_HostSARspSFwdM_IMAD_invariant1
    nextReqIs_HostSARspSFwdM_IMAD_invariant2 numeral_One one_mod_two_eq_one) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
=== EXIT my_hammer_or_method_away with result: success === 
32001.206s elapsed time, 143.922s cpu time, 10.109s GC time 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostSARspSFwdM_otherside_invariant2 CSTATE_HostSARspSFwdM_otherside_invariant3 CSTATE_disj1
    C_H_state_def i18 i393 i72 i823 i843 mod_add_self1 mod_by_0 nextReqIs_HostSARspSFwdM_IMAD_invariant1
    nextReqIs_HostSARspSFwdM_IMAD_invariant2 numeral_One one_mod_two_eq_one) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
32003.366s elapsed time, 147.359s cpu time, 10.406s GC time 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_Last_otherside_invariant2 CSTATE_various_forms4 DATA_COL_def
    DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def
    HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def
    MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def
    SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i675 i676 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this: apply (smt (verit) CSTATE_HostShared_CleanEvict_Last_otherside_invariant2 i663 i676 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HostMARspIHitSE'_devcache_invariant1
    IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def
    ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def
    MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def
    MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def
    RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def
    SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i845 i889 nextSnpRespIs_invariant1 numeral_One
    one_mod_two_eq_one plus_nat.add_0) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 i493 i676 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CSTATE_HostMARspIHitSE_otherside_invariant2 CSTATE_different2 CSTATE_disj2 DIRTYEVICT_COL_def GHOST_REQ_def
    GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISA_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_ID_ROW_def MEM_MD_ROW_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def
    MESI_State.distinct(15,17,187,189,207,209,35,37) MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def
    SMA_ROW_def SNPINV_COL_def add_0 i451 nextSnpRespIs_invariant1 numeral_One one_mod_two_eq_one) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
Sledgehammering... 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 i493 i676 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostShared_CleanEvict_Last_otherside_invariant2 i665 i676
    nextGOPending_HostShared_CleanEvict_Last numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 i493 i676 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 i493 i676 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 i493 i676 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostMARspIHitSE_otherside_invariant2 CSTATE_HostMARspIHitSE_otherside_invariant3 i462 i845
    nextGOPending_HostMARspIHitSE nextSnpRespIs_invariant1 numeral_One one_mod_two_eq_one plus_nat.add_0) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostMARspIHitSE_otherside_invariant3 i845 i99 nextReqIs_not_various_forms2
    nextSnpRespIs_invariant1 numeral_One one_mod_two_eq_one plus_nat.add_0 reqs2_HostMARspIHitSE) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 i493 i676 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
191.940s elapsed time, 118.312s cpu time, 9.516s GC time 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
305.241s elapsed time, 185.984s cpu time, 12.453s GC time 
Sledgehammering... 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CLEANEVICT_LAST_COL_def CSTATE_def CSTATE_disj1 CSTATE_various_forms1 CSTATE_various_forms2
    GO_COL_def HOST_DEVNUM_def IMAD_ROW_def IMAI_ROW_def ISAD_ROW_def ISD_ROW_def MEM_MA_ROW_def MEM_M_ROW_def
    MEM_RDO_COL_def MEM_S_ROW_def MESI_State.distinct(5,95) RSPIFWDM_COL_def SIAGO_WritePullDrop_CSTATE_aux
    SNPD_COL_def STORE_COL_def SharedSnpInv'_CSTATE_invariant5 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: fail === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
266.516s elapsed time, 171.438s cpu time, 12.125s GC time 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
No proof found 
SH Future: sledgehammer returned: fail 
No proof found 
SH Future: sledgehammer returned: fail 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: fail === 
=== EXIT my_hammer_or_method_away with result: fail === 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
SH Future: starting 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
METHOD Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
SH Future: starting 
331.265s elapsed time, 160.734s cpu time, 13.703s GC time 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: result = timeout 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
cvc5 found a proof... 
cvc5: Try this:
  apply (smt (verit) CSTATE_disj1 MESI_State.distinct(143,5) SIAGO_WritePullDrop_CSTATE_aux
    SharedSnpInv'_CSTATE_invariant5 numeral_One) 
Done 
SH Future: sledgehammer returned: success 
SH won -> cancel METHOD 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: success === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
SH Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
Sledgehammering... 
METHOD Future: starting 
328.147s elapsed time, 156.797s cpu time, 13.781s GC time 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: fail === 
METHOD Future: starting 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
No proof found 
SH Future: sledgehammer returned: fail 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== EXIT my_hammer_or_method_away with result: fail === 
METHOD Future: starting 
No proof found 
SH Future: sledgehammer returned: fail 
SH Future: starting 
Sledgehammering... 
=== EXIT my_hammer_or_method_away with result: fail === 
METHOD Future: result = timeout 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
=== ENTER my_hammer_or_method_away for subgoal 1 === 
No proof found 
SH Future: sledgehammer returned: fail 
METHOD Future: starting 
=== EXIT my_hammer_or_method_away with result: fail === 
METHOD Future: result = timeout 
SH Future: starting 
METHOD Future: starting 
Sledgehammering... 
METHOD Future: result = timeout 
SH Future: starting 
Sledgehammering... 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
=== EXIT my_hammer_or_method_away with result: fail === 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
=== EXIT my_hammer_or_method_away with result: fail === 
Warning: Prover error:
Abnormal termination with exit code 3 
SH Future: sledgehammer returned: fail 
=== EXIT my_hammer_or_method_away with result: fail === 
No proof found 
SH Future: sledgehammer returned: fail 
=== EXIT my_hammer_or_method_away with result: fail === 
179.044s elapsed time, 54.766s cpu time, 8.016s GC time 
34639.221s elapsed time, 1146.578s cpu time, 91.109s GC time 
proof (intro conjI)
  show goal_1: "CSTATE Invalid T 0 ∧ nextLoad T 0 ⟶ SWMR ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD])"
    proof (intro impconjI)
   show goal1_1: "CSTATE Invalid T 0 ∧ nextLoad T 0 ⟶ SWMR ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD])"
     apply simp done
   show goal1_2: "CSTATE Invalid T 0 ∧ nextLoad T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD])"
     apply simp done
   show goal1_3: "CSTATE Invalid T 0 ∧ nextLoad T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD])"
     
  apply (smt (verit) CSTATE_inequality_invariant InvalidLoad'_CSTATE_otherside InvalidLoad'_CSTATE_sameside
    InvalidLoad'_HSTATE MESI_State.distinct(11) i23) done
   show goal1_4: "CSTATE Invalid T 0 ∧ nextLoad T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD])"
     
  apply (smt (verit) CSTATE_inequality_invariant InvalidLoad'_CSTATE_otherside InvalidLoad'_CSTATE_sameside
    InvalidLoad'_HSTATE MESI_State.distinct(11,143) i106) done
   show goal1_5: "CSTATE Invalid T 0 ∧ nextLoad T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD])"
     sorry (*failed to find proof*)
   show goal1_6: "CSTATE Invalid T 0 ∧ nextLoad T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD])"
     
  apply (smt (verit) InvalidLoad'_CSTATE_otherside InvalidLoad'_HSTATE MESI_State.distinct(11)
    SMADSnpInv_C_msg_not_half i22) done
   show goal1_7: "CSTATE Invalid T 0 ∧ nextLoad T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD])"
     
  apply (smt (verit) CSTATE_disj2 C_msg_state_def InvalidLoad'_CSTATE_otherside InvalidLoad'_CSTATE_sameside
    InvalidLoad'_HSTATE InvalidLoad'_nextReqIs_otherside i22 i47) done
   show goal1_8: "CSTATE Invalid T 0 ∧ nextLoad T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD])"
     
  apply (smt (verit) CSTATE_inequality_invariant C_msg_state_def InvalidLoad'_CSTATE_otherside
    InvalidLoad'_nextReqIs_otherside MESI_State.distinct(11) SMADSnpInv_C_msg_not_half i47) done
   show goal1_9: "CSTATE Invalid T 0 ∧ nextLoad T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD])"
     sorry (*failed to find proof*)
   show goal1_10: "CSTATE Invalid T 0 ∧ nextLoad T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD])"
     sorry (*failed to find proof*)
   show goal1_11: "CSTATE Invalid T 0 ∧ nextLoad T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD])"
     sorry (*failed to find proof*)
   show goal1_12: "CSTATE Invalid T 0 ∧ nextLoad T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 +=rdreq RdShared] [ 0 s= ISAD])"
     
  apply (smt (verit) CSTATE_disj1 InvalidLoad'_CSTATE_otherside InvalidLoad'_CSTATE_sameside InvalidLoad'_HSTATE
    MESI_State.distinct(11) i23) done
qed
  show goal_2: "CSTATE Shared T 0 ∧ nextLoad T 0 ⟶ SWMR (T [ -=i 0]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) (T [ -=i 0]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) (T [ -=i 0]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) (T [ -=i 0]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) (T [ -=i 0]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (T [ -=i 0]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (T [ -=i 0]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (T [ -=i 0]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) (T [ -=i 0]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) (T [ -=i 0]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) (T [ -=i 0]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD (T [ -=i 0])"
    proof (intro impconjI)
   show goal2_1: "CSTATE Shared T 0 ∧ nextLoad T 0 ⟶ SWMR (T [ -=i 0])"
     
  apply (smt (verit) CSTATE_various_forms1 SWMR_def devcache1_ISDIData_invariant_aux1 devcache2_copy_perform1_invariant
    i0) done
   show goal2_2: "CSTATE Shared T 0 ∧ nextLoad T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) (T [ -=i 0])"
      apply (smt (verit) CSTATE_inequality_invariant CSTATE_remove_op MESI_State.distinct(3,97)) done
   show goal2_3: "CSTATE Shared T 0 ∧ nextLoad T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) (T [ -=i 0])"
      apply (smt (verit) CSTATE_remove_op i23 remove_instr_HSTATE) done
   show goal2_4: "CSTATE Shared T 0 ∧ nextLoad T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) (T [ -=i 0])"
     
  apply (smt (verit) CSTATE_inequality_invariant CSTATE_remove_op MESI_State.distinct(101,11,3) i106
    remove_instr_HSTATE) done
   show goal2_5: "CSTATE Shared T 0 ∧ nextLoad T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) (T [ -=i 0])"
      apply (smt (verit) CSTATE_inequality_invariant CSTATE_remove_op MESI_State.distinct(101,3)) done
   show goal2_6: "CSTATE Shared T 0 ∧ nextLoad T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (T [ -=i 0])"
      apply (smt (verit) CSTATE_remove_op i22 remove_instr_HSTATE) done
   show goal2_7: "CSTATE Shared T 0 ∧ nextLoad T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (T [ -=i 0])"
      apply (smt (verit) CSTATE_remove_op i22 remove_instr_HSTATE) done
   show goal2_8: "CSTATE Shared T 0 ∧ nextLoad T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (T [ -=i 0])"
     sorry (*failed to find proof*)
   show goal2_9: "CSTATE Shared T 0 ∧ nextLoad T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) (T [ -=i 0])"
      apply (smt (verit) i107 remove_instr_HSTATE) done
   show goal2_10: "CSTATE Shared T 0 ∧ nextLoad T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) (T [ -=i 0])"
      apply (smt (verit) i107 remove_instr_HSTATE) done
   show goal2_11: "CSTATE Shared T 0 ∧ nextLoad T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) (T [ -=i 0])"
      apply (smt (verit) i107 remove_instr_HSTATE) done
   show goal2_12: "CSTATE Shared T 0 ∧ nextLoad T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD (T [ -=i 0])"
     sorry (*failed to find proof*)
qed
  show goal_3: "CSTATE Invalid T 0 ∧ nextStore T 0 ⟶ SWMR ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD])"
    proof (intro impconjI)
   show goal3_1: "CSTATE Invalid T 0 ∧ nextStore T 0 ⟶ SWMR ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD])"
     apply simp done
   show goal3_2: "CSTATE Invalid T 0 ∧ nextStore T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD])"
      apply (smt (verit) CSTATE_inequality_invariant InvalidStore'_CSTATE_sameside MESI_State.distinct(15,187)) done
   show goal3_3: "CSTATE Invalid T 0 ∧ nextStore T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD])"
     
  apply (smt (verit) CSTATE_inequality_invariant InvalidStore'_CSTATE_otherside InvalidStore'_CSTATE_sameside
    InvalidStore'_HSTATE MESI_State.distinct(15) i23) done
   show goal3_4: "CSTATE Invalid T 0 ∧ nextStore T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD])"
     
  apply (smt (verit) CSTATE_inequality_invariant InvalidStore'_CSTATE_otherside InvalidStore'_CSTATE_sameside
    InvalidStore'_HSTATE MESI_State.distinct(11,143,15) i106) done
   show goal3_5: "CSTATE Invalid T 0 ∧ nextStore T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD])"
     apply simp done
   show goal3_6: "CSTATE Invalid T 0 ∧ nextStore T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD])"
     
  apply (smt (verit) InvalidStore'_CSTATE_otherside InvalidStore'_HSTATE MESI_State.distinct(15)
    SMADSnpInv_C_msg_not_half i22) done
   show goal3_7: "CSTATE Invalid T 0 ∧ nextStore T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD])"
     
  apply (smt (verit) CSTATE_disj2 C_msg_not_def InvalidStore'_CSTATE_sameside InvalidStore'_nextReqIs_invariant1
    MESI_State.distinct(15) i26) done
   show goal3_8: "CSTATE Invalid T 0 ∧ nextStore T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD])"
     
  apply (smt (verit) CSTATE_disj1 C_msg_not_def C_msg_state_def InvalidStore'_CSTATE_otherside
    InvalidStore'_nextReqIs_invariant1 MESI_State.distinct(11) i26 i47) done
   show goal3_9: "CSTATE Invalid T 0 ∧ nextStore T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD])"
     sorry (*failed to find proof*)
   show goal3_10: "CSTATE Invalid T 0 ∧ nextStore T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD])"
     sorry (*failed to find proof*)
   show goal3_11: "CSTATE Invalid T 0 ∧ nextStore T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD])"
     sorry (*failed to find proof*)
   show goal3_12: "CSTATE Invalid T 0 ∧ nextStore T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 +=rdreq RdOwn] [ 0 s= IMAD])"
     
  apply (smt (verit) CSTATE_disj1 InvalidStore'_CSTATE_otherside InvalidStore'_CSTATE_sameside InvalidStore'_HSTATE
    InvalidStore'_nextReqIs_otherside i23 i824) done
qed
  show goal_4: "CSTATE Shared T 0 ∧ nextStore T 0 ⟶ SWMR ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD])"
    proof (intro impconjI)
   show goal4_1: "CSTATE Shared T 0 ∧ nextStore T 0 ⟶ SWMR ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD])"
     apply simp done
   show goal4_2: "CSTATE Shared T 0 ∧ nextStore T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD])"
     sorry (*failed to find proof*)
   show goal4_3: "CSTATE Shared T 0 ∧ nextStore T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD])"
     
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(35) SharedStore'_CSTATE_otherside
    SharedStore'_CSTATE_sameside SharedStore'_HSTATE i23) done
   show goal4_4: "CSTATE Shared T 0 ∧ nextStore T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD])"
     
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(101,11,35) SharedStore'_CSTATE_otherside
    SharedStore'_CSTATE_sameside SharedStore'_HSTATE i106) done
   show goal4_5: "CSTATE Shared T 0 ∧ nextStore T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD])"
      apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(281,35) SharedStore'_CSTATE_sameside) done
   show goal4_6: "CSTATE Shared T 0 ∧ nextStore T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD])"
     
  apply (smt (verit) MESI_State.distinct(35) SMADSnpInv_C_msg_not_half SharedStore'_CSTATE_otherside
    SharedStore'_HSTATE i22) done
   show goal4_7: "CSTATE Shared T 0 ∧ nextStore T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD])"
     
  apply (smt (verit) CSTATE_disj2 MESI_State.distinct(35) SharedStore'_CSTATE_otherside SharedStore'_CSTATE_sameside
    SharedStore'_HSTATE i22) done
   show goal4_8: "CSTATE Shared T 0 ∧ nextStore T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD])"
      apply (smt (verit) SharedStore'_HSTATE i107) done
   show goal4_9: "CSTATE Shared T 0 ∧ nextStore T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD])"
      apply (smt (verit) SharedStore'_HSTATE i107) done
   show goal4_10: "CSTATE Shared T 0 ∧ nextStore T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD])"
      apply (smt (verit) SharedStore'_HSTATE i107) done
   show goal4_11: "CSTATE Shared T 0 ∧ nextStore T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD])"
      apply (smt (verit) SharedStore'_HSTATE i107) done
   show goal4_12: "CSTATE Shared T 0 ∧ nextStore T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 +=rdreq RdOwn] [ 0 s= SMAD])"
     
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(35) SharedStore'_CSTATE_otherside
    SharedStore'_CSTATE_sameside SharedStore'_HSTATE i23) done
qed
  show goal_5: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ SWMR ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC])"
    proof (intro impconjI)
   show goal5_1: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ SWMR ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC])"
      apply (smt (verit) CSTATE_various_forms1 MESI_State.distinct(137,47) SharedSnpInv'_CSTATE_invariant5) done
   show goal5_2: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC])"
     sorry (*failed to find proof*)
   show goal5_3: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC])"
     sorry (*failed to find proof*)
   show goal5_4: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC])"
     sorry (*failed to find proof*)
   show goal5_5: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC])"
      apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(293,47) SharedSnpInv'_CSTATE_invariant5) done
   show goal5_6: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC])"
     sorry (*failed to find proof*)
   show goal5_7: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC])"
     sorry (*failed to find proof*)
   show goal5_8: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC])"
      apply (smt (verit) HSTATE_X_Evict_invariant1 i107) done
   show goal5_9: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC])"
      apply (smt (verit) HSTATE_X_Evict_invariant1 i107) done
   show goal5_10: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC])"
      apply (smt (verit) HSTATE_X_Evict_invariant1 i107) done
   show goal5_11: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC])"
      apply (smt (verit) HSTATE_X_Evict_invariant1 i107) done
   show goal5_12: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 +=rdreq CleanEvictNoData] [ 0 s= SIAC])"
     sorry (*failed to find proof*)
qed
  show goal_6: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ SWMR ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA])"
    proof (intro impconjI)
   show goal6_1: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ SWMR ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA])"
      apply (smt (verit) CSTATE_various_forms1 MESI_State.distinct(133,43) SharedEvictData'_CSTATE_sameside) done
   show goal6_2: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA])"
     sorry (*failed to find proof*)
   show goal6_3: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA])"
     sorry (*failed to find proof*)
   show goal6_4: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA])"
     sorry (*failed to find proof*)
   show goal6_5: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA])"
     sorry (*failed to find proof*)
   show goal6_6: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA])"
     
  apply (smt (verit) MESI_State.distinct(43) SMADSnpInv_C_msg_not_half SharedEvictData'_CSTATE_otherside
    SharedEvictData'_HSTATE i22) done
   show goal6_7: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA])"
     
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(43) SharedEvictData'_CSTATE_otherside
    SharedEvictData'_CSTATE_sameside SharedEvictData'_HSTATE i22) done
   show goal6_8: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA])"
      apply (smt (verit) SharedEvictData'_HSTATE i107) done
   show goal6_9: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA])"
      apply (smt (verit) SharedEvictData'_HSTATE i107) done
   show goal6_10: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA])"
      apply (smt (verit) SharedEvictData'_HSTATE i107) done
   show goal6_11: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA])"
      apply (smt (verit) SharedEvictData'_HSTATE i107) done
   show goal6_12: "CSTATE Shared T 0 ∧ nextEvict T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 +=rdreq CleanEvict] [ 0 s= SIA])"
     
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(43) SharedEvictData'_CSTATE_otherside
    SharedEvictData'_CSTATE_sameside SharedEvictData'_HSTATE i23) done
qed
  show goal_7: "CSTATE Modified T 0 ∧ nextEvict T 0 ⟶ SWMR ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA])"
    proof (intro impconjI)
   show goal7_1: "CSTATE Modified T 0 ∧ nextEvict T 0 ⟶ SWMR ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA])"
      apply (smt (verit) CSTATE_various_forms1 MESI_State.distinct(117,27) ModifiedEvict'_CSTATE_sameside) done
   show goal7_2: "CSTATE Modified T 0 ∧ nextEvict T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA])"
     
  apply (smt (verit) CSTATE_inequality_invariant ModifiedEvict'_CSTATE_otherside ModifiedEvict'_CSTATE_sameside
    ModifiedEvict'_nextHTDDataPending i576 i72) done
   show goal7_3: "CSTATE Modified T 0 ∧ nextEvict T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA])"
      apply (smt (verit) ModifiedEvict'_HSTATE i23) done
   show goal7_4: "CSTATE Modified T 0 ∧ nextEvict T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA])"
     
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(27) ModifiedEvict'_CSTATE_otherside
    ModifiedEvict'_CSTATE_sameside i72) done
   show goal7_5: "CSTATE Modified T 0 ∧ nextEvict T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA])"
     
  apply (smt (verit) C_not_C_msg_def ModifiedEvict'_CSTATE_otherside i49 i72 nextGOPending_DeviceModifiedEvict) done
   show goal7_6: "CSTATE Modified T 0 ∧ nextEvict T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA])"
      apply (smt (verit) ModifiedEvict'_HSTATE i22) done
   show goal7_7: "CSTATE Modified T 0 ∧ nextEvict T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA])"
      apply (smt (verit) ModifiedEvict'_CSTATE_otherside ModifiedEvict'_HSTATE i22 i72) done
   show goal7_8: "CSTATE Modified T 0 ∧ nextEvict T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA])"
      apply (smt (verit) MESI_State.distinct(27) ModifiedEvict'_CSTATE_otherside SMADSnpInv_C_msg_not_half i72) done
   show goal7_9: "CSTATE Modified T 0 ∧ nextEvict T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA])"
     sorry (*failed to find proof*)
   show goal7_10: "CSTATE Modified T 0 ∧ nextEvict T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA])"
     sorry (*failed to find proof*)
   show goal7_11: "CSTATE Modified T 0 ∧ nextEvict T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA])"
     sorry (*failed to find proof*)
   show goal7_12: "CSTATE Modified T 0 ∧ nextEvict T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 +=rdreq DirtyEvict] [ 0 s= MIA])"
      apply (smt (verit) ModifiedEvict'_CSTATE_otherside ModifiedEvict'_HSTATE i23 i72) done
qed
  show goal_8: "CXL_SPG_used T 0 ∧ CSTATE Shared T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ SWMR ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid])"
    proof (intro impconjI)
   show goal8_1: "CXL_SPG_used T 0 ∧ CSTATE Shared T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ SWMR ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid])"
     
  apply (smt (verit) CSTATE_def CSTATE_various_forms1 MESI_State.distinct(5) SharedSnpInv'_CSTATE_invariant5 i592) done
   show goal8_2: "CXL_SPG_used T 0 ∧ CSTATE Shared T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid])"
      apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(139,5) SharedSnpInv'_CSTATE_invariant5) done
   show goal8_3: "CXL_SPG_used T 0 ∧ CSTATE Shared T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid])"
     sorry (*failed to find proof*)
   show goal8_4: "CXL_SPG_used T 0 ∧ CSTATE Shared T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid])"
     sorry (*failed to find proof*)
   show goal8_5: "CXL_SPG_used T 0 ∧ CSTATE Shared T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid])"
      apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(143,5) SharedSnpInv'_CSTATE_invariant5) done
   show goal8_6: "CXL_SPG_used T 0 ∧ CSTATE Shared T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid])"
     sorry (*failed to find proof*)
   show goal8_7: "CXL_SPG_used T 0 ∧ CSTATE Shared T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid])"
     sorry (*failed to find proof*)
   show goal8_8: "CXL_SPG_used T 0 ∧ CSTATE Shared T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid])"
     sorry (*failed to find proof*)
   show goal8_9: "CXL_SPG_used T 0 ∧ CSTATE Shared T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid])"
     sorry (*failed to find proof*)
   show goal8_10: "CXL_SPG_used T 0 ∧ CSTATE Shared T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid])"
     sorry (*failed to find proof*)
   show goal8_11: "CXL_SPG_used T 0 ∧ CSTATE Shared T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid])"
     sorry (*failed to find proof*)
   show goal8_12: "CXL_SPG_used T 0 ∧ CSTATE Shared T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= Invalid])"
     sorry (*failed to find proof*)
qed
  show goal_9: "CXL_SPG_used T 0 ∧ CSTATE ISD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ SWMR ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI])"
    proof (intro impconjI)
   show goal9_1: "CXL_SPG_used T 0 ∧ CSTATE ISD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ SWMR ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI])"
      apply (smt (verit) CSTATE_various_forms1 MESI_State.distinct(103,13) SharedSnpInv'_CSTATE_invariant5) done
   show goal9_2: "CXL_SPG_used T 0 ∧ CSTATE ISD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI])"
      apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(13,185) SharedSnpInv'_CSTATE_invariant5) done
   show goal9_3: "CXL_SPG_used T 0 ∧ CSTATE ISD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI])"
     sorry (*failed to find proof*)
   show goal9_4: "CXL_SPG_used T 0 ∧ CSTATE ISD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI])"
     sorry (*failed to find proof*)
   show goal9_5: "CXL_SPG_used T 0 ∧ CSTATE ISD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI])"
      apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(13,259) SharedSnpInv'_CSTATE_invariant5) done
   show goal9_6: "CXL_SPG_used T 0 ∧ CSTATE ISD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI])"
     sorry (*failed to find proof*)
   show goal9_7: "CXL_SPG_used T 0 ∧ CSTATE ISD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI])"
     sorry (*failed to find proof*)
   show goal9_8: "CXL_SPG_used T 0 ∧ CSTATE ISD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI])"
     sorry (*failed to find proof*)
   show goal9_9: "CXL_SPG_used T 0 ∧ CSTATE ISD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI])"
     sorry (*failed to find proof*)
   show goal9_10: "CXL_SPG_used T 0 ∧ CSTATE ISD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI])"
     sorry (*failed to find proof*)
   show goal9_11: "CXL_SPG_used T 0 ∧ CSTATE ISD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI])"
     sorry (*failed to find proof*)
   show goal9_12: "CXL_SPG_used T 0 ∧ CSTATE ISD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= ISDI])"
     sorry (*failed to find proof*)
qed
  show goal_10: "CSTATE ISD T 0 ∧ nextHTDDataPending T 0 ⟶ SWMR ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
    proof (intro impconjI)
   show goal10_1: "CSTATE ISD T 0 ∧ nextHTDDataPending T 0 ⟶ SWMR ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal10_2: "CSTATE ISD T 0 ∧ nextHTDDataPending T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal10_3: "CSTATE ISD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal10_4: "CSTATE ISD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal10_5: "CSTATE ISD T 0 ∧ nextHTDDataPending T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal10_6: "CSTATE ISD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal10_7: "CSTATE ISD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal10_8: "CSTATE ISD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
      apply (smt (verit) ISDData_HSTATE i74) done
   show goal10_9: "CSTATE ISD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
      apply (smt (verit) ISDData_HSTATE i74) done
   show goal10_10: "CSTATE ISD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
      apply (smt (verit) ISDData_HSTATE i74) done
   show goal10_11: "CSTATE ISD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
      apply (smt (verit) ISDData_HSTATE i74) done
   show goal10_12: "CSTATE ISD T 0 ∧ nextHTDDataPending T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 s= Shared] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
qed
  show goal_11: "CSTATE ISDI T 0 ∧ nextHTDDataPending T 0 ⟶ SWMR ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
    proof (intro impconjI)
   show goal11_1: "CSTATE ISDI T 0 ∧ nextHTDDataPending T 0 ⟶ SWMR ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
      apply (smt (verit) CSTATE_various_forms1 ISDIData_Shared MESI_State.distinct(5,95)) done
   show goal11_2: "CSTATE ISDI T 0 ∧ nextHTDDataPending T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
      apply (smt (verit) CSTATE_inequality_invariant ISDIData_Shared MESI_State.distinct(139,5)) done
   show goal11_3: "CSTATE ISDI T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     
  apply (smt (verit) CSTATE_ISDIData_otherside CSTATE_inequality_invariant ISDIData_HSTATE ISDIData_Shared
    MESI_State.distinct(5) i23) done
   show goal11_4: "CSTATE ISDI T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal11_5: "CSTATE ISDI T 0 ∧ nextHTDDataPending T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
      apply (smt (verit) CSTATE_inequality_invariant ISDIData_Shared MESI_State.distinct(143,5)) done
   show goal11_6: "CSTATE ISDI T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     
  apply (smt (verit) CSTATE_ISDIData_otherside CSTATE_inequality_invariant ISDIData_HSTATE ISDIData_Shared
    MESI_State.distinct(5) i22) done
   show goal11_7: "CSTATE ISDI T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     
  apply (smt (verit) CSTATE_ISDIData_otherside CSTATE_inequality_invariant ISDIData_HSTATE ISDIData_Shared
    MESI_State.distinct(5) i22) done
   show goal11_8: "CSTATE ISDI T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     
  apply (smt (verit) CSTATE_different1 ISDIData_HSTATE ISDIData_Shared MESI_State.distinct(5) i778
    nextReqIs_ISDIData) done
   show goal11_9: "CSTATE ISDI T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal11_10: "CSTATE ISDI T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal11_11: "CSTATE ISDI T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal11_12: "CSTATE ISDI T 0 ∧ nextHTDDataPending T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 s= Invalid] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     
  apply (smt (verit) CSTATE_ISDIData_otherside CSTATE_inequality_invariant ISDIData_HSTATE ISDIData_Shared
    MESI_State.distinct(5) i23) done
qed
  show goal_12: "CSTATE IMAD T 0 ∧ nextHTDDataPending T 0 ⟶ SWMR ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
    proof (intro impconjI)
   show goal12_1: "CSTATE IMAD T 0 ∧ nextHTDDataPending T 0 ⟶ SWMR ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
      apply (smt (verit) CSTATE_various_forms1 IMADData_CSTATE_IMA MESI_State.distinct(107,17)) done
   show goal12_2: "CSTATE IMAD T 0 ∧ nextHTDDataPending T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal12_3: "CSTATE IMAD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     
  apply (smt (verit) CSTATE_IMADData_otherside CSTATE_inequality_invariant HSTATE_IMADData IMADData_CSTATE_IMA
    MESI_State.distinct(17) i23) done
   show goal12_4: "CSTATE IMAD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     
  apply (smt (verit) CSTATE_IMADData_otherside CSTATE_inequality_invariant HSTATE_IMADData IMADData_CSTATE_IMA
    MESI_State.distinct(11,17,261) i106) done
   show goal12_5: "CSTATE IMAD T 0 ∧ nextHTDDataPending T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     apply simp done
   show goal12_6: "CSTATE IMAD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
      apply (smt (verit) HSTATE_IMADData i656) done
   show goal12_7: "CSTATE IMAD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
      apply (smt (verit) HSTATE_IMADData i656) done
   show goal12_8: "CSTATE IMAD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     
  apply (smt (verit) CSTATE_IMADData_otherside CSTATE_inequality_invariant C_msg_not_def C_msg_state_def
    MESI_State.distinct(11) i25 i47 nextReqIs_IMADData) done
   show goal12_9: "CSTATE IMAD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal12_10: "CSTATE IMAD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal12_11: "CSTATE IMAD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal12_12: "CSTATE IMAD T 0 ∧ nextHTDDataPending T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 s= IMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     
  apply (smt (verit) CSTATE_IMADData_otherside CSTATE_disj4' CSTATE_inequality_invariant HSTATE_IMADData
    IMADData_CSTATE_IMA MESI_State.distinct(17,3) i23) done
qed
  show goal_13: "CSTATE SMAD T 0 ∧ nextHTDDataPending T 0 ⟶ SWMR ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
    proof (intro impconjI)
   show goal13_1: "CSTATE SMAD T 0 ∧ nextHTDDataPending T 0 ⟶ SWMR ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
      apply (smt (verit) CSTATE_various_forms1 CSTATE_xyad_htdd_invariant3 MESI_State.distinct(127,37)) done
   show goal13_2: "CSTATE SMAD T 0 ∧ nextHTDDataPending T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     
  apply (smt (verit) CSTATE_SMADData_otherside CSTATE_inequality_invariant CSTATE_xyad_htdd_invariant3
    MESI_State.distinct(37) i844) done
   show goal13_3: "CSTATE SMAD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     
  apply (smt (verit) CSTATE_SMADData_otherside CSTATE_inequality_invariant CSTATE_xyad_htdd_invariant3
    MESI_State.distinct(37) i844) done
   show goal13_4: "CSTATE SMAD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     
  apply (smt (verit) CSTATE_SMADData_otherside CSTATE_inequality_invariant CSTATE_xyad_htdd_invariant3
    MESI_State.distinct(37) i844) done
   show goal13_5: "CSTATE SMAD T 0 ∧ nextHTDDataPending T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     
  apply (smt (verit) CSTATE_SMADData_otherside CSTATE_inequality_invariant CSTATE_xyad_htdd_invariant3
    MESI_State.distinct(37) i844) done
   show goal13_6: "CSTATE SMAD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
      apply (smt (verit) HSTATE_SMADData i658) done
   show goal13_7: "CSTATE SMAD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
      apply (smt (verit) HSTATE_SMADData i658) done
   show goal13_8: "CSTATE SMAD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     
  apply (smt (verit) CSTATE_SMADData_otherside CSTATE_inequality_invariant C_msg_state_def MESI_State.distinct(281)
    i47 i844 nextReqIs_SMADData) done
   show goal13_9: "CSTATE SMAD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal13_10: "CSTATE SMAD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     
  apply (smt (verit) CSTATE_inequality_invariant C_msg_state_def HSTATE_SMADData MESI_State.distinct(281,347) i417 i419
    i456 i47 i577 i833 i844 i902 i904 i908 i910 i914 nextReqIs_SMADData nextSnpRespIs_general_rule_5_0) done
   show goal13_11: "CSTATE SMAD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal13_12: "CSTATE SMAD T 0 ∧ nextHTDDataPending T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 s= SMA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     
  apply (smt (verit) CSTATE_SMADData_otherside CSTATE_inequality_invariant CSTATE_xyad_htdd_invariant3
    MESI_State.distinct(37) i844) done
qed
  show goal_14: "CSTATE IMAD T 0 ∧ nextGOPending T 0 ⟶ SWMR ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ])"
    proof (intro impconjI)
   show goal14_1: "CSTATE IMAD T 0 ∧ nextGOPending T 0 ⟶ SWMR ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ])"
     
  apply (smt (verit) CSTATE_various_forms1 MESI_State.distinct(109) SharedSnpInv'_CSTATE_invariant5
    devcache1_IMADGO_invariant_aux1 devcache1_consume_reqresps1_invariant) done
   show goal14_2: "CSTATE IMAD T 0 ∧ nextGOPending T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal14_3: "CSTATE IMAD T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal14_4: "CSTATE IMAD T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal14_5: "CSTATE IMAD T 0 ∧ nextGOPending T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ])"
     
  apply (smt (verit) CSTATE_disj2 CSTATE_inequality_invariant CSTATE_remove_op MESI_State.distinct(19,265)
    SIAGO_WritePullDrop_CSTATE_aux SharedSnpInv'_CSTATE_invariant5) done
   show goal14_6: "CSTATE IMAD T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal14_7: "CSTATE IMAD T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal14_8: "CSTATE IMAD T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal14_9: "CSTATE IMAD T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal14_10: "CSTATE IMAD T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal14_11: "CSTATE IMAD T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal14_12: "CSTATE IMAD T 0 ∧ nextGOPending T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= IMD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
qed
  show goal_15: "CSTATE ISAD T 0 ∧ nextGOPending T 0 ⟶ SWMR ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ])"
    proof (intro impconjI)
   show goal15_1: "CSTATE ISAD T 0 ∧ nextGOPending T 0 ⟶ SWMR ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ])"
     
  apply (smt (verit) CSTATE_various_forms1 MESI_State.distinct(97) SharedSnpInv'_CSTATE_invariant5
    devcache1_SIAGO_WritePullDrop_invariant_aux1 devcache1_consume_reqresps1_invariant) done
   show goal15_2: "CSTATE ISAD T 0 ∧ nextGOPending T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal15_3: "CSTATE ISAD T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal15_4: "CSTATE ISAD T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal15_5: "CSTATE ISAD T 0 ∧ nextGOPending T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal15_6: "CSTATE ISAD T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal15_7: "CSTATE ISAD T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal15_8: "CSTATE ISAD T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal15_9: "CSTATE ISAD T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal15_10: "CSTATE ISAD T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal15_11: "CSTATE ISAD T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal15_12: "CSTATE ISAD T 0 ∧ nextGOPending T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= ISD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
qed
  show goal_16: "CSTATE ISAD T 0 ∧ nextHTDDataPending T 0 ⟶ SWMR ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
    proof (intro impconjI)
   show goal16_1: "CSTATE ISAD T 0 ∧ nextHTDDataPending T 0 ⟶ SWMR ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
      apply (smt (verit) CSTATE_various_forms1 CSTATE_xyad_htdd_invariant3 MESI_State.distinct(9,99)) done
   show goal16_2: "CSTATE ISAD T 0 ∧ nextHTDDataPending T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal16_3: "CSTATE ISAD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     
  apply (smt (verit) CSTATE_ISADData_otherside CSTATE_inequality_invariant CSTATE_xyad_htdd_invariant3 HSTATE_ISADData
    MESI_State.distinct(9) i23) done
   show goal16_4: "CSTATE ISAD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal16_5: "CSTATE ISAD T 0 ∧ nextHTDDataPending T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal16_6: "CSTATE ISAD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     
  apply (smt (verit) CSTATE_ISADData_otherside CSTATE_inequality_invariant CSTATE_xyad_htdd_invariant3 HSTATE_ISADData
    MESI_State.distinct(9) i22) done
   show goal16_7: "CSTATE ISAD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     
  apply (smt (verit) CSTATE_ISADData_otherside CSTATE_disj2 CSTATE_disj4' CSTATE_xyad_htdd_invariant3 HSTATE_ISADData
    MESI_State.distinct(15,9) i22) done
   show goal16_8: "CSTATE ISAD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     
  apply (smt (verit) CSTATE_ISADData_otherside CSTATE_different2 CSTATE_disj4' CSTATE_inequality_invariant
    CSTATE_xyad_htdd_invariant3 C_msg_state_def MESI_State.distinct(11,9) i47 nextReqIs_ISADData) done
   show goal16_9: "CSTATE ISAD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal16_10: "CSTATE ISAD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal16_11: "CSTATE ISAD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal16_12: "CSTATE ISAD T 0 ∧ nextHTDDataPending T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 s= ISA] [ 0 :=dd getHTDDataOrMakeup T 0] [ 0 -=devd ])"
     
  apply (smt (verit) CSTATE_inequality_invariant CSTATE_xyad_htdd_invariant3 MESI_State.distinct(9) i494
    nextReqIs_ISADData) done
qed
  show goal_17: "CSTATE SMAD T 0 ∧ nextGOPending T 0 ⟶ SWMR ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ])"
    proof (intro impconjI)
   show goal17_1: "CSTATE SMAD T 0 ∧ nextGOPending T 0 ⟶ SWMR ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ])"
     
  apply (smt (verit) CSTATE_various_forms1 MESI_State.distinct(129) SharedSnpInv'_CSTATE_invariant5
    devcache1_SMADGO_invariant_aux1 devcache1_consume_reqresps1_invariant) done
   show goal17_2: "CSTATE SMAD T 0 ∧ nextGOPending T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ])"
     
  apply (smt (verit) CSTATE_different1 CSTATE_inequality_invariant CSTATE_remove_op MESI_State.distinct(211,39)
    SIAGO_WritePullDrop_CSTATE_aux SharedSnpInv'_CSTATE_invariant5) done
   show goal17_3: "CSTATE SMAD T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal17_4: "CSTATE SMAD T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal17_5: "CSTATE SMAD T 0 ∧ nextGOPending T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal17_6: "CSTATE SMAD T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal17_7: "CSTATE SMAD T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal17_8: "CSTATE SMAD T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal17_9: "CSTATE SMAD T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal17_10: "CSTATE SMAD T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal17_11: "CSTATE SMAD T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
   show goal17_12: "CSTATE SMAD T 0 ∧ nextGOPending T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= SMD] [ 0 -=reqresp ])"
     sorry (*failed to find proof*)
qed
  show goal_18: "CSTATE SMA T 0 ∧ nextGOPending T 0 ⟶ SWMR ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
    proof (intro impconjI)
   show goal18_1: "CSTATE SMA T 0 ∧ nextGOPending T 0 ⟶ SWMR ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal18_2: "CSTATE SMA T 0 ∧ nextGOPending T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal18_3: "CSTATE SMA T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal18_4: "CSTATE SMA T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal18_5: "CSTATE SMA T 0 ∧ nextGOPending T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal18_6: "CSTATE SMA T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal18_7: "CSTATE SMA T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal18_8: "CSTATE SMA T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal18_9: "CSTATE SMA T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal18_10: "CSTATE SMA T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal18_11: "CSTATE SMA T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal18_12: "CSTATE SMA T 0 ∧ nextGOPending T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
qed
  show goal_19: "CXL_SPG_used T 0 ∧ CSTATE SMAD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ SWMR ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD])"
    proof (intro impconjI)
   show goal19_1: "CXL_SPG_used T 0 ∧ CSTATE SMAD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ SWMR ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD])"
      apply (smt (verit) CSTATE_various_forms1 MESI_State.distinct(105,15) SharedSnpInv'_CSTATE_invariant5) done
   show goal19_2: "CXL_SPG_used T 0 ∧ CSTATE SMAD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD])"
      apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(15,187) SharedSnpInv'_CSTATE_invariant5) done
   show goal19_3: "CXL_SPG_used T 0 ∧ CSTATE SMAD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD])"
     sorry (*failed to find proof*)
   show goal19_4: "CXL_SPG_used T 0 ∧ CSTATE SMAD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD])"
     sorry (*failed to find proof*)
   show goal19_5: "CXL_SPG_used T 0 ∧ CSTATE SMAD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD])"
      apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(15,261) SharedSnpInv'_CSTATE_invariant5) done
   show goal19_6: "CXL_SPG_used T 0 ∧ CSTATE SMAD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD])"
     sorry (*failed to find proof*)
   show goal19_7: "CXL_SPG_used T 0 ∧ CSTATE SMAD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD])"
     sorry (*failed to find proof*)
   show goal19_8: "CXL_SPG_used T 0 ∧ CSTATE SMAD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD])"
     sorry (*failed to find proof*)
   show goal19_9: "CXL_SPG_used T 0 ∧ CSTATE SMAD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD])"
     sorry (*failed to find proof*)
   show goal19_10: "CXL_SPG_used T 0 ∧ CSTATE SMAD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD])"
     sorry (*failed to find proof*)
   show goal19_11: "CXL_SPG_used T 0 ∧ CSTATE SMAD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD])"
     sorry (*failed to find proof*)
   show goal19_12: "CXL_SPG_used T 0 ∧ CSTATE SMAD T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IMAD])"
     sorry (*failed to find proof*)
qed
  show goal_20: "CSTATE SMD T 0 ∧ nextHTDDataPending T 0 ⟶ SWMR ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
    proof (intro impconjI)
   show goal20_1: "CSTATE SMD T 0 ∧ nextHTDDataPending T 0 ⟶ SWMR ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal20_2: "CSTATE SMD T 0 ∧ nextHTDDataPending T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal20_3: "CSTATE SMD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal20_4: "CSTATE SMD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal20_5: "CSTATE SMD T 0 ∧ nextHTDDataPending T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal20_6: "CSTATE SMD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
      apply (smt (verit) SMDData_HSTATE i654) done
   show goal20_7: "CSTATE SMD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
      apply (smt (verit) SMDData_HSTATE i654) done
   show goal20_8: "CSTATE SMD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal20_9: "CSTATE SMD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal20_10: "CSTATE SMD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal20_11: "CSTATE SMD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal20_12: "CSTATE SMD T 0 ∧ nextHTDDataPending T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
qed
  show goal_21: "CSTATE IMA T 0 ∧ nextGOPending T 0 ⟶ SWMR ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
    proof (intro impconjI)
   show goal21_1: "CSTATE IMA T 0 ∧ nextGOPending T 0 ⟶ SWMR ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal21_2: "CSTATE IMA T 0 ∧ nextGOPending T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal21_3: "CSTATE IMA T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal21_4: "CSTATE IMA T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal21_5: "CSTATE IMA T 0 ∧ nextGOPending T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal21_6: "CSTATE IMA T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal21_7: "CSTATE IMA T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal21_8: "CSTATE IMA T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal21_9: "CSTATE IMA T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal21_10: "CSTATE IMA T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal21_11: "CSTATE IMA T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal21_12: "CSTATE IMA T 0 ∧ nextGOPending T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Modified] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
qed
  show goal_22: "CSTATE ISA T 0 ∧ nextGOPending T 0 ⟶ SWMR ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0])"
    proof (intro impconjI)
   show goal22_1: "CSTATE ISA T 0 ∧ nextGOPending T 0 ⟶ SWMR ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal22_2: "CSTATE ISA T 0 ∧ nextGOPending T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal22_3: "CSTATE ISA T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal22_4: "CSTATE ISA T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal22_5: "CSTATE ISA T 0 ∧ nextGOPending T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0])"
     
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(101,3) SIAGO_WritePullDrop_CSTATE_aux
    SharedSnpInv'_CSTATE_invariant5) done
   show goal22_6: "CSTATE ISA T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal22_7: "CSTATE ISA T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal22_8: "CSTATE ISA T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal22_9: "CSTATE ISA T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal22_10: "CSTATE ISA T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal22_11: "CSTATE ISA T 0 ∧ nextGOPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal22_12: "CSTATE ISA T 0 ∧ nextGOPending T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Shared] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
qed
  show goal_23: "CSTATE Modified T 0 ∧ nextStore T 0 ⟶ SWMR (T [ -=i 0]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) (T [ -=i 0]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) (T [ -=i 0]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) (T [ -=i 0]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) (T [ -=i 0]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (T [ -=i 0]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (T [ -=i 0]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (T [ -=i 0]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) (T [ -=i 0]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) (T [ -=i 0]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) (T [ -=i 0]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD (T [ -=i 0])"
    proof (intro impconjI)
   show goal23_1: "CSTATE Modified T 0 ∧ nextStore T 0 ⟶ SWMR (T [ -=i 0])"
     
  apply (smt (verit) CSTATE_various_forms1 CSTATE_various_forms6 SWMR_def devcache2_copy_perform1_invariant i0
    i72) done
   show goal23_2: "CSTATE Modified T 0 ∧ nextStore T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) (T [ -=i 0])"
     sorry (*failed to find proof*)
   show goal23_3: "CSTATE Modified T 0 ∧ nextStore T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) (T [ -=i 0])"
      apply (smt (verit) i23 remove_instr_HSTATE) done
   show goal23_4: "CSTATE Modified T 0 ∧ nextStore T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) (T [ -=i 0])"
     sorry (*failed to find proof*)
   show goal23_5: "CSTATE Modified T 0 ∧ nextStore T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) (T [ -=i 0])"
      apply (smt (verit) CSTATE_remove_op C_not_C_msg_def i49 i72 nextGOPending_DeviceModifiedStore) done
   show goal23_6: "CSTATE Modified T 0 ∧ nextStore T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (T [ -=i 0])"
      apply (smt (verit) i22 remove_instr_HSTATE) done
   show goal23_7: "CSTATE Modified T 0 ∧ nextStore T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (T [ -=i 0])"
      apply (smt (verit) CSTATE_remove_op i22 i72 remove_instr_HSTATE) done
   show goal23_8: "CSTATE Modified T 0 ∧ nextStore T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (T [ -=i 0])"
     sorry (*failed to find proof*)
   show goal23_9: "CSTATE Modified T 0 ∧ nextStore T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) (T [ -=i 0])"
     sorry (*failed to find proof*)
   show goal23_10: "CSTATE Modified T 0 ∧ nextStore T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) (T [ -=i 0])"
     sorry (*failed to find proof*)
   show goal23_11: "CSTATE Modified T 0 ∧ nextStore T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) (T [ -=i 0])"
     sorry (*failed to find proof*)
   show goal23_12: "CSTATE Modified T 0 ∧ nextStore T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD (T [ -=i 0])"
     sorry (*failed to find proof*)
qed
  show goal_24: "CSTATE Modified T 0 ∧ nextLoad T 0 ⟶ SWMR (T [ -=i 0]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) (T [ -=i 0]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) (T [ -=i 0]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) (T [ -=i 0]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) (T [ -=i 0]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (T [ -=i 0]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (T [ -=i 0]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (T [ -=i 0]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) (T [ -=i 0]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) (T [ -=i 0]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) (T [ -=i 0]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD (T [ -=i 0])"
    proof (intro impconjI)
   show goal24_1: "CSTATE Modified T 0 ∧ nextLoad T 0 ⟶ SWMR (T [ -=i 0])"
     
  apply (smt (verit) CSTATE_various_forms1 CSTATE_various_forms6 SWMR_def devcache2_copy_perform1_invariant i0
    i72) done
   show goal24_2: "CSTATE Modified T 0 ∧ nextLoad T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) (T [ -=i 0])"
     sorry (*failed to find proof*)
   show goal24_3: "CSTATE Modified T 0 ∧ nextLoad T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) (T [ -=i 0])"
      apply (smt (verit) i23 remove_instr_HSTATE) done
   show goal24_4: "CSTATE Modified T 0 ∧ nextLoad T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) (T [ -=i 0])"
     sorry (*failed to find proof*)
   show goal24_5: "CSTATE Modified T 0 ∧ nextLoad T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) (T [ -=i 0])"
      apply (smt (verit) CSTATE_remove_op C_not_C_msg_def i49 i72 nextGOPending_DeviceModifiedStore) done
   show goal24_6: "CSTATE Modified T 0 ∧ nextLoad T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (T [ -=i 0])"
      apply (smt (verit) i22 remove_instr_HSTATE) done
   show goal24_7: "CSTATE Modified T 0 ∧ nextLoad T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (T [ -=i 0])"
      apply (smt (verit) CSTATE_remove_op i22 i72 remove_instr_HSTATE) done
   show goal24_8: "CSTATE Modified T 0 ∧ nextLoad T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (T [ -=i 0])"
     sorry (*failed to find proof*)
   show goal24_9: "CSTATE Modified T 0 ∧ nextLoad T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) (T [ -=i 0])"
     sorry (*failed to find proof*)
   show goal24_10: "CSTATE Modified T 0 ∧ nextLoad T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) (T [ -=i 0])"
     sorry (*failed to find proof*)
   show goal24_11: "CSTATE Modified T 0 ∧ nextLoad T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) (T [ -=i 0])"
     sorry (*failed to find proof*)
   show goal24_12: "CSTATE Modified T 0 ∧ nextLoad T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD (T [ -=i 0])"
     sorry (*failed to find proof*)
qed
  show goal_25: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ SWMR (consumeGOSendData 0 Invalid T) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) (consumeGOSendData 0 Invalid T) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) (consumeGOSendData 0 Invalid T) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) (consumeGOSendData 0 Invalid T) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD (consumeGOSendData 0 Invalid T)"
    proof (intro impconjI)
   show goal25_1: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ SWMR (consumeGOSendData 0 Invalid T)"
     sorry (*failed to find proof*)
   show goal25_2: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T)"
     sorry (*failed to find proof*)
   show goal25_3: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T)"
     sorry (*failed to find proof*)
   show goal25_4: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T)"
     sorry (*failed to find proof*)
   show goal25_5: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T)"
     sorry (*failed to find proof*)
   show goal25_6: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T)"
     sorry (*failed to find proof*)
   show goal25_7: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T)"
     sorry (*failed to find proof*)
   show goal25_8: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T)"
     sorry (*failed to find proof*)
   show goal25_9: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) (consumeGOSendData 0 Invalid T)"
     sorry (*failed to find proof*)
   show goal25_10: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) (consumeGOSendData 0 Invalid T)"
     sorry (*failed to find proof*)
   show goal25_11: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) (consumeGOSendData 0 Invalid T)"
     sorry (*failed to find proof*)
   show goal25_12: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD (consumeGOSendData 0 Invalid T)"
     sorry (*failed to find proof*)
qed
  show goal_26: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ SWMR ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
    proof (intro impconjI)
   show goal26_1: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ SWMR ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     
  apply (smt (verit) CSTATE_def CSTATE_disj4' CSTATE_inequality_invariant CSTATE_various_forms1 CSTATE_various_forms2
    MESI_State.distinct(5,95) SIAGO_WritePullDrop_CSTATE_aux SharedSnpInv'_CSTATE_invariant5) done
   show goal26_2: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     
  apply (smt (verit) CSTATE_disj1 MESI_State.distinct(139,5) SIAGO_WritePullDrop_CSTATE_aux
    SharedSnpInv'_CSTATE_invariant5) done
   show goal26_3: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal26_4: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal26_5: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(143,5) SIAGO_WritePullDrop_CSTATE_aux
    SharedSnpInv'_CSTATE_invariant5) done
   show goal26_6: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal26_7: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal26_8: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal26_9: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal26_10: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal26_11: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal26_12: "CSTATE SIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
qed
  show goal_27: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ SWMR ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
    proof (intro impconjI)
   show goal27_1: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ SWMR ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     
  apply (smt (verit) CSTATE_def CSTATE_inequality_invariant CSTATE_various_forms1 CSTATE_various_forms2
    MESI_State.distinct(5,95) SIAGO_WritePullDrop_CSTATE_aux SharedSnpInv'_CSTATE_invariant5) done
   show goal27_2: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     
  apply (smt (verit) CSTATE_disj1 MESI_State.distinct(139,5) SIAGO_WritePullDrop_CSTATE_aux
    SharedSnpInv'_CSTATE_invariant5) done
   show goal27_3: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal27_4: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal27_5: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(143,5) SIAGO_WritePullDrop_CSTATE_aux
    SharedSnpInv'_CSTATE_invariant5) done
   show goal27_6: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal27_7: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal27_8: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal27_9: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal27_10: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal27_11: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal27_12: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePullDrop T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
qed
  show goal_28: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ SWMR (consumeGOSendData 0 Invalid T) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) (consumeGOSendData 0 Invalid T) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) (consumeGOSendData 0 Invalid T) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) (consumeGOSendData 0 Invalid T) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD (consumeGOSendData 0 Invalid T)"
    proof (intro impconjI)
   show goal28_1: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ SWMR (consumeGOSendData 0 Invalid T)"
     sorry (*failed to find proof*)
   show goal28_2: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T)"
     sorry (*failed to find proof*)
   show goal28_3: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T)"
     sorry (*failed to find proof*)
   show goal28_4: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T)"
     sorry (*failed to find proof*)
   show goal28_5: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T)"
     sorry (*failed to find proof*)
   show goal28_6: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T)"
     sorry (*failed to find proof*)
   show goal28_7: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T)"
     sorry (*failed to find proof*)
   show goal28_8: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (consumeGOSendData 0 Invalid T)"
     sorry (*failed to find proof*)
   show goal28_9: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) (consumeGOSendData 0 Invalid T)"
     sorry (*failed to find proof*)
   show goal28_10: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) (consumeGOSendData 0 Invalid T)"
     sorry (*failed to find proof*)
   show goal28_11: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) (consumeGOSendData 0 Invalid T)"
     sorry (*failed to find proof*)
   show goal28_12: "CSTATE IIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD (consumeGOSendData 0 Invalid T)"
     sorry (*failed to find proof*)
qed
  show goal_29: "CSTATE IMD T 0 ∧ nextHTDDataPending T 0 ⟶ SWMR ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
    proof (intro impconjI)
   show goal29_1: "CSTATE IMD T 0 ∧ nextHTDDataPending T 0 ⟶ SWMR ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     
  apply (smt (verit) CSTATE_otherside_rule_8 CSTATE_various_forms1 CSTATE_various_forms4 SMDData_Modified i644) done
   show goal29_2: "CSTATE IMD T 0 ∧ nextHTDDataPending T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal29_3: "CSTATE IMD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal29_4: "CSTATE IMD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal29_5: "CSTATE IMD T 0 ∧ nextHTDDataPending T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     
  apply (smt (verit) CSTATE_SMDData_otherside C_not_C_msg_def i337 i465 i478 i640 nextGOPending_DeviceSMDData) done
   show goal29_6: "CSTATE IMD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
      apply (smt (verit) SMDData_HSTATE i654) done
   show goal29_7: "CSTATE IMD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
      apply (smt (verit) SMDData_HSTATE i654) done
   show goal29_8: "CSTATE IMD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal29_9: "CSTATE IMD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal29_10: "CSTATE IMD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal29_11: "CSTATE IMD T 0 ∧ nextHTDDataPending T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
   show goal29_12: "CSTATE IMD T 0 ∧ nextHTDDataPending T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 s= Modified] [ 0 :=dd getHTDDataOrMakeup T 0] [ -=i 0] [ 0 -=devd ])"
     sorry (*failed to find proof*)
qed
  show goal_30: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ SWMR ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
    proof (intro impconjI)
   show goal30_1: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ SWMR ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     
  apply (smt (verit) CSTATE_inequality_invariant CSTATE_various_forms1 CSTATE_various_forms2
    MESI_State.distinct(121,31) SharedSnpInv'_CSTATE_invariant5 SharedSnpInv'_MAD_CSTATE_invariant5) done
   show goal30_2: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(203,31) SharedSnpInv'_CSTATE_invariant5
    SharedSnpInv'_MAD_CSTATE_invariant5) done
   show goal30_3: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal30_4: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal30_5: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(277,31) SharedSnpInv'_CSTATE_invariant5
    SharedSnpInv'_MAD_CSTATE_invariant5) done
   show goal30_6: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal30_7: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal30_8: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal30_9: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal30_10: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal30_11: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal30_12: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
qed
  show goal_31: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ SWMR ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
    proof (intro impconjI)
   show goal31_1: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ SWMR ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     
  apply (smt (verit) CSTATE_disj4' CSTATE_various_forms1 CSTATE_various_forms2 MESI_State.distinct(133,27,43)
    SharedSnpInv'_CSTATE_invariant5 SharedSnpInv'_MAD_CSTATE_invariant5) done
   show goal31_2: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(215,43) SharedSnpInv'_CSTATE_invariant5
    SharedSnpInv'_MAD_CSTATE_invariant5) done
   show goal31_3: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal31_4: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal31_5: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(289,43) SharedSnpInv'_CSTATE_invariant5
    SharedSnpInv'_MAD_CSTATE_invariant5) done
   show goal31_6: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal31_7: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal31_8: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal31_9: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal31_10: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal31_11: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal31_12: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpData T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= SIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
qed
  show goal_32: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ SWMR ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
    proof (intro impconjI)
   show goal32_1: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ SWMR ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     
  apply (smt (verit) CSTATE_different1 CSTATE_disj4' CSTATE_various_forms2 MESI_State.distinct(121,27,31)
    SharedSnpInv'_CSTATE_invariant5 SharedSnpInv'_MAD_CSTATE_invariant5) done
   show goal32_2: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     
  apply (smt (verit) CSTATE_different1 CSTATE_inequality_invariant MESI_State.distinct(203,31)
    SharedSnpInv'_CSTATE_invariant5 SharedSnpInv'_MAD_CSTATE_invariant5) done
   show goal32_3: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal32_4: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal32_5: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(277,31) SharedSnpInv'_CSTATE_invariant5
    SharedSnpInv'_MAD_CSTATE_invariant5) done
   show goal32_6: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal32_7: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal32_8: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal32_9: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal32_10: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal32_11: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal32_12: "CXL_SPG_used T 0 ∧ CSTATE MIA T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= IIA] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
qed
  show goal_33: "CSTATE MIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ SWMR ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0])"
    proof (intro impconjI)
   show goal33_1: "CSTATE MIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ SWMR ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0])"
     
  apply (smt (verit) CSTATE_def CSTATE_inequality_invariant CSTATE_various_forms1 CSTATE_various_forms2
    MESI_State.distinct(5,95) SIAGO_WritePull_CSTATE_aux SharedSnpInv'_CSTATE_invariant5 nat_to_id.simps(1)) done
   show goal33_2: "CSTATE MIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0])"
     
  apply (smt (verit) CSTATE_disj1 CSTATE_disj2 MESI_State.distinct(139,31,5) SIAGO_WritePullDrop_CSTATE_aux
    SharedSnpInv'_CSTATE_invariant5 SharedSnpInv'_MAD_CSTATE_invariant5
    nextEvict_IIAGO_WritePullDrop_CSTATE_invariant) done
   show goal33_3: "CSTATE MIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal33_4: "CSTATE MIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal33_5: "CSTATE MIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0])"
     
  apply (smt (verit) CSTATE_disj3 CSTATE_inequality_invariant CSTATE_remove_op Invalid_not_eq_MIA
    MESI_State.distinct(143,167,5) SIAGO_WritePullDrop_CSTATE_aux SharedSnpInv'_CSTATE_invariant5
    SharedSnpInv'_MAD_CSTATE_invariant5) done
   show goal33_6: "CSTATE MIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal33_7: "CSTATE MIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal33_8: "CSTATE MIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal33_9: "CSTATE MIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal33_10: "CSTATE MIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal33_11: "CSTATE MIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal33_12: "CSTATE MIA T 0 ∧ nextGOPendingIs GO_WritePull T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ nat_to_id 0 +=d2hd D2HData (nextGOID T 0) (read_dev_value 0 T) (clock T)] [ -=i 0])"
     sorry (*failed to find proof*)
qed
  show goal_34: "CXL_SPG_used T 0 ∧ CSTATE SIA T 0 ∧ nextSnoopIs SnpInv T 0 ∧ ¬ nextReqIs DirtyEvict T 0 ⟶ SWMR ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA])"
    proof (intro impconjI)
   show goal34_1: "CXL_SPG_used T 0 ∧ CSTATE SIA T 0 ∧ nextSnoopIs SnpInv T 0 ∧ ¬ nextReqIs DirtyEvict T 0 ⟶ SWMR ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA])"
      apply (smt (verit) CSTATE_various_forms1 MESI_State.distinct(121,31) SharedSnpInv'_CSTATE_invariant5) done
   show goal34_2: "CXL_SPG_used T 0 ∧ CSTATE SIA T 0 ∧ nextSnoopIs SnpInv T 0 ∧ ¬ nextReqIs DirtyEvict T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA])"
      apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(203,31) SharedSnpInv'_CSTATE_invariant5) done
   show goal34_3: "CXL_SPG_used T 0 ∧ CSTATE SIA T 0 ∧ nextSnoopIs SnpInv T 0 ∧ ¬ nextReqIs DirtyEvict T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA])"
     sorry (*failed to find proof*)
   show goal34_4: "CXL_SPG_used T 0 ∧ CSTATE SIA T 0 ∧ nextSnoopIs SnpInv T 0 ∧ ¬ nextReqIs DirtyEvict T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA])"
     sorry (*failed to find proof*)
   show goal34_5: "CXL_SPG_used T 0 ∧ CSTATE SIA T 0 ∧ nextSnoopIs SnpInv T 0 ∧ ¬ nextReqIs DirtyEvict T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA])"
      apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(277,31) SharedSnpInv'_CSTATE_invariant5) done
   show goal34_6: "CXL_SPG_used T 0 ∧ CSTATE SIA T 0 ∧ nextSnoopIs SnpInv T 0 ∧ ¬ nextReqIs DirtyEvict T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA])"
     sorry (*failed to find proof*)
   show goal34_7: "CXL_SPG_used T 0 ∧ CSTATE SIA T 0 ∧ nextSnoopIs SnpInv T 0 ∧ ¬ nextReqIs DirtyEvict T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA])"
     sorry (*failed to find proof*)
   show goal34_8: "CXL_SPG_used T 0 ∧ CSTATE SIA T 0 ∧ nextSnoopIs SnpInv T 0 ∧ ¬ nextReqIs DirtyEvict T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA])"
     sorry (*failed to find proof*)
   show goal34_9: "CXL_SPG_used T 0 ∧ CSTATE SIA T 0 ∧ nextSnoopIs SnpInv T 0 ∧ ¬ nextReqIs DirtyEvict T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA])"
     sorry (*failed to find proof*)
   show goal34_10: "CXL_SPG_used T 0 ∧ CSTATE SIA T 0 ∧ nextSnoopIs SnpInv T 0 ∧ ¬ nextReqIs DirtyEvict T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA])"
     sorry (*failed to find proof*)
   show goal34_11: "CXL_SPG_used T 0 ∧ CSTATE SIA T 0 ∧ nextSnoopIs SnpInv T 0 ∧ ¬ nextReqIs DirtyEvict T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA])"
     sorry (*failed to find proof*)
   show goal34_12: "CXL_SPG_used T 0 ∧ CSTATE SIA T 0 ∧ nextSnoopIs SnpInv T 0 ∧ ¬ nextReqIs DirtyEvict T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIHitSE getTid (getSnoopOrMakeup (getSnoops 0 T))] [0 -=snp ] [ 0 s= IIA])"
     sorry (*failed to find proof*)
qed
  show goal_35: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ SWMR ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
    proof (intro impconjI)
   show goal35_1: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ SWMR ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     
  apply (smt (verit) CSTATE_def CSTATE_disj4' CSTATE_various_forms1 CSTATE_various_forms2 MESI_State.distinct(95)
    SharedSnpInv'_CSTATE_invariant5 SharedSnpInv'_MAD_CSTATE_invariant5 i592) done
   show goal35_2: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     
  apply (smt (verit) CSTATE_disj4' CSTATE_inequality_invariant MESI_State.distinct(139,5)
    SharedSnpInv'_CSTATE_invariant5 SharedSnpInv'_MAD_CSTATE_invariant5) done
   show goal35_3: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal35_4: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal35_5: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     
  apply (smt (verit) CSTATE_disj4' CSTATE_inequality_invariant MESI_State.distinct(143,5)
    SharedSnpInv'_CSTATE_invariant5 SharedSnpInv'_MAD_CSTATE_invariant5) done
   show goal35_6: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal35_7: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal35_8: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal35_9: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal35_10: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal35_11: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal35_12: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpInv T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
qed
  show goal_36: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ SWMR ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
    proof (intro impconjI)
   show goal36_1: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ SWMR ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal36_2: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(3,97) SharedSnpInv'_CSTATE_invariant5
    SharedSnpInv'_MAD_CSTATE_invariant5) done
   show goal36_3: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal36_4: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal36_5: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(101,3) SharedSnpInv'_CSTATE_invariant5
    SharedSnpInv'_MAD_CSTATE_invariant5) done
   show goal36_6: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal36_7: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal36_8: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal36_9: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal36_10: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal36_11: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal36_12: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspSFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Shared] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
qed
  show goal_37: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ SWMR ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
    proof (intro impconjI)
   show goal37_1: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ SWMR ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     
  apply (smt (verit) CSTATE_disj4' CSTATE_various_forms1 CSTATE_various_forms2 MESI_State.distinct(5,95)
    SharedSnpInv'_CSTATE_invariant5 SharedSnpInv'_MAD_CSTATE_invariant5) done
   show goal37_2: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(139,5) SharedSnpInv'_CSTATE_invariant5
    SharedSnpInv'_MAD_CSTATE_invariant5) done
   show goal37_3: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal37_4: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal37_5: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     
  apply (smt (verit) CSTATE_inequality_invariant MESI_State.distinct(143,5) SharedSnpInv'_CSTATE_invariant5
    SharedSnpInv'_MAD_CSTATE_invariant5) done
   show goal37_6: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal37_7: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal37_8: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal37_9: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal37_10: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal37_11: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
   show goal37_12: "CXL_SPG_used T 0 ∧ CSTATE Modified T 0 ∧ nextSnoopIs SnpData T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T ⦇buffer1 := Some (nextSnoop T 0)⦈ [0 +=snpresp RspIFwdM nextSnoopID T 0] [0 -=snp ] [ 0 s= Invalid] [ nat_to_id 0 +=d2hd D2HData (nextSnoopID T 0) (read_dev_value 0 T) (clock T)])"
     sorry (*failed to find proof*)
qed
  show goal_38: "HSTATE InvalidM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ SWMR ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
    proof (intro impconjI)
   show goal38_1: "HSTATE InvalidM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ SWMR ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_various_forms5 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def
    GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HostInvalidRdShared'_devcache_invariant2 IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def
    IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def
    MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def
    MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def
    OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def
    SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i493
    numeral_One) done
   show goal38_2: "HSTATE InvalidM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
      apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 i603 i676 numeral_One) done
   show goal38_3: "HSTATE InvalidM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i493 i676 numeral_One) done
   show goal38_4: "HSTATE InvalidM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i493 i676 numeral_One) done
   show goal38_5: "HSTATE InvalidM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 i665 i676 nextGOPending_HostInvalidRdShared
    numeral_One) done
   show goal38_6: "HSTATE InvalidM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i493 i676 numeral_One) done
   show goal38_7: "HSTATE InvalidM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i493 i676 numeral_One) done
   show goal38_8: "HSTATE InvalidM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i493 i676 numeral_One) done
   show goal38_9: "HSTATE InvalidM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) HOST_State.distinct(3) HSTATE_invariant3 HostInvalidRdShared_HSTATE
    minus_req_nextReqIs_False_swmrp_rule_2_0 numeral_One) done
   show goal38_10: "HSTATE InvalidM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal38_11: "HSTATE InvalidM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal38_12: "HSTATE InvalidM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i493 i676 numeral_One) done
qed
  show goal_39: "HSTATE InvalidM T ∧ nextReqIs RdOwn T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ SWMR ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
    proof (intro impconjI)
   show goal39_1: "HSTATE InvalidM T ∧ nextReqIs RdOwn T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ SWMR ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_various_forms5 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def
    GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HostInvalidRdOwn'_devcache_invariant2 IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def
    IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def
    MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def
    RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i493 numeral_One) done
   show goal39_2: "HSTATE InvalidM T ∧ nextReqIs RdOwn T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
      apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 i603 i676 numeral_One) done
   show goal39_3: "HSTATE InvalidM T ∧ nextReqIs RdOwn T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i676
    i823 numeral_One) done
   show goal39_4: "HSTATE InvalidM T ∧ nextReqIs RdOwn T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i676
    i823 numeral_One) done
   show goal39_5: "HSTATE InvalidM T ∧ nextReqIs RdOwn T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i676
    i823 numeral_One) done
   show goal39_6: "HSTATE InvalidM T ∧ nextReqIs RdOwn T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i676
    i823 numeral_One) done
   show goal39_7: "HSTATE InvalidM T ∧ nextReqIs RdOwn T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i676
    i823 numeral_One) done
   show goal39_8: "HSTATE InvalidM T ∧ nextReqIs RdOwn T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i676
    i823 numeral_One) done
   show goal39_9: "HSTATE InvalidM T ∧ nextReqIs RdOwn T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal39_10: "HSTATE InvalidM T ∧ nextReqIs RdOwn T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal39_11: "HSTATE InvalidM T ∧ nextReqIs RdOwn T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal39_12: "HSTATE InvalidM T ∧ nextReqIs RdOwn T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i676
    i823 numeral_One) done
qed
  show goal_40: "HSTATE SharedM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ SWMR ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
    proof (intro impconjI)
   show goal40_1: "HSTATE SharedM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ SWMR ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HostInvalidRdShared'_devcache_invariant1
    HostInvalidRdShared'_devcache_invariant2 IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def
    IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def
    MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def
    MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def
    OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def
    SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def SWMR_def
    i0 numeral_One) done
   show goal40_2: "HSTATE SharedM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i22 numeral_One) done
   show goal40_3: "HSTATE SharedM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i22 numeral_One) done
   show goal40_4: "HSTATE SharedM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i22 numeral_One) done
   show goal40_5: "HSTATE SharedM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i22 numeral_One) done
   show goal40_6: "HSTATE SharedM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i22 numeral_One) done
   show goal40_7: "HSTATE SharedM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i22 numeral_One) done
   show goal40_8: "HSTATE SharedM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i22 numeral_One) done
   show goal40_9: "HSTATE SharedM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal40_10: "HSTATE SharedM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal40_11: "HSTATE SharedM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal40_12: "HSTATE SharedM T ∧ nextReqIs RdShared T 0 ∧ GTS T ((0 + 1) mod 2) ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= SharedM] [ 0 +=reqresp GO Shared nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdShared_otherside_invariant2 CSTATE_HostInvalidRdShared_otherside_invariant3
    i22 numeral_One) done
qed
  show goal_41: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ SWMR ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ])"
    proof (intro impconjI)
   show goal41_1: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ SWMR ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant3 CSTATE_various_forms2 CSTATE_various_forms4
    DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def
    GO_COL_def HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def
    MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def
    SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal41_2: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal41_3: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal41_4: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal41_5: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal41_6: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal41_7: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal41_8: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal41_9: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(3) HSTATE_invariant4
    HostShared_CleanEvict_NotLastDrop_HSTATE IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def
    IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def
    MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def
    MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def
    OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def
    SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def
    minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) done
   show goal41_10: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(3) HSTATE_invariant3
    HostShared_CleanEvict_NotLastDrop_HSTATE IIA_ROW_def IMAD_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def
    IMD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPINV_COL_def
    minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) done
   show goal41_11: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(3) HSTATE_invariant3
    HostShared_CleanEvict_NotLastDrop_HSTATE IIA_ROW_def IMAD_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def
    IMD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPINV_COL_def
    minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) done
   show goal41_12: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO_WritePullDrop Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastDrop_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
qed
  show goal_42: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ SWMR ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
    proof (intro impconjI)
   show goal42_1: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ SWMR ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 CSTATE_various_forms2 CSTATE_various_forms4
    DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def
    GO_COL_def HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def
    MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def
    SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal42_2: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal42_3: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal42_4: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal42_5: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal42_6: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal42_7: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal42_8: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 i22 numeral_One) done
   show goal42_9: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal42_10: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal42_11: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal42_12: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T ((0 + 1) mod 2) ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 i22 numeral_One) done
qed
  show goal_43: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ SWMR ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
    proof (intro impconjI)
   show goal43_1: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ SWMR ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostSide_rule_3_1 CSTATE_disj1 CSTATE_various_forms4 DATA_COL_def
    DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def
    HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def
    MEM_SD_ROW_def MEM_S_ROW_def MESI_State.distinct(163,175,179,5,95) MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def
    OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def
    SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i556
    lastSharer_def numeral_One) done
   show goal43_2: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def
    GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def
    IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def
    MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def
    MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def
    STORE_COL_def i22 numeral_One) done
   show goal43_3: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def
    GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def
    IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def
    MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def
    MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def
    STORE_COL_def i22 numeral_One) done
   show goal43_4: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def
    GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def
    IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def
    MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def
    MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def
    STORE_COL_def i22 numeral_One) done
   show goal43_5: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def
    GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def
    IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def
    MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def
    MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def
    STORE_COL_def i22 numeral_One) done
   show goal43_6: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def
    GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def
    IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def
    MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def
    MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def
    STORE_COL_def i22 numeral_One) done
   show goal43_7: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def
    GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def
    IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def
    MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def
    MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def
    STORE_COL_def i22 numeral_One) done
   show goal43_8: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 i22 numeral_One) done
   show goal43_9: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal43_10: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal43_11: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal43_12: "HSTATE SharedM T ∧ nextReqIs CleanEvict T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 i22 numeral_One) done
qed
  show goal_44: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T 1 ⟶ SWMR ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
    proof (intro impconjI)
   show goal44_1: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T 1 ⟶ SWMR ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant3 CSTATE_def
    CSTATE_various_forms1 CSTATE_various_forms2 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def IMAI_ROW_def
    IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def
    MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MESI_State.distinct(137)
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 i946 numeral_One) done
   show goal44_2: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T 1 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal44_3: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T 1 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal44_4: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T 1 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal44_5: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T 1 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal44_6: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T 1 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal44_7: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T 1 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal44_8: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T 1 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal44_9: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T 1 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(3) HSTATE_invariant3
    HostShared_CleanEvictNoData_NotLast_HSTATE IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def
    IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def
    MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def
    MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def
    OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def
    SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def
    minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) done
   show goal44_10: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T 1 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HostShared_CleanEvictNoData_NotLast_nextSnpRespIs_sameside IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def
    IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def
    MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def
    MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def
    M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def
    SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i950
    minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) done
   show goal44_11: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T 1 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(3) HSTATE_invariant3
    HostShared_CleanEvictNoData_NotLast_HSTATE HostShared_CleanEvictNoData_NotLast_nextSnpRespIs_sameside IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i950 numeral_One) done
   show goal44_12: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ ¬ lastSharer T ∧ GTS T ((0 + 1) mod 2) ∧ ¬ CSTATE IIA T 1 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 5 sHost= SharedM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_NotLast_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
qed
  show goal_45: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ SWMR ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
    proof (intro impconjI)
   show goal45_1: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ SWMR ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostSide_rule_3_1 CSTATE_disj1 CSTATE_various_forms4 DATA_COL_def
    DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def
    HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def
    MEM_SD_ROW_def MEM_S_ROW_def MESI_State.distinct(179) MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def
    RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i22 i518 i727
    lastSharer_def numeral_One) done
   show goal45_2: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal45_3: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal45_4: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal45_5: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant2 DATA_COL_def
    DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def
    HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def
    MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def
    SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i22 i729
    nextGOPending_HostShared_CleanEvictNoData_Last numeral_One) done
   show goal45_6: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal45_7: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal45_8: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal45_9: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal45_10: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) HostShared_CleanEvictNoData_Last_nextSnpRespIs_sameside i950
    minus_req_nextReqIs_False_swmrp_rule_1_0 numeral_One) done
   show goal45_11: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal45_12: "HSTATE SharedM T ∧ nextReqIs CleanEvictNoData T 0 ∧ lastSharer T ∧ GTS T ((0 + 1) mod 2) ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 5 sHost= InvalidM] [ 0 +=reqresp GO Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvictNoData_Last_otherside_invariant3 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def
    GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def
    IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def
    ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def
    MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
qed
  show goal_46: "HSTATE SharedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ SWMR ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
    proof (intro impconjI)
   show goal46_1: "HSTATE SharedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ SWMR ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 CSTATE_def
    CSTATE_various_forms1 CSTATE_various_forms2 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def IMAI_ROW_def
    IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def
    MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MESI_State.distinct(121)
    MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def
    RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def
    SNPINV_COL_def STORE_COL_def i22 numeral_One) done
   show goal46_2: "HSTATE SharedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 i22 numeral_One) done
   show goal46_3: "HSTATE SharedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 i22 numeral_One) done
   show goal46_4: "HSTATE SharedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 i22 numeral_One) done
   show goal46_5: "HSTATE SharedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 i22 numeral_One) done
   show goal46_6: "HSTATE SharedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 i22 numeral_One) done
   show goal46_7: "HSTATE SharedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 i22 numeral_One) done
   show goal46_8: "HSTATE SharedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 i22 numeral_One) done
   show goal46_9: "HSTATE SharedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal46_10: "HSTATE SharedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal46_11: "HSTATE SharedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal46_12: "HSTATE SharedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 5 sHost= SB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant2
    CSTATE_HostShared_CleanEvict_NotLastData_otherside_invariant3 i22 numeral_One) done
qed
  show goal_47: "HSTATE ModifiedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE MIA T 0 ⟶ SWMR ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
    proof (intro impconjI)
   show goal47_1: "HSTATE ModifiedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE MIA T 0 ⟶ SWMR ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostModified_DirtyEvict_otherside_invariant2 CSTATE_various_forms4 DATA_COL_def
    DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def
    HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def
    MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def
    SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i107 i595 numeral_One) done
   show goal47_2: "HSTATE ModifiedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE MIA T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
      apply (smt (verit) CSTATE_HostModified_DirtyEvict_otherside_invariant2 i595 i75 numeral_One) done
   show goal47_3: "HSTATE ModifiedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE MIA T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal47_4: "HSTATE ModifiedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE MIA T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal47_5: "HSTATE ModifiedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE MIA T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostModified_DirtyEvict_otherside_invariant2
    CSTATE_HostModified_DirtyEvict_otherside_invariant3 C_not_C_msg_def i49 i595 nextGOPending_HostModifiedDirtyEvict
    numeral_One) done
   show goal47_6: "HSTATE ModifiedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE MIA T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostModified_DirtyEvict_otherside_invariant2 i595 minus_req_nextReqIs_False_swmrp_rule_1_0
    numeral_One) done
   show goal47_7: "HSTATE ModifiedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE MIA T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal47_8: "HSTATE ModifiedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE MIA T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostModified_DirtyEvict_otherside_invariant2 i595 minus_req_nextReqIs_False_swmrp_rule_1_0
    numeral_One) done
   show goal47_9: "HSTATE ModifiedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE MIA T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal47_10: "HSTATE ModifiedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE MIA T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal47_11: "HSTATE ModifiedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE MIA T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal47_12: "HSTATE ModifiedM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE MIA T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 5 sHost= ID] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
qed
  show goal_48: "HSTATE ModifiedM T ∧ nextReqIs RdShared T 0 ⟶ SWMR ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ])"
    proof (intro impconjI)
   show goal48_1: "HSTATE ModifiedM T ∧ nextReqIs RdShared T 0 ⟶ SWMR ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_various_forms5 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def
    GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HostModifiedRdShared'_devcache_invariant1 HostModifiedRdShared'_devcache_invariant2 IIA_ROW_def IMAD_ROW_def
    IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def
    MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def
    MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def
    STORE_COL_def SWMR_def i0 i107 numeral_One one_mod_two_eq_one plus_nat.add_0) done
   show goal48_2: "HSTATE ModifiedM T ∧ nextReqIs RdShared T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostModifiedRdShared_otherside_invariant3 CSTATE_X_rd_invariant1 i74 i75 numeral_One
    one_mod_two_eq_one plus_nat.add_0) done
   show goal48_3: "HSTATE ModifiedM T ∧ nextReqIs RdShared T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal48_4: "HSTATE ModifiedM T ∧ nextReqIs RdShared T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal48_5: "HSTATE ModifiedM T ∧ nextReqIs RdShared T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostModifiedRdShared_otherside_invariant3 CSTATE_X_rd_invariant1
    CSTATE_inequality_invariant C_msg_state_def C_not_C_msg_def i47 i49 i72 mod_add_self1 mod_by_0
    nextGOPending_General_rule_19_1 nextGOPending_HostModifiedRdShared numeral_One one_mod_two_eq_one) done
   show goal48_6: "HSTATE ModifiedM T ∧ nextReqIs RdShared T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostModifiedRdShared_otherside_invariant2 CSTATE_inequality_invariant C_msg_state_def i47
    i72 minus_req_nextReqIs_False_swmrp_rule_3_0 nextReqIs_otherside_rule_4_0 numeral_One one_mod_two_eq_one
    plus_nat.add_0) done
   show goal48_7: "HSTATE ModifiedM T ∧ nextReqIs RdShared T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostModifiedRdShared_otherside_invariant3 CSTATE_inequality_invariant C_msg_state_def i47
    i72 minus_req_nextReqIs_False_swmrp_rule_3_0 nextReqIs_otherside_rule_4_0 numeral_One one_mod_two_eq_one
    plus_nat.add_0) done
   show goal48_8: "HSTATE ModifiedM T ∧ nextReqIs RdShared T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostModifiedRdShared_otherside_invariant2 CSTATE_inequality_invariant C_msg_state_def i47
    i72 minus_req_nextReqIs_False_swmrp_rule_3_0 nextReqIs_otherside_rule_4_0 numeral_One one_mod_two_eq_one
    plus_nat.add_0) done
   show goal48_9: "HSTATE ModifiedM T ∧ nextReqIs RdShared T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal48_10: "HSTATE ModifiedM T ∧ nextReqIs RdShared T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal48_11: "HSTATE ModifiedM T ∧ nextReqIs RdShared T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal48_12: "HSTATE ModifiedM T ∧ nextReqIs RdShared T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ (0 + 1) mod 2 +=snp SnpData nextReqID T 0] [ 5 sHost= SAD] [ 0 -=req ])"
     sorry (*failed to find proof*)
qed
  show goal_49: "HSTATE ModifiedM T ∧ nextReqIs RdOwn T 0 ⟶ SWMR ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ])"
    proof (intro impconjI)
   show goal49_1: "HSTATE ModifiedM T ∧ nextReqIs RdOwn T 0 ⟶ SWMR ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_X_rd_invariant1 CSTATE_general_rule_8_0 CSTATE_various_forms2
    CSTATE_various_forms4 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def IMAI_ROW_def
    IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def
    MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def
    MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def
    STORE_COL_def i107 mod_add_self1 mod_by_0 numeral_One one_mod_two_eq_one) done
   show goal49_2: "HSTATE ModifiedM T ∧ nextReqIs RdOwn T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostsModifiedRdOwn_otherside_invariant3 CSTATE_X_rd_invariant1 i74 i75 mod_add_self1
    mod_by_0 not_mod_2_eq_0_eq_1 numeral_One one_mod_two_eq_one) done
   show goal49_3: "HSTATE ModifiedM T ∧ nextReqIs RdOwn T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal49_4: "HSTATE ModifiedM T ∧ nextReqIs RdOwn T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal49_5: "HSTATE ModifiedM T ∧ nextReqIs RdOwn T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostsModifiedRdOwn_otherside_invariant3 i494 i823 mod_add_self1 mod_by_0 numeral_One
    one_mod_two_eq_one) done
   show goal49_6: "HSTATE ModifiedM T ∧ nextReqIs RdOwn T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal49_7: "HSTATE ModifiedM T ∧ nextReqIs RdOwn T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostsModifiedRdOwn_otherside_invariant3 i823 minus_req_nextReqIs_False_swmrp_rule_3_0
    mod_add_self1 mod_by_0 numeral_One one_mod_two_eq_one) done
   show goal49_8: "HSTATE ModifiedM T ∧ nextReqIs RdOwn T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal49_9: "HSTATE ModifiedM T ∧ nextReqIs RdOwn T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal49_10: "HSTATE ModifiedM T ∧ nextReqIs RdOwn T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal49_11: "HSTATE ModifiedM T ∧ nextReqIs RdOwn T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal49_12: "HSTATE ModifiedM T ∧ nextReqIs RdOwn T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 5 sHost= MAD] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostsModifiedRdOwn_otherside_invariant3 i823 minus_req_nextReqIs_False_swmrp_rule_3_0
    mod_add_self1 mod_by_0 numeral_One one_mod_two_eq_one) done
qed
  show goal_50: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Shared T ((0 + 1) mod 2) ⟶ SWMR (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ])"
    proof (intro impconjI)
   show goal50_1: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Shared T ((0 + 1) mod 2) ⟶ SWMR (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal50_2: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Shared T ((0 + 1) mod 2) ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal50_3: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Shared T ((0 + 1) mod 2) ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal50_4: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Shared T ((0 + 1) mod 2) ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal50_5: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Shared T ((0 + 1) mod 2) ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal50_6: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Shared T ((0 + 1) mod 2) ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal50_7: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Shared T ((0 + 1) mod 2) ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal50_8: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Shared T ((0 + 1) mod 2) ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal50_9: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Shared T ((0 + 1) mod 2) ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal50_10: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Shared T ((0 + 1) mod 2) ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal50_11: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Shared T ((0 + 1) mod 2) ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal50_12: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Shared T ((0 + 1) mod 2) ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD (sendHostData 0 MA T [ (0 + 1) mod 2 +=snp SnpInv nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
qed
  show goal_51: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ SWMR ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
    proof (intro impconjI)
   show goal51_1: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ SWMR ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_various_forms5 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def
    GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HostInvalidRdOwn'_devcache_invariant1 HostInvalidRdOwn'_devcache_invariant2 IIA_ROW_def IMAD_ROW_def IMAI_ROW_def
    IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def
    MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def
    MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def
    STORE_COL_def SWMR_def i0 i22 numeral_One) done
   show goal51_2: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i22 i823
    numeral_One) done
   show goal51_3: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i22 i823
    numeral_One) done
   show goal51_4: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i22 i823
    numeral_One) done
   show goal51_5: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i22 i823
    numeral_One) done
   show goal51_6: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i22 i823
    numeral_One) done
   show goal51_7: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i22 i823
    numeral_One) done
   show goal51_8: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i22 i823
    numeral_One) done
   show goal51_9: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) C_msg_not_def i26 minus_req_nextReqIs_False_swmrp_rule_2_0 mod_add_self1 mod_by_0
    nextReqIs_HostInvalidRdOwn_IMAD_invariant2 numeral_One one_mod_two_eq_one) done
   show goal51_10: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) C_msg_not_def i26 minus_req_nextReqIs_False_swmrp_rule_2_0 mod_add_self1 mod_by_0
    nextReqIs_HostInvalidRdOwn_IMAD_invariant2 numeral_One one_mod_two_eq_one) done
   show goal51_11: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) C_msg_not_def i26 minus_req_nextReqIs_False_swmrp_rule_2_0 mod_add_self1 mod_by_0
    nextReqIs_HostInvalidRdOwn_IMAD_invariant2 numeral_One one_mod_two_eq_one) done
   show goal51_12: "HSTATE SharedM T ∧ nextReqIs RdOwn T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 0 +=hostdata nextReqID T 0] [ 5 sHost= ModifiedM] [ 0 +=reqresp GO Modified nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostInvalidRdOwn_otherside_invariant2 CSTATE_HostInvalidRdOwn_otherside_invariant3 i22 i823
    numeral_One) done
qed
  show goal_52: "HSTATE SD T ∧ nextDTHDataFrom 0 T ⟶ SWMR ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
    proof (intro impconjI)
   show goal52_1: "HSTATE SD T ∧ nextDTHDataFrom 0 T ⟶ SWMR ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal52_2: "HSTATE SD T ∧ nextDTHDataFrom 0 T ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal52_3: "HSTATE SD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal52_4: "HSTATE SD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal52_5: "HSTATE SD T ∧ nextDTHDataFrom 0 T ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal52_6: "HSTATE SD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal52_7: "HSTATE SD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal52_8: "HSTATE SD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal52_9: "HSTATE SD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(3,79) HSTATE_invariant4
    HostSBData_HSTATE IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def
    MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def
    SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i962 nat_to_id.simps(1) numeral_One) done
   show goal52_10: "HSTATE SD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(3,79) HSTATE_invariant4
    HostSBData_HSTATE IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def
    MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def
    SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i962 nat_to_id.simps(1) numeral_One) done
   show goal52_11: "HSTATE SD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(3,79) HSTATE_invariant4
    HostSBData_HSTATE IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def
    MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def
    SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i962 nat_to_id.simps(1) numeral_One) done
   show goal52_12: "HSTATE SD T ∧ nextDTHDataFrom 0 T ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
qed
  show goal_53: "HSTATE SAD T ∧ nextDTHDataFrom 0 T ⟶ SWMR ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ])"
    proof (intro impconjI)
   show goal53_1: "HSTATE SAD T ∧ nextDTHDataFrom 0 T ⟶ SWMR ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal53_2: "HSTATE SAD T ∧ nextDTHDataFrom 0 T ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal53_3: "HSTATE SAD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal53_4: "HSTATE SAD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal53_5: "HSTATE SAD T ∧ nextDTHDataFrom 0 T ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal53_6: "HSTATE SAD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal53_7: "HSTATE SAD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal53_8: "HSTATE SAD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal53_9: "HSTATE SAD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(11) HSTATE_equals_sHost
    IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def INVALID_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def LOAD_COL_def MEM_DATA_COL_def MEM_E_ROW_def
    MEM_ID_ROW_def MEM_I_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def
    MEM_RDS_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def
    M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def
    SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def
    hstate_invariants(16) i733 nat_to_id.simps(1) numeral_One) done
   show goal53_10: "HSTATE SAD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(11) HSTATE_equals_sHost
    IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def
    ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def LOAD_COL_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_I_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def
    RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def hstate_invariants(16)
    i733 nat_to_id.simps(1) numeral_One) done
   show goal53_11: "HSTATE SAD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(11) HSTATE_equals_sHost
    IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def
    ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def LOAD_COL_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_I_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def
    RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def hstate_invariants(16)
    i733 nat_to_id.simps(1) numeral_One) done
   show goal53_12: "HSTATE SAD T ∧ nextDTHDataFrom 0 T ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= SA] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
qed
  show goal_54: "HSTATE MD T ∧ nextDTHDataFrom 0 T ⟶ SWMR ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
    proof (intro impconjI)
   show goal54_1: "HSTATE MD T ∧ nextDTHDataFrom 0 T ⟶ SWMR ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal54_2: "HSTATE MD T ∧ nextDTHDataFrom 0 T ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal54_3: "HSTATE MD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal54_4: "HSTATE MD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal54_5: "HSTATE MD T ∧ nextDTHDataFrom 0 T ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal54_6: "HSTATE MD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal54_7: "HSTATE MD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal54_8: "HSTATE MD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal54_9: "HSTATE MD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal54_10: "HSTATE MD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal54_11: "HSTATE MD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal54_12: "HSTATE MD T ∧ nextDTHDataFrom 0 T ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
qed
  show goal_55: "HSTATE ID T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ (CSTATE IIA T ((0 + 1) mod 2) ∨ CSTATE Invalid T ((0 + 1) mod 2) ∨ CSTATE SIA T ((0 + 1) mod 2)) ⟶ SWMR ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
    proof (intro impconjI)
   show goal55_1: "HSTATE ID T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ (CSTATE IIA T ((0 + 1) mod 2) ∨ CSTATE Invalid T ((0 + 1) mod 2) ∨ CSTATE SIA T ((0 + 1) mod 2)) ⟶ SWMR ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal55_2: "HSTATE ID T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ (CSTATE IIA T ((0 + 1) mod 2) ∨ CSTATE Invalid T ((0 + 1) mod 2) ∨ CSTATE SIA T ((0 + 1) mod 2)) ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal55_3: "HSTATE ID T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ (CSTATE IIA T ((0 + 1) mod 2) ∨ CSTATE Invalid T ((0 + 1) mod 2) ∨ CSTATE SIA T ((0 + 1) mod 2)) ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal55_4: "HSTATE ID T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ (CSTATE IIA T ((0 + 1) mod 2) ∨ CSTATE Invalid T ((0 + 1) mod 2) ∨ CSTATE SIA T ((0 + 1) mod 2)) ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal55_5: "HSTATE ID T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ (CSTATE IIA T ((0 + 1) mod 2) ∨ CSTATE Invalid T ((0 + 1) mod 2) ∨ CSTATE SIA T ((0 + 1) mod 2)) ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal55_6: "HSTATE ID T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ (CSTATE IIA T ((0 + 1) mod 2) ∨ CSTATE Invalid T ((0 + 1) mod 2) ∨ CSTATE SIA T ((0 + 1) mod 2)) ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal55_7: "HSTATE ID T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ (CSTATE IIA T ((0 + 1) mod 2) ∨ CSTATE Invalid T ((0 + 1) mod 2) ∨ CSTATE SIA T ((0 + 1) mod 2)) ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal55_8: "HSTATE ID T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ (CSTATE IIA T ((0 + 1) mod 2) ∨ CSTATE Invalid T ((0 + 1) mod 2) ∨ CSTATE SIA T ((0 + 1) mod 2)) ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal55_9: "HSTATE ID T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ (CSTATE IIA T ((0 + 1) mod 2) ∨ CSTATE Invalid T ((0 + 1) mod 2) ∨ CSTATE SIA T ((0 + 1) mod 2)) ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal55_10: "HSTATE ID T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ (CSTATE IIA T ((0 + 1) mod 2) ∨ CSTATE Invalid T ((0 + 1) mod 2) ∨ CSTATE SIA T ((0 + 1) mod 2)) ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal55_11: "HSTATE ID T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ (CSTATE IIA T ((0 + 1) mod 2) ∨ CSTATE Invalid T ((0 + 1) mod 2) ∨ CSTATE SIA T ((0 + 1) mod 2)) ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal55_12: "HSTATE ID T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ (CSTATE IIA T ((0 + 1) mod 2) ∨ CSTATE Invalid T ((0 + 1) mod 2) ∨ CSTATE SIA T ((0 + 1) mod 2)) ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
qed
  show goal_56: "HSTATE MAD T ∧ nextDTHDataFrom 0 T ⟶ SWMR ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ])"
    proof (intro impconjI)
   show goal56_1: "HSTATE MAD T ∧ nextDTHDataFrom 0 T ⟶ SWMR ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal56_2: "HSTATE MAD T ∧ nextDTHDataFrom 0 T ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal56_3: "HSTATE MAD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal56_4: "HSTATE MAD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal56_5: "HSTATE MAD T ∧ nextDTHDataFrom 0 T ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal56_6: "HSTATE MAD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal56_7: "HSTATE MAD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal56_8: "HSTATE MAD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal56_9: "HSTATE MAD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(17) HSTATE_equals_sHost
    IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def INVALID_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def LOAD_COL_def MEM_DATA_COL_def MEM_E_ROW_def
    MEM_ID_ROW_def MEM_I_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def
    MEM_RDS_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def
    M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def
    SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def
    hstate_invariants(16) i835 nat_to_id.simps(1) numeral_One) done
   show goal56_10: "HSTATE MAD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(17) HSTATE_equals_sHost
    IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def
    ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def
    MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def
    MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def
    RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def
    SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def hstate_invariants(16) i835 nat_to_id.simps(1)
    numeral_One) done
   show goal56_11: "HSTATE MAD T ∧ nextDTHDataFrom 0 T ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HOST_State.distinct(17) HSTATE_equals_sHost
    IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def
    ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def
    MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def
    MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def
    RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def
    SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def hstate_invariants(16) i835 nat_to_id.simps(1)
    numeral_One) done
   show goal56_12: "HSTATE MAD T ∧ nextDTHDataFrom 0 T ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ nat_to_id ((0 + 1) mod 2) +=h2dd DTH_HTD (getDTHDataOrMakeup (dthdatas1 T))] [ =hv getSpecificValD2H (getDTHDataOrMakeup (dthdatas1 T))] [ 5 sHost= MA] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
qed
  show goal_57: "HSTATE SAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ SWMR ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
    proof (intro impconjI)
   show goal57_1: "HSTATE SAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ SWMR ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HostSADRspSFwdM'_devcache_invariant1
    HostSADRspSFwdM'_devcache_invariant2 IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def
    IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def
    MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def
    RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def SWMR_def i0 numeral_One
    one_mod_two_eq_one plus_nat.add_0) done
   show goal57_2: "HSTATE SAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal57_3: "HSTATE SAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal57_4: "HSTATE SAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
     
  apply (smt (verit) CSTATE_HostSADRspSFwdM_otherside_invariant2 CSTATE_HostSADRspSFwdM_otherside_invariant3
    HSTATE_equals_sHost hstate_invariants(15) i23 numeral_One one_mod_two_eq_one plus_nat.add_0) done
   show goal57_5: "HSTATE SAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal57_6: "HSTATE SAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal57_7: "HSTATE SAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal57_8: "HSTATE SAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal57_9: "HSTATE SAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal57_10: "HSTATE SAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal57_11: "HSTATE SAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal57_12: "HSTATE SAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
     
  apply (smt (verit) CSTATE_HostSADRspSFwdM_otherside_invariant2 C_H_state_def i17 i392 i437 i495 i844 mod_add_self1
    mod_by_0 nextReqIs_HostSADRspSFwdM_IMAD_invariant1 nextReqIs_HostSADRspSFwdM_IMAD_invariant2 numeral_One
    one_mod_two_eq_one) done
qed
  show goal_58: "HSTATE SAD T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ SWMR ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] ) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
    proof (intro impconjI)
   show goal58_1: "HSTATE SAD T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ SWMR ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_various_forms6 DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def
    GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def
    HostSADRspSFwdM'_devcache_invariant1 HostSADRspSFwdM'_devcache_invariant2 IIA_ROW_def IMAD_ROW_def IMAI_ROW_def
    IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def
    MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def
    MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def
    RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def
    STORE_COL_def SWMR_def i0 i789 numeral_One one_mod_two_eq_one plus_nat.add_0) done
   show goal58_2: "HSTATE SAD T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal58_3: "HSTATE SAD T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal58_4: "HSTATE SAD T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
     
  apply (smt (verit) CSTATE_HostSADRspSFwdM_otherside_invariant2 CSTATE_HostSADRspSFwdM_otherside_invariant3
    HSTATE_equals_sHost hstate_invariants(15) i23 i789 numeral_One one_mod_two_eq_one plus_nat.add_0) done
   show goal58_5: "HSTATE SAD T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal58_6: "HSTATE SAD T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
     
  apply (smt (verit) CSTATE_HostSADRspSFwdM_otherside_invariant2 CSTATE_HostSADRspSFwdM_otherside_invariant3
    CSTATE_disj1 C_msg_state_def i437 i47 i789 nextReqIs_HostSADRspSFwdM_IMAD_invariant1 numeral_One one_mod_two_eq_one
    plus_nat.add_0) done
   show goal58_7: "HSTATE SAD T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal58_8: "HSTATE SAD T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
     
  apply (smt (verit) CSTATE_HostSADRspSFwdM_otherside_invariant2 CSTATE_HostSADRspSFwdM_otherside_invariant3
    CSTATE_disj1 C_msg_state_def i437 i47 i789 nextReqIs_HostSADRspSFwdM_IMAD_invariant1 numeral_One one_mod_two_eq_one
    plus_nat.add_0) done
   show goal58_9: "HSTATE SAD T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal58_10: "HSTATE SAD T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal58_11: "HSTATE SAD T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal58_12: "HSTATE SAD T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SD] [ 0 -=snpresp ] )"
     
  apply (smt (verit) CSTATE_HostSADRspSFwdM_otherside_invariant2 i437 i495 i789 mod_add_self1 mod_by_0
    nextReqIs_HostSADRspSFwdM_IMAD_invariant2 numeral_One one_mod_two_eq_one) done
qed
  show goal_59: "HSTATE MAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ SWMR ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] ) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] ) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] ) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] ) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] ) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] ) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] ) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] ) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] ) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] ) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] ) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] )"
    proof (intro impconjI)
   show goal59_1: "HSTATE MAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ SWMR ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] )"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HostMADRspIFwdM'_devcache_invariant1
    HostMADRspIFwdM'_devcache_invariant2 IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def
    IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def
    MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def
    RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def SWMR_def i0 numeral_One
    one_mod_two_eq_one plus_nat.add_0) done
   show goal59_2: "HSTATE MAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal59_3: "HSTATE MAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal59_4: "HSTATE MAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal59_5: "HSTATE MAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal59_6: "HSTATE MAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal59_7: "HSTATE MAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal59_8: "HSTATE MAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal59_9: "HSTATE MAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal59_10: "HSTATE MAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal59_11: "HSTATE MAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal59_12: "HSTATE MAD T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= MD] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
qed
  show goal_60: "HSTATE MA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ SWMR ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
    proof (intro impconjI)
   show goal60_1: "HSTATE MA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ SWMR ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HostMARspIHitSE'_devcache_invariant1
    HostMARspIHitSE'_devcache_invariant2 IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def
    IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def
    MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def
    RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def SWMR_def add_0 i0
    numeral_One one_mod_two_eq_one) done
   show goal60_2: "HSTATE MA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal60_3: "HSTATE MA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal60_4: "HSTATE MA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal60_5: "HSTATE MA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal60_6: "HSTATE MA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal60_7: "HSTATE MA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal60_8: "HSTATE MA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal60_9: "HSTATE MA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal60_10: "HSTATE MA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal60_11: "HSTATE MA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal60_12: "HSTATE MA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
qed
  show goal_61: "HSTATE SA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ SWMR ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
    proof (intro impconjI)
   show goal61_1: "HSTATE SA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ SWMR ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HostSARspSFwdM'_devcache_invariant1
    HostSARspSFwdM'_devcache_invariant2 IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def
    IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def
    MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def
    RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def SWMR_def i0 numeral_One
    one_mod_two_eq_one plus_nat.add_0) done
   show goal61_2: "HSTATE SA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal61_3: "HSTATE SA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal61_4: "HSTATE SA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal61_5: "HSTATE SA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal61_6: "HSTATE SA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal61_7: "HSTATE SA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal61_8: "HSTATE SA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal61_9: "HSTATE SA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal61_10: "HSTATE SA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal61_11: "HSTATE SA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal61_12: "HSTATE SA T ∧ nextSnpRespIs RspIFwdM T 0 ∧ GTS T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
     
  apply (smt (verit) CSTATE_HostSARspSFwdM_otherside_invariant2 CSTATE_HostSARspSFwdM_otherside_invariant3
    C_H_state_def i18 i392 i393 i824 i843 i844 mod_add_self1 mod_by_0 nextReqIs_HostSARspSFwdM_IMAD_invariant1
    nextReqIs_HostSARspSFwdM_IMAD_invariant2 numeral_One one_mod_two_eq_one) done
qed
  show goal_62: "HSTATE SA T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ SWMR ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] ) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
    proof (intro impconjI)
   show goal62_1: "HSTATE SA T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ SWMR ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HostSARspSFwdM'_devcache_invariant1
    HostSARspSFwdM'_devcache_invariant2 IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def
    IMD_ROW_def ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def
    MEM_ID_ROW_def MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def
    MEM_SA_ROW_def MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def
    RSPIFWDM_COL_def RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def
    SIA_ROW_def SMAD_ROW_def SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def SWMR_def i0 numeral_One
    one_mod_two_eq_one plus_nat.add_0) done
   show goal62_2: "HSTATE SA T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal62_3: "HSTATE SA T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal62_4: "HSTATE SA T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal62_5: "HSTATE SA T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal62_6: "HSTATE SA T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal62_7: "HSTATE SA T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal62_8: "HSTATE SA T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal62_9: "HSTATE SA T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal62_10: "HSTATE SA T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal62_11: "HSTATE SA T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal62_12: "HSTATE SA T ∧ nextSnpRespIs RspSFwdM T 0 ∧ GTS T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ (0 + 1) mod 2 +=reqresp GO Shared nextSnoopRespID T 0] [ 5 sHost= SharedM] [ 0 -=snpresp ] )"
     
  apply (smt (verit) CSTATE_HostSARspSFwdM_otherside_invariant2 CSTATE_HostSARspSFwdM_otherside_invariant3 CSTATE_disj1
    C_H_state_def i18 i393 i72 i823 i843 mod_add_self1 mod_by_0 nextReqIs_HostSARspSFwdM_IMAD_invariant1
    nextReqIs_HostSARspSFwdM_IMAD_invariant2 numeral_One one_mod_two_eq_one) done
qed
  show goal_63: "HSTATE IB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ SWMR ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
    proof (intro impconjI)
   show goal63_1: "HSTATE IB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ SWMR ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal63_2: "HSTATE IB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal63_3: "HSTATE IB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal63_4: "HSTATE IB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal63_5: "HSTATE IB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal63_6: "HSTATE IB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal63_7: "HSTATE IB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal63_8: "HSTATE IB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal63_9: "HSTATE IB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal63_10: "HSTATE IB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal63_11: "HSTATE IB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal63_12: "HSTATE IB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ∧ CSTATE Invalid T ((0 + 1) mod 2) ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 5 sHost= InvalidM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
qed
  show goal_64: "HSTATE SB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ SWMR ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
    proof (intro impconjI)
   show goal64_1: "HSTATE SB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ SWMR ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal64_2: "HSTATE SB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal64_3: "HSTATE SB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal64_4: "HSTATE SB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal64_5: "HSTATE SB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal64_6: "HSTATE SB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal64_7: "HSTATE SB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal64_8: "HSTATE SB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal64_9: "HSTATE SB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal64_10: "HSTATE SB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal64_11: "HSTATE SB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal64_12: "HSTATE SB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 5 sHost= SharedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
qed
  show goal_65: "HSTATE MB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ SWMR ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
    proof (intro impconjI)
   show goal65_1: "HSTATE MB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ SWMR ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal65_2: "HSTATE MB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal65_3: "HSTATE MB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal65_4: "HSTATE MB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal65_5: "HSTATE MB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal65_6: "HSTATE MB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal65_7: "HSTATE MB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal65_8: "HSTATE MB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal65_9: "HSTATE MB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal65_10: "HSTATE MB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal65_11: "HSTATE MB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
   show goal65_12: "HSTATE MB T ∧ nextDTHDataFrom 0 T ∧ CSTATE Invalid T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 5 sHost= ModifiedM] [ nat_to_id 0 -=d2hdHead ])"
     sorry (*failed to find proof*)
qed
  show goal_66: "HSTATE InvalidM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ SWMR ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
    proof (intro impconjI)
   show goal66_1: "HSTATE InvalidM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ SWMR ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_HostShared_CleanEvict_Last_otherside_invariant2 CSTATE_various_forms4 DATA_COL_def
    DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def
    HOST_DEVNUM_def IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def
    ISAD_ROW_def ISA_ROW_def ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def
    MEM_MAD_ROW_def MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def
    MEM_SD_ROW_def MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def
    SMAS_ROW_def SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i675 i676 numeral_One) done
   show goal66_2: "HSTATE InvalidM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
      apply (smt (verit) CSTATE_HostShared_CleanEvict_Last_otherside_invariant2 i663 i676 numeral_One) done
   show goal66_3: "HSTATE InvalidM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 i493 i676 numeral_One) done
   show goal66_4: "HSTATE InvalidM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 i493 i676 numeral_One) done
   show goal66_5: "HSTATE InvalidM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostShared_CleanEvict_Last_otherside_invariant2 i665 i676
    nextGOPending_HostShared_CleanEvict_Last numeral_One) done
   show goal66_6: "HSTATE InvalidM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 i493 i676 numeral_One) done
   show goal66_7: "HSTATE InvalidM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 i493 i676 numeral_One) done
   show goal66_8: "HSTATE InvalidM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 i493 i676 numeral_One) done
   show goal66_9: "HSTATE InvalidM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal66_10: "HSTATE InvalidM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal66_11: "HSTATE InvalidM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     sorry (*failed to find proof*)
   show goal66_12: "HSTATE InvalidM T ∧ nextReqIs DirtyEvict T 0 ∧ GTS T ((0 + 1) mod 2) ∧ CSTATE IIA T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ 5 sHost= IB] [ 0 +=reqresp GO_WritePull Invalid nextReqID T 0] [ 0 -=req ])"
     
  apply (smt (verit) CSTATE_HostShared_CleanEvict_Last_otherside_invariant2
    CSTATE_HostShared_CleanEvict_Last_otherside_invariant3 i493 i676 numeral_One) done
qed
  show goal_67: "HSTATE MA T ∧ nextSnpRespIs RspIHitSE T 0 ∧ GTS T 0 ∧ htddatas1 T = [] ⟶ SWMR ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] ) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
    proof (intro impconjI)
   show goal67_1: "HSTATE MA T ∧ nextSnpRespIs RspIHitSE T 0 ∧ GTS T 0 ∧ htddatas1 T = [] ⟶ SWMR ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def CLEANEVICT_LAST_COL_def
    CLEANEVICT_NOLAST_COL_def CSTATE_def DATA_COL_def DIRTYEVICT_COL_def EVICT_COL_def GHOST_REQ_def GOI_COL_def
    GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def GO_COL_def HOST_DEVNUM_def HostMARspIHitSE'_devcache_invariant1
    IIA_ROW_def IMAD_ROW_def IMAI_ROW_def IMASI_ROW_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISAD_ROW_def ISA_ROW_def
    ISDI_ROW_def ISD_ROW_def ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_E_ROW_def MEM_ID_ROW_def MEM_MAD_ROW_def
    MEM_MA_ROW_def MEM_MD_ROW_def MEM_M_ROW_def MEM_RDO_COL_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def
    MEM_S_ROW_def MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def RSPIFWDM_COL_def RSPIHITI_COL_def
    RSPIHITSELAST_COL_def RSPIHITSE_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def
    SMA_ROW_def SNPD_COL_def SNPINV_COL_def STORE_COL_def i845 i889 nextSnpRespIs_invariant1 numeral_One
    one_mod_two_eq_one plus_nat.add_0) done
   show goal67_2: "HSTATE MA T ∧ nextSnpRespIs RspIHitSE T 0 ∧ GTS T 0 ∧ htddatas1 T = [] ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
     
  apply (smt (verit) CACHE_TRANS_def CLEANEVICTNODATA_COL_def CLEANEVICTNODATA_NOLAST_COL_def
    CSTATE_HostMARspIHitSE_otherside_invariant2 CSTATE_different2 CSTATE_disj2 DIRTYEVICT_COL_def GHOST_REQ_def
    GOI_COL_def GOWRITEPULLDROP_COL_def GOWRITEPULL_COL_def IMAS_ROW_def IMA_ROW_def IMD_ROW_def ISA_ROW_def
    ISSUE_EVENT_ROW_def MEM_DATA_COL_def MEM_ID_ROW_def MEM_MD_ROW_def MEM_SAD_ROW_def MEM_SA_ROW_def MEM_SD_ROW_def
    MESI_State.distinct(15,17,187,189,207,209,35,37) MIAD_ROW_def MIA_ROW_def MID_ROW_def M_ROW_def OFFSET_def
    RSPIHITI_COL_def RSPIHITSELAST_COL_def RSPSFWDM_COL_def SHARED_ROW_def SIA_ROW_def SMAD_ROW_def SMAS_ROW_def
    SMA_ROW_def SNPINV_COL_def add_0 i451 nextSnpRespIs_invariant1 numeral_One one_mod_two_eq_one) done
   show goal67_3: "HSTATE MA T ∧ nextSnpRespIs RspIHitSE T 0 ∧ GTS T 0 ∧ htddatas1 T = [] ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal67_4: "HSTATE MA T ∧ nextSnpRespIs RspIHitSE T 0 ∧ GTS T 0 ∧ htddatas1 T = [] ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal67_5: "HSTATE MA T ∧ nextSnpRespIs RspIHitSE T 0 ∧ GTS T 0 ∧ htddatas1 T = [] ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
     
  apply (smt (verit) CSTATE_HostMARspIHitSE_otherside_invariant2 CSTATE_HostMARspIHitSE_otherside_invariant3 i462 i845
    nextGOPending_HostMARspIHitSE nextSnpRespIs_invariant1 numeral_One one_mod_two_eq_one plus_nat.add_0) done
   show goal67_6: "HSTATE MA T ∧ nextSnpRespIs RspIHitSE T 0 ∧ GTS T 0 ∧ htddatas1 T = [] ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal67_7: "HSTATE MA T ∧ nextSnpRespIs RspIHitSE T 0 ∧ GTS T 0 ∧ htddatas1 T = [] ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal67_8: "HSTATE MA T ∧ nextSnpRespIs RspIHitSE T 0 ∧ GTS T 0 ∧ htddatas1 T = [] ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
     
  apply (smt (verit) CSTATE_HostMARspIHitSE_otherside_invariant3 i845 i99 nextReqIs_not_various_forms2
    nextSnpRespIs_invariant1 numeral_One one_mod_two_eq_one plus_nat.add_0 reqs2_HostMARspIHitSE) done
   show goal67_9: "HSTATE MA T ∧ nextSnpRespIs RspIHitSE T 0 ∧ GTS T 0 ∧ htddatas1 T = [] ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal67_10: "HSTATE MA T ∧ nextSnpRespIs RspIHitSE T 0 ∧ GTS T 0 ∧ htddatas1 T = [] ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal67_11: "HSTATE MA T ∧ nextSnpRespIs RspIHitSE T 0 ∧ GTS T 0 ∧ htddatas1 T = [] ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
   show goal67_12: "HSTATE MA T ∧ nextSnpRespIs RspIHitSE T 0 ∧ GTS T 0 ∧ htddatas1 T = [] ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T [ (0 + 1) mod 2 +=reqresp GO Modified nextSnoopRespID T 0] [ 5 sHost= ModifiedM] [ 0 -=snpresp ] )"
     sorry (*failed to find proof*)
qed
  show goal_68: "CSTATE SIAC T 0 ∧ nextGOPendingIs GO T 0 ∧ nextGOPendingState Invalid T 0 ∧ GTS T ((0 + 1) mod 2) ∧ saneSIACGO T 0 ⟶ SWMR ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0]) ∧ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
    proof (intro impconjI)
   show goal68_1: "CSTATE SIAC T 0 ∧ nextGOPendingIs GO T 0 ∧ nextGOPendingState Invalid T 0 ∧ GTS T ((0 + 1) mod 2) ∧ saneSIACGO T 0 ⟶ SWMR ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     
  apply (smt (verit) CLEANEVICT_LAST_COL_def CSTATE_def CSTATE_disj1 CSTATE_various_forms1 CSTATE_various_forms2
    GO_COL_def HOST_DEVNUM_def IMAD_ROW_def IMAI_ROW_def ISAD_ROW_def ISD_ROW_def MEM_MA_ROW_def MEM_M_ROW_def
    MEM_RDO_COL_def MEM_S_ROW_def MESI_State.distinct(5,95) RSPIFWDM_COL_def SIAGO_WritePullDrop_CSTATE_aux
    SNPD_COL_def STORE_COL_def SharedSnpInv'_CSTATE_invariant5 numeral_One) done
   show goal68_2: "CSTATE SIAC T 0 ∧ nextGOPendingIs GO T 0 ∧ nextGOPendingState Invalid T 0 ∧ GTS T ((0 + 1) mod 2) ∧ saneSIACGO T 0 ⟶ C_msg_P_oppo ISD nextHTDDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal68_3: "CSTATE SIAC T 0 ∧ nextGOPendingIs GO T 0 ∧ nextGOPendingState Invalid T 0 ∧ GTS T ((0 + 1) mod 2) ∧ saneSIACGO T 0 ⟶ H_msg_P_same SD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal68_4: "CSTATE SIAC T 0 ∧ nextGOPendingIs GO T 0 ∧ nextGOPendingState Invalid T 0 ∧ GTS T ((0 + 1) mod 2) ∧ saneSIACGO T 0 ⟶ H_msg_P_same SAD nextDTHDataPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal68_5: "CSTATE SIAC T 0 ∧ nextGOPendingIs GO T 0 ∧ nextGOPendingState Invalid T 0 ∧ GTS T ((0 + 1) mod 2) ∧ saneSIACGO T 0 ⟶ C_msg_P_oppo ISAD nextGOPending (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     
  apply (smt (verit) CSTATE_disj1 MESI_State.distinct(143,5) SIAGO_WritePullDrop_CSTATE_aux
    SharedSnpInv'_CSTATE_invariant5 numeral_One) done
   show goal68_6: "CSTATE SIAC T 0 ∧ nextGOPendingIs GO T 0 ∧ nextGOPendingState Invalid T 0 ∧ GTS T ((0 + 1) mod 2) ∧ saneSIACGO T 0 ⟶ H_msg_P_same SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal68_7: "CSTATE SIAC T 0 ∧ nextGOPendingIs GO T 0 ∧ nextGOPendingState Invalid T 0 ∧ GTS T ((0 + 1) mod 2) ∧ saneSIACGO T 0 ⟶ H_msg_P_oppo SharedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal68_8: "CSTATE SIAC T 0 ∧ nextGOPendingIs GO T 0 ∧ nextGOPendingState Invalid T 0 ∧ GTS T ((0 + 1) mod 2) ∧ saneSIACGO T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ CSTATE Modified T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal68_9: "CSTATE SIAC T 0 ∧ nextGOPendingIs GO T 0 ∧ nextGOPendingState Invalid T 0 ∧ GTS T ((0 + 1) mod 2) ∧ saneSIACGO T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextDTHDataPending T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal68_10: "CSTATE SIAC T 0 ∧ nextGOPendingIs GO T 0 ∧ nextGOPendingState Invalid T 0 ∧ GTS T ((0 + 1) mod 2) ∧ saneSIACGO T 0 ⟶ H_msg_P_oppo ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal68_11: "CSTATE SIAC T 0 ∧ nextGOPendingIs GO T 0 ∧ nextGOPendingState Invalid T 0 ∧ GTS T ((0 + 1) mod 2) ∧ saneSIACGO T 0 ⟶ H_msg_P_same ModifiedM (nextReqIs RdShared) (λT i. ¬ nextSnpRespIs RspIFwdM T i) ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
   show goal68_12: "CSTATE SIAC T 0 ∧ nextGOPendingIs GO T 0 ∧ nextGOPendingState Invalid T 0 ∧ GTS T ((0 + 1) mod 2) ∧ saneSIACGO T 0 ⟶ C_H_state IMAD (nextReqIs RdOwn) Modified SD ( T⦇buffer1 := Some (nextGO T 0)⦈ [ 0 s= Invalid] [ 0 -=reqresp ] [ -=i 0])"
     sorry (*failed to find proof*)
qed
qed